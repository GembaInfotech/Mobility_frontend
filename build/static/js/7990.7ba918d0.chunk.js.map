{"version":3,"file":"static/js/7990.7ba918d0.chunk.js","mappings":"yPAmCA,EA9Bc,SAAH,GAAwC,IAAlCA,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAAYC,GAAI,YACzC,GAA0CC,EAAAA,EAAAA,MAAxB,EAAVC,WAA6B,EAAjBC,kBACpB,OACE,iBAAKC,UAAU,6BAA4B,WACzC,gBACEA,UAAS,sEACTC,MAAO,CAAEC,gBAAgB,gCAAkC,UAS3D,kBAAMF,UAAU,aAAY,uCACL,IAAIG,MAAOC,eAAiB,KACjD,iBAAMJ,UAAU,gBAAe,mBAAKK,EAAAA,MAAmB,UAG3D,gBAAKL,UAAU,sEAAqE,UAClF,iBAAKA,UAAU,wBAAuB,WACpC,gBAAKA,UAAU,OAAM,SAAEL,IACtBD,GAAWY,EAAAA,EAAAA,cAAaZ,GAAS,UAAME,IAAU,YAK5D,E,4CCNA,EAlBmB,SAACW,GAAW,IAAD,EACtBC,GAAaC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,MAAMC,OAAOC,IAAI,IAC3DC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gBAAKf,UAAU,qDAAoD,SACxD,OAARc,QAAQ,IAARA,GAAkB,QAAV,EAARA,EAAUE,gBAAQ,OAAlB,EAAoBC,SAAS,qBAC9BT,IAAeU,EAAAA,IACb,SAAC,KAAI,UAAKX,KAEV,SAAC,EAAK,WACJ,SAAC,KAAI,UAAKA,OAKpB,C,2HCpBaY,EAAgB,aAEvBC,EAAO,SAACb,GAWRA,EATFM,KASEN,EARFc,KAFF,IAGEC,EAOEf,EAPFe,OACAtB,EAMEO,EANFP,UACAuB,EAKEhB,EALFgB,SACAtB,EAIEM,EAJFN,MACAuB,EAGEjB,EAHFiB,UAAU,EAGRjB,EAFFkB,UAAAA,OAAS,MAAG,IAAG,IAEblB,EADFmB,SAAAA,OAAQ,MAAG,IAAG,EAGhB,OACE,gBACE1B,UAAW2B,IAAW,OAAQ3B,EAAWsB,GACzCrB,OAAK,kBACAA,GACA,CAAE2B,MAAOJ,IACZ,UAEF,gBACExB,UAAWuB,EACXM,IAAG,UAAKV,EAAa,iBACrBW,IAAG,UAAKzB,EAAAA,GAAQ,SAChBJ,MAAO,CAAE2B,MAAOF,EAAUK,OAAQN,MAI1C,EAEAL,EAAKY,aAAe,CAClBX,KAAM,QACNR,KAAM,OACNW,UAAW,QAWb,K","sources":["components/layout/AuthLayout/Cover.js","components/layout/AuthLayout/index.js","components/template/Logo.js"],"sourcesContent":["import React, { cloneElement } from \"react\";\nimport Logo from \"components/template/Logo\";\nimport { APP_NAME } from \"constants/app.constant\";\nimport { useConfig } from \"components/ui\";\n\nconst Cover = ({ children, content, ...rest }) => {\n  const { themeColor, primaryColorLevel } = useConfig();\n  return (\n    <div className=\"grid lg:grid-cols-2 h-full\">\n      <div\n        className={`flex-col justify-end items-center\t  bg-cover bg-no-repeat\tlg:flex`}\n        style={{ backgroundImage: `url('/img/others/cover.jpg')` }}\n      >\n        {/* <Logo mode=\"dark\" /> */}\n        {/* <div className={`bg-${themeColor}-${primaryColorLevel} opacity-85 p-5`}>\n          <h3 className=\"text-white mb-4\">Mobility Admin Panel</h3>\n          <p className=\"text-lg text-white opacity-80 max-w-[700px]\">\n            Ideal Healthcare\n          </p>\n        </div> */}\n        <span className=\"text-white\">\n          Copyright &copy; {`${new Date().getFullYear()}`}{\" \"}\n          <span className=\"font-semibold\">{`${APP_NAME}`}</span>{\" \"}\n        </span>\n      </div>\n      <div className=\"flex flex-col justify-center items-center bg-white dark:bg-gray-800\">\n        <div className=\"xl:min-w-[450px] px-8\">\n          <div className=\"mb-8\">{content}</div>\n          {children ? cloneElement(children, { ...rest }) : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Cover;\n\n//    bg-center py-6 px-16  bg-${themeColor}-100 dark:bg-gray-800 hidden\n","import React from \"react\";\n// import Side from './Side'\nimport Cover from \"./Cover\";\n// import Simple from \"./Simple\";\nimport View from \"views\";\nimport { useSelector } from \"react-redux\";\nimport { LAYOUT_TYPE_BLANK } from \"constants/theme.constant\";\nimport { useLocation } from \"react-router-dom\";\n\nconst AuthLayout = (props) => {\n  const layoutType = useSelector((state) => state.theme.layout.type);\n  const location = useLocation();\n\n  return (\n    <div className=\"app-layout-blank flex flex-auto flex-col h-[100vh]\">\n      {location?.pathname?.includes(\"/reset-password/\") ||\n      layoutType === LAYOUT_TYPE_BLANK ? (\n        <View {...props} />\n      ) : (\n        <Cover>\n          <View {...props} />\n        </Cover>\n      )}\n    </div>\n  );\n};\n\nexport default AuthLayout;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { APP_NAME } from \"constants/app.constant\";\n\nexport const LOGO_SRC_PATH = \"/img/logo/\";\n\nconst Logo = (props) => {\n  const {\n    type,\n    mode,\n    gutter,\n    className,\n    imgClass,\n    style,\n    logoWidth,\n    imgHeight = 100,\n    imgWidth = 100,\n  } = props;\n\n  return (\n    <div\n      className={classNames(\"logo\", className, gutter)}\n      style={{\n        ...style,\n        ...{ width: logoWidth },\n      }}\n    >\n      <img\n        className={imgClass}\n        src={`${LOGO_SRC_PATH}app-logo2.png`}\n        alt={`${APP_NAME} logo`}\n        style={{ width: imgWidth, height: imgHeight}}\n      />\n    </div>\n  );\n};\n\nLogo.defaultProps = {\n  mode: \"light\",\n  type: \"full\",\n  logoWidth: \"auto\",\n};\n\nLogo.propTypes = {\n  mode: PropTypes.oneOf([\"light\", \"dark\"]),\n  type: PropTypes.oneOf([\"full\", \"streamline\"]),\n  gutter: PropTypes.string,\n  imgClass: PropTypes.string,\n  logoWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default Logo;\n"],"names":["children","content","rest","useConfig","themeColor","primaryColorLevel","className","style","backgroundImage","Date","getFullYear","APP_NAME","cloneElement","props","layoutType","useSelector","state","theme","layout","type","location","useLocation","pathname","includes","LAYOUT_TYPE_BLANK","LOGO_SRC_PATH","Logo","mode","gutter","imgClass","logoWidth","imgHeight","imgWidth","classNames","width","src","alt","height","defaultProps"],"sourceRoot":""}
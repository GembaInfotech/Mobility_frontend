{"version":3,"file":"static/js/8928.d64ea944.chunk.js","mappings":"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","sources":["components/layout/ClassicLayout.js","components/template/SideNav.js","components/template/SideNavToggle.js"],"sourcesContent":["import React from \"react\";\r\nimport Header from \"components/template/Header\";\r\nimport SideNavToggle from \"components/template/SideNavToggle\";\r\nimport Search from \"components/template/Search\";\r\nimport LanguageSelector from \"components/template/LanguageSelector\";\r\nimport Notification from \"components/template/Notification\";\r\nimport SidePanel from \"components/template/SidePanel\";\r\nimport MobileNav from \"components/template/MobileNav\";\r\nimport UserDropdown from \"components/template/UserDropdown\";\r\nimport SideNav from \"components/template/SideNav\";\r\nimport View from \"views\";\r\n\r\nconst HeaderActionsStart = () => {\r\n  return (\r\n    <>\r\n      <MobileNav />\r\n      <SideNavToggle />\r\n      <Search />\r\n    </>\r\n  );\r\n};\r\n\r\nconst HeaderActionsEnd = () => {\r\n  return (\r\n    <>\r\n      <LanguageSelector />\r\n      <Notification />\r\n      <SidePanel />\r\n      <UserDropdown hoverable={false} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst ClassicLayout = (props) => {\r\n  return (\r\n    <div className=\"app-layout-classic flex flex-auto flex-col\">\r\n      <div className=\"flex flex-auto min-w-0\">\r\n        <SideNav />\r\n        <div className=\"flex flex-col flex-auto min-h-screen min-w-0 relative w-full\">\r\n          <Header\r\n            className=\"shadow dark:shadow-2xl\"\r\n            headerStart={<HeaderActionsStart />}\r\n            headerEnd={<HeaderActionsEnd />}\r\n          />\r\n          <div className=\"h-full flex flex-auto flex-col\">\r\n            <View {...props} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClassicLayout;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { ScrollBar } from \"components/ui\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_MODE_DARK,\r\n  NAV_MODE_THEMED,\r\n  NAV_MODE_TRANSPARENT,\r\n  SIDE_NAV_CONTENT_GUTTER,\r\n  LOGO_X_GUTTER,\r\n} from \"constants/theme.constant\";\r\nimport Logo from \"components/template/Logo\";\r\nimport navigationConfig from \"configs/navigation.config\";\r\nimport VerticalMenuContent from \"components/template/VerticalMenuContent\";\r\nimport useResponsive from \"utils/hooks/useResponsive\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { APP_NAME } from \"constants/app.constant\";\r\nimport { LOGO_SRC_PATH } from \"components/template/Logo\";\r\nconst sideNavStyle = {\r\n  width: SIDE_NAV_WIDTH,\r\n  minWidth: SIDE_NAV_WIDTH,\r\n};\r\n\r\nconst sideNavCollapseStyle = {\r\n  width: SIDE_NAV_COLLAPSED_WIDTH,\r\n  minWidth: SIDE_NAV_COLLAPSED_WIDTH,\r\n};\r\n\r\nconst SideNav = () => {\r\n  const themeColor = useSelector((state) => state.theme.themeColor);\r\n  const primaryColorLevel = useSelector(\r\n    (state) => state.theme.primaryColorLevel\r\n  );\r\n  const navMode = useSelector((state) => state.theme.navMode);\r\n  const mode = useSelector((state) => state.theme.mode);\r\n  const direction = useSelector((state) => state.theme.direction);\r\n  const currentRouteKey = useSelector(\r\n    (state) => state.base.common.currentRouteKey\r\n  );\r\n  const sideNavCollapse = useSelector(\r\n    (state) => state.theme.layout.sideNavCollapse\r\n  );\r\n  const userAuthority = useSelector((state) => state.auth.user.authority);\r\n\r\n  const { larger } = useResponsive();\r\n\r\n  const sideNavColor = () => {\r\n    if (navMode === NAV_MODE_THEMED) {\r\n      return `bg-${themeColor}-${primaryColorLevel} side-nav-${navMode}`;\r\n    }\r\n    return `side-nav-${navMode}`;\r\n  };\r\n\r\n  const logoMode = () => {\r\n    if (navMode === NAV_MODE_THEMED) {\r\n      return NAV_MODE_DARK;\r\n    }\r\n\r\n    if (navMode === NAV_MODE_TRANSPARENT) {\r\n      return mode;\r\n    }\r\n\r\n    return navMode;\r\n  };\r\n\r\n  const menuContent = (\r\n    <VerticalMenuContent\r\n      navMode={navMode}\r\n      collapsed={sideNavCollapse}\r\n      navigationTree={navigationConfig}\r\n      routeKey={currentRouteKey}\r\n      userAuthority={userAuthority}\r\n      direction={direction}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {larger.md && (\r\n        <div\r\n          style={sideNavCollapse ? sideNavCollapseStyle : sideNavStyle}\r\n          className={classNames(\r\n            \"side-nav\",\r\n            sideNavColor(),\r\n            !sideNavCollapse && \"side-nav-expand\"\r\n          )}\r\n        >\r\n          <div className={`side-nav-header`}>\r\n            <div className=\"flex items-center bg-blue-900\">\r\n              {!sideNavCollapse && (\r\n                <img\r\n                  className=\"my-5\"\r\n                  src={`${LOGO_SRC_PATH}Admin-logo-white.png`}\r\n                  alt={`${APP_NAME} logo`}\r\n                />\r\n              )}\r\n              {sideNavCollapse && (\r\n                <Logo\r\n                  imgClass=\"my-2\"\r\n                  mode={logoMode()}\r\n                  type={sideNavCollapse ? \"streamline\" : \"full\"}\r\n                  gutter={\r\n                    sideNavCollapse ? SIDE_NAV_CONTENT_GUTTER : LOGO_X_GUTTER\r\n                  }\r\n                  imgHeight={45}\r\n                  imgWidth={50}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n          {sideNavCollapse ? (\r\n            menuContent\r\n          ) : (\r\n            <div className=\"side-nav-content bg-blue-900 \">\r\n              <ScrollBar autoHide direction={direction}>\r\n                {menuContent}\r\n              </ScrollBar>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nSideNav.propTypes = {\r\n  themed: PropTypes.bool,\r\n  darkMode: PropTypes.bool,\r\n  themeColor: PropTypes.string,\r\n};\r\n\r\nSideNav.defaultProps = {\r\n  themed: false,\r\n  darkMode: false,\r\n  themeColor: \"\",\r\n};\r\n\r\nexport default SideNav;\r\n","import React from 'react'\r\nimport withHeaderItem from 'utils/hoc/withHeaderItem'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setSideNavCollapse } from 'store/theme/themeSlice'\r\nimport useResponsive from 'utils/hooks/useResponsive'\r\nimport { NavToggle } from 'components/shared'\r\n\r\nexport const SideNavToggle = ({ className }) => {\r\n\r\n\tconst sideNavCollapse = useSelector((state) => state.theme.layout.sideNavCollapse)\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst { larger } = useResponsive()\r\n\r\n\tconst onCollapse = () => {\r\n\t\tdispatch(setSideNavCollapse(!sideNavCollapse))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{larger.md && (\r\n\t\t\t\t<div \r\n\t\t\t\t\tclassName={className}\r\n\t\t\t\t\tonClick={onCollapse}\r\n\t\t\t\t>\r\n\t\t\t\t\t<NavToggle className=\"text-2xl\" toggled={sideNavCollapse} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default withHeaderItem(SideNavToggle)\r\n"],"names":["HeaderActionsStart","HeaderActionsEnd","hoverable","props","className","headerStart","headerEnd","sideNavStyle","width","SIDE_NAV_WIDTH","minWidth","sideNavCollapseStyle","SIDE_NAV_COLLAPSED_WIDTH","SideNav","themeColor","useSelector","state","theme","primaryColorLevel","navMode","mode","direction","currentRouteKey","base","common","sideNavCollapse","layout","userAuthority","auth","user","authority","larger","useResponsive","menuContent","collapsed","navigationTree","navigationConfig","routeKey","md","style","classNames","NAV_MODE_THEMED","src","LOGO_SRC_PATH","alt","APP_NAME","imgClass","NAV_MODE_DARK","NAV_MODE_TRANSPARENT","type","gutter","SIDE_NAV_CONTENT_GUTTER","LOGO_X_GUTTER","imgHeight","imgWidth","autoHide","defaultProps","themed","darkMode","withHeaderItem","dispatch","useDispatch","onClick","setSideNavCollapse","toggled"],"sourceRoot":""}
{"version":3,"file":"static/js/5409.be127298.chunk.js","mappings":"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","sources":["services/CommonService.js","views/inventory/stockEntry/addEdit/index.js"],"sourcesContent":["import ApiService from \"./ApiService\"\r\nimport BaseService from \"./BaseService\";\r\n\r\nexport function getApi(endpoint, params) {\r\n  return BaseService.get(endpoint, { params }).then((res) => res?.data);\r\n}\r\n\r\nexport function postApi(endpoint, payload) {    \r\n  return BaseService.post(endpoint, payload).then((res) => res?.data);\r\n}\r\n\r\nexport async function apiGetNotificationCount () {\r\n    return ApiService.fetchData({\r\n        url: '/notification/count',\r\n        method: 'get'\r\n    })\r\n}\r\n\r\nexport async function apiGetNotificationList () {\r\n    return ApiService.fetchData({\r\n        url: '/notification/list',\r\n        method: 'get'\r\n    })\r\n}\r\n\r\nexport async function apiGetSearchResult (data) {\r\n    return ApiService.fetchData({\r\n        url: '/search/query',\r\n        method: 'post',\r\n        data\r\n    })\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useParams,useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Button, Card, FormContainer, FormItem, Input, Select, toast, Notification } from \"components/ui\";\r\nimport { AiOutlineSave, AiOutlineCloseCircle } from \"react-icons/ai\";\r\nimport { getApi, postApi } from \"services/CommonService\";\r\nimport { APIS, LIST_DATA_API_TYPE } from \"constants/api.constant\";\r\nimport { UPDATE_TOAST, ADDED_TOAST } from \"constants/app.constant\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  code: Yup.string().required(\"L Code is required\"),\r\n  stockType: Yup.object().required(\"Stock Entry Type is required\"),\r\n  quantity: Yup.number()\r\n    .required(\"Quantity is required\")\r\n    .positive(\"Quantity must be positive\")\r\n    .integer(\"Quantity must be an integer\"),\r\n  location: Yup.string().required(\"Location is required\"),\r\n});\r\n\r\nconst initialValues = {\r\n  code: \"\",\r\n  description: \"\",\r\n  stockType: { label: \"Material Receipt\", value: 1 },\r\n  quantity: \"\",\r\n  location: \"\",\r\n  uom: \"\",\r\n  uomId: \"\",\r\n};\r\n\r\nconst AddEditStock = ({ onClose, refreshPage }) => {\r\n  const { id } = useParams();\r\n  const [loading, setLoading] = useState(false);\r\n  const [materialOptions, setMaterialOptions] = useState([]);\r\n  const [warehouseOptions, setWarehouseOptions] = useState([]);\r\n  const [editData, setEditData] = useState(initialValues);\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    if (id) {\r\n      const data = location.state.editData;\r\n      setEditData({\r\n        code: data?.lcodeId?._id || \"\",\r\n        description: data.lcodeId?.description || \"\",\r\n        stockType: { label: \"Material Receipt\", value: 1 },\r\n        quantity: data.quantity || \"\",\r\n        location: data.locationId?._id || \"\",\r\n        modelType: LIST_DATA_API_TYPE.STOCK_ENTRY, \r\n      });\r\n    }\r\n    getApi(APIS.LIST_DATA, { type: LIST_DATA_API_TYPE.CODES })\r\n      .then((res) => {\r\n        if (res && res.data && Array.isArray(res.data.data)) {\r\n          const filteredData = res.data.data.filter((item) => item.type === 1);\r\n          const materials = filteredData.map((item) => ({\r\n            label: item.code,\r\n            value: item._id,\r\n            description: item.description,\r\n            uom: item?.uomId?.name,\r\n            uomId: item?.uomId?._id,\r\n          }));\r\n          setMaterialOptions(materials);\r\n        } else {\r\n          toast.push(<Notification type=\"error\">No Materials found!</Notification>);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching materials:\", error);\r\n        toast.push(<Notification type=\"error\">Failed to load Materials</Notification>);\r\n      });\r\n    getApi(APIS.LIST_DATA, { type: LIST_DATA_API_TYPE.LOCATIONS })\r\n      .then((res) => {\r\n        if (res && res.data && Array.isArray(res.data.data)) {\r\n          const locations = res.data.data.map((location) => ({\r\n            label: location.name,\r\n            value: location._id,\r\n          }));\r\n          setWarehouseOptions(locations);\r\n        } else {\r\n          toast.push(<Notification type=\"error\">No Warehouses found!</Notification>);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching warehouses:\", error);\r\n        toast.push(<Notification type=\"error\">Failed to load Warehouses</Notification>);\r\n      });\r\n  }, [id,location.state?.editData]);\r\n  \r\n\r\n  const onSubmit = (values, { setSubmitting }) => {\r\n    const payload = {\r\n      lcodeId: values.code, \r\n      stockType: values.stockType?.value, \r\n      quantity: values.quantity,\r\n      locationId: values.location,\r\n      uomId: values.uomId,\r\n      modelType: LIST_DATA_API_TYPE.STOCK_ENTRY,\r\n    };\r\n    if (id) {\r\n      payload.id = id\r\n    }\r\n    postApi(APIS.ADD_EDIT_DATA, payload).then((res) => {\r\n      \r\n      toast.push(\r\n        <Notification type=\"success\">\r\n          {id ? UPDATE_TOAST : ADDED_TOAST}\r\n        </Notification>\r\n      );\r\n        navigate('/app/inventory/stockEntry');\r\n    }).catch((err) => {\r\n      toast.push(\r\n        <Notification type=\"error\">{err}</Notification>\r\n      );\r\n    }).finally(() => {\r\n      setSubmitting(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={editData}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n      enableReinitialize\r\n    >\r\n      {({ errors, touched, values, setFieldValue, isSubmitting }) => (\r\n        <Form>\r\n          <div className=\"flex mb-3 justify-between w-3/4\">\r\n            <h3>{editData.code ? \"Edit Stock\" : \"Add Stock\"}</h3>\r\n            <div className=\"flex\">\r\n              <Button\r\n                size=\"sm\"\r\n                className=\"ltr:mr-3 rtl:ml-3\"\r\n                onClick={() => navigate(-1)}\r\n                icon={<AiOutlineCloseCircle />}\r\n                type=\"button\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"solid\"\r\n                loading={isSubmitting || loading} \r\n                icon={<AiOutlineSave />}\r\n                type=\"submit\"\r\n              >\r\n                {editData.code ? \"Update\" : \"Save\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <Card className=\"mt-2.5 w-3/4\">\r\n            <FormContainer className=\"md:w-full lg:w-1/2\">\r\n            \r\n              <FormItem label=\"Stock Entry Type\">\r\n                <Input\r\n                  value=\"Material Receipt\" \r\n                  readOnly\r\n                  size=\"sm\"\r\n                />\r\n              </FormItem>\r\n\r\n              <FormItem\r\n                label=\"LCode\"\r\n                invalid={errors?.code && touched?.code}\r\n                errorMessage={errors?.code}\r\n              >\r\n                <Select\r\n                  size=\"sm\"\r\n                  name=\"lcode\"\r\n                  placeholder=\"Select LCode\"\r\n                  options={materialOptions}\r\n                  value={materialOptions.find(\r\n                    (option) => option.value === values.code\r\n                  ) || null}\r\n                  onChange={(selectedOption) => {\r\n                    setFieldValue(\"code\", selectedOption.value); \r\n                    setFieldValue(\"description\", selectedOption.description); \r\n                    setFieldValue(\"uom\", selectedOption.uom); \r\n                    setFieldValue(\"uomId\", selectedOption.uomId); \r\n                  }}\r\n                />\r\n              </FormItem>\r\n\r\n              <FormItem label=\"Description\">\r\n                <Field\r\n                  as={Input}\r\n                  size=\"sm\"\r\n                  name=\"description\"\r\n                  value={values.description}\r\n                  readOnly\r\n                />\r\n              </FormItem>\r\n              <FormItem label=\"UOM\">\r\n                <Field\r\n                  as={Input}\r\n                  size=\"sm\"\r\n                  name=\"uom\"\r\n                  value={values.uom}\r\n                  readOnly\r\n                />\r\n              </FormItem>\r\n\r\n              <FormItem\r\n                label=\"Quantity\"\r\n                invalid={errors.quantity && touched.quantity}\r\n                errorMessage={errors.quantity}\r\n              >\r\n                <Field\r\n                  as={Input}\r\n                  type=\"number\"\r\n                  name=\"quantity\"\r\n                  placeholder=\"Add Quantity\"\r\n                  value={values.quantity}\r\n                />\r\n              </FormItem>\r\n\r\n              <FormItem\r\n                label=\"Location\"\r\n                invalid={errors.location && touched.location}\r\n                errorMessage={errors.location}\r\n              >\r\n                <Select\r\n                  name=\"Location\"\r\n                  options={warehouseOptions}\r\n                  placeholder=\"Select Location\"\r\n                  value={warehouseOptions.find(\r\n                    (option) => option.value === values.location\r\n                  )}\r\n                  onChange={(selectedOption) => {\r\n                    setFieldValue(\"location\", selectedOption.value); \r\n                  }}\r\n                />\r\n              </FormItem>\r\n            </FormContainer>\r\n          </Card>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddEditStock;\r\n"],"names":["getApi","endpoint","params","BaseService","then","res","data","postApi","payload","apiGetSearchResult","ApiService","url","method","validationSchema","Yup","shape","code","required","stockType","quantity","positive","integer","location","initialValues","description","label","value","uom","uomId","onClose","refreshPage","id","useParams","useState","loading","materialOptions","setMaterialOptions","warehouseOptions","setWarehouseOptions","editData","setEditData","navigate","useNavigate","useLocation","useEffect","state","lcodeId","_id","locationId","modelType","LIST_DATA_API_TYPE","APIS","type","Array","isArray","materials","filter","item","map","name","toast","catch","error","console","locations","onSubmit","values","setSubmitting","UPDATE_TOAST","ADDED_TOAST","err","finally","enableReinitialize","errors","touched","setFieldValue","isSubmitting","className","size","onClick","icon","variant","readOnly","invalid","errorMessage","placeholder","options","find","option","onChange","selectedOption","as","Input"],"sourceRoot":""}
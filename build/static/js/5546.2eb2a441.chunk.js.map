{"version":3,"file":"static/js/5546.2eb2a441.chunk.js","mappings":"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","sources":["services/CommonService.js","utils/hooks/useTimeOutMessage.js","views/auth/ForgotPassword/ForgotPasswordForm.js","views/auth/ForgotPassword/index.js"],"sourcesContent":["import ApiService from \"./ApiService\"\nimport BaseService from \"./BaseService\";\n\nexport function getApi(endpoint, params) {\n  return BaseService.get(endpoint, { params }).then((res) => res?.data);\n}\n\nexport function postApi(endpoint, payload) {\n  return BaseService.post(endpoint, payload).then((res) => res?.data);\n}\n\nexport async function apiGetNotificationCount () {\n    return ApiService.fetchData({\n        url: '/notification/count',\n        method: 'get'\n    })\n}\n\nexport async function apiGetNotificationList () {\n    return ApiService.fetchData({\n        url: '/notification/list',\n        method: 'get'\n    })\n}\n\nexport async function apiGetSearchResult (data) {\n    return ApiService.fetchData({\n        url: '/search/query',\n        method: 'post',\n        data\n    })\n}","import { useEffect, useState } from 'react'\n\nfunction useTimeOutMessage(interval = 3000) {\n\n    const [message, setMessage] = useState('')\n\n    useEffect(() => {\n        if (message) {\n            let timeout = setTimeout(() => setMessage(''), interval)\n            return () => {\n                clearTimeout(timeout)\n            }\n\t\t}\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [message])\n                                              \n    return [message, setMessage]\n}\n\nexport default useTimeOutMessage","import React, { useState } from \"react\";\nimport {\n  Input,\n  Button,\n  FormItem,\n  FormContainer,\n  Notification,\n  Alert,\n  toast,\n} from \"components/ui\";\nimport { ActionLink } from \"components/shared\";\nimport useTimeOutMessage from \"utils/hooks/useTimeOutMessage\";\nimport { Field, Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { postApi } from \"services/CommonService\";\nimport { APIS } from \"constants/api.constant\";\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().required(\"Please enter your email\"),\n});\n\nconst initialValues = {\n  email: \"\",\n};\n\nconst ForgotPasswordForm = (props) => {\n  const { disableSubmit = false, className, signInUrl = \"/sign-in\" } = props;\n  const [emailSent, setEmailSent] = useState(false);\n  const [message, setMessage] = useTimeOutMessage();\n\n  const onSendMail = async (values, setSubmitting) => {\n    setSubmitting(true);\n    postApi(APIS.FORGET_PASSWORD, { userType: 0, ...values })\n      .then((res) => {\n        toast.push(\n          <Notification type=\"success\">Link Sent Successfully</Notification>\n        );\n        setEmailSent(true);\n      })\n      .finally(() => {\n        setSubmitting(false);\n      });\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"mb-6\">\n        {emailSent ? (\n          <>\n            <h3 className=\"mb-1\">Check your email</h3>\n            <p>We have sent a password recovery instruction to your email</p>\n          </>\n        ) : (\n          <>\n            <h3 className=\"mb-1\">Forgot Password</h3>\n            <p>Please enter your email address to receive a reset link</p>\n          </>\n        )}\n      </div>\n\n      {message && (\n        <Alert className=\"mb-4\" type=\"danger\" showIcon>\n          {message}\n        </Alert>\n      )}\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          if (!disableSubmit) {\n            onSendMail(values, setSubmitting);\n          } else {\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ touched, errors, isSubmitting }) => (\n          <Form>\n            <FormContainer>\n              <div className={emailSent ? \"hidden\" : \"\"}>\n                <FormItem\n                  label=\"Email Address\"\n                  invalid={errors.email && touched.email}\n                  errorMessage={errors.email}\n                >\n                  <Field\n                    type=\"email\"\n                    autoComplete=\"off\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    component={Input}\n                  />\n                </FormItem>\n              </div>\n              <Button\n                block\n                loading={isSubmitting}\n                variant=\"solid\"\n                type=\"submit\"\n              >\n                {emailSent ? \"Resend Email\" : \"Send Email\"}\n              </Button>\n              <div className=\"mt-4 text-center\">\n                <span>Back to </span>\n                <ActionLink to={signInUrl}>Sign in</ActionLink>\n              </div>\n            </FormContainer>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default ForgotPasswordForm;\n","import React from 'react'\nimport ForgotPasswordForm from './ForgotPasswordForm'\n\nconst ForgotPassword = () => {\n  return (\n    <ForgotPasswordForm disableSubmit={false} />\n  )\n}\n\nexport default ForgotPassword\n"],"names":["getApi","endpoint","params","BaseService","then","res","data","postApi","payload","apiGetSearchResult","ApiService","url","method","interval","useState","message","setMessage","useEffect","timeout","setTimeout","clearTimeout","validationSchema","Yup","shape","email","required","initialValues","props","disableSubmit","className","signInUrl","emailSent","setEmailSent","useTimeOutMessage","onSendMail","values","setSubmitting","APIS","userType","toast","type","finally","showIcon","onSubmit","touched","errors","isSubmitting","label","invalid","errorMessage","autoComplete","name","placeholder","component","Input","block","loading","variant","to"],"sourceRoot":""}
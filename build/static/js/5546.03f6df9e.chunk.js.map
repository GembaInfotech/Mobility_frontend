{"version":3,"file":"static/js/5546.03f6df9e.chunk.js","mappings":"6HAmBA,IAjBA,WAA6C,IAAlBA,EAAQ,uDAAG,IAElC,GAA8BC,EAAAA,EAAAA,UAAS,IAAG,eAAnCC,EAAO,KAAEC,EAAU,KAY1B,OAVAC,EAAAA,EAAAA,YAAU,WACN,GAAIF,EAAS,CACT,IAAIG,EAAUC,YAAW,kBAAMH,EAAW,GAAG,GAAEH,GAC/C,OAAO,WACHO,aAAaF,EACjB,CACV,CAEE,GAAG,CAACH,IAEG,CAACA,EAASC,EACrB,C,qNCAMK,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAAaG,SAAS,6BAGzBC,EAAgB,CACpBF,MAAO,IA6FT,EA1F2B,SAACG,GAC1B,MAAqEA,EAA7DC,cAAAA,OAAa,OAAQ,EAAEC,EAAsCF,EAAtCE,UAAU,EAA4BF,EAA3BG,UAAAA,OAAS,MAAG,WAAU,EAChE,GAAkChB,EAAAA,EAAAA,WAAS,GAAM,eAA1CiB,EAAS,KAAEC,EAAY,KAC9B,GAA8BC,EAAAA,EAAAA,KAAmB,eAA1ClB,EAAO,KAERmB,GAFoB,KAEV,yCAAG,WAAOC,EAAQC,GAAa,sEAC7CA,GAAc,IACdC,EAAAA,EAAAA,IAAQC,EAAAA,GAAAA,iBAAqB,QAAGC,SAAU,GAAMJ,IAC7CK,MAAK,SAACC,GACLC,EAAAA,GAAAA,MACE,SAAC,KAAY,CAACC,KAAK,UAAS,qCAE9BX,GAAa,EACf,IACCY,SAAQ,WACPR,GAAc,EAChB,IAAG,2CACN,gBAZe,yCAchB,OACE,iBAAKP,UAAWA,EAAU,WACxB,gBAAKA,UAAU,OAAM,SAClBE,GACC,iCACE,eAAIF,UAAU,OAAM,+BACpB,0FAGF,iCACE,eAAIA,UAAU,OAAM,8BACpB,wFAKLd,IACC,SAAC,KAAK,CAACc,UAAU,OAAOc,KAAK,SAASE,UAAQ,WAC3C9B,KAIL,SAAC,KAAM,CACLW,cAAeA,EACfL,iBAAkBA,EAClByB,SAAU,SAACX,EAAO,GAAwB,IAArBC,EAAa,EAAbA,cACdR,EAGHQ,GAAc,GAFdF,EAAWC,EAAQC,EAIvB,EAAE,SAED,gBAAGW,EAAO,EAAPA,QAASC,EAAM,EAANA,OAAQC,EAAY,EAAZA,aAAY,OAC/B,SAAC,KAAI,WACH,UAAC,KAAa,YACZ,gBAAKpB,UAAWE,EAAY,SAAW,GAAG,UACxC,SAAC,KAAQ,CACPmB,MAAM,gBACNC,QAASH,EAAOxB,OAASuB,EAAQvB,MACjC4B,aAAcJ,EAAOxB,MAAM,UAE3B,SAAC,KAAK,CACJmB,KAAK,QACLU,aAAa,MACbC,KAAK,QACLC,YAAY,QACZC,UAAWC,EAAAA,UAIjB,SAAC,KAAM,CACLC,OAAK,EACLC,QAASV,EACTW,QAAQ,QACRjB,KAAK,SAAQ,SAEZZ,EAAY,eAAiB,gBAEhC,iBAAKF,UAAU,mBAAkB,WAC/B,wCACA,SAAC,KAAU,CAACgC,GAAI/B,EAAU,4BAGzB,MAKjB,ECxGA,EANuB,WACrB,OACE,SAAC,EAAkB,CAACF,eAAe,GAEvC,C","sources":["utils/hooks/useTimeOutMessage.js","views/auth/ForgotPassword/ForgotPasswordForm.js","views/auth/ForgotPassword/index.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nfunction useTimeOutMessage(interval = 3000) {\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (message) {\r\n            let timeout = setTimeout(() => setMessage(''), interval)\r\n            return () => {\r\n                clearTimeout(timeout)\r\n            }\r\n\t\t}\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [message])\r\n                                              \r\n    return [message, setMessage]\r\n}\r\n\r\nexport default useTimeOutMessage","import React, { useState } from \"react\";\r\nimport {\r\n  Input,\r\n  Button,\r\n  FormItem,\r\n  FormContainer,\r\n  Notification,\r\n  Alert,\r\n  toast,\r\n} from \"components/ui\";\r\nimport { ActionLink } from \"components/shared\";\r\nimport useTimeOutMessage from \"utils/hooks/useTimeOutMessage\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { postApi } from \"services/CommonService\";\r\nimport { APIS } from \"constants/api.constant\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string().required(\"Please enter your email\"),\r\n});\r\n\r\nconst initialValues = {\r\n  email: \"\",\r\n};\r\n\r\nconst ForgotPasswordForm = (props) => {\r\n  const { disableSubmit = false, className, signInUrl = \"/sign-in\" } = props;\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const [message, setMessage] = useTimeOutMessage();\r\n\r\n  const onSendMail = async (values, setSubmitting) => {\r\n    setSubmitting(true);\r\n    postApi(APIS.FORGET_PASSWORD, { userType: 0, ...values })\r\n      .then((res) => {\r\n        toast.push(\r\n          <Notification type=\"success\">Link Sent Successfully</Notification>\r\n        );\r\n        setEmailSent(true);\r\n      })\r\n      .finally(() => {\r\n        setSubmitting(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div className=\"mb-6\">\r\n        {emailSent ? (\r\n          <>\r\n            <h3 className=\"mb-1\">Check your email</h3>\r\n            <p>We have sent a password recovery instruction to your email</p>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h3 className=\"mb-1\">Forgot Password</h3>\r\n            <p>Please enter your email address to receive a reset link</p>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {message && (\r\n        <Alert className=\"mb-4\" type=\"danger\" showIcon>\r\n          {message}\r\n        </Alert>\r\n      )}\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          if (!disableSubmit) {\r\n            onSendMail(values, setSubmitting);\r\n          } else {\r\n            setSubmitting(false);\r\n          }\r\n        }}\r\n      >\r\n        {({ touched, errors, isSubmitting }) => (\r\n          <Form>\r\n            <FormContainer>\r\n              <div className={emailSent ? \"hidden\" : \"\"}>\r\n                <FormItem\r\n                  label=\"Email Address\"\r\n                  invalid={errors.email && touched.email}\r\n                  errorMessage={errors.email}\r\n                >\r\n                  <Field\r\n                    type=\"email\"\r\n                    autoComplete=\"off\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    component={Input}\r\n                  />\r\n                </FormItem>\r\n              </div>\r\n              <Button\r\n                block\r\n                loading={isSubmitting}\r\n                variant=\"solid\"\r\n                type=\"submit\"\r\n              >\r\n                {emailSent ? \"Resend Email\" : \"Send Email\"}\r\n              </Button>\r\n              <div className=\"mt-4 text-center\">\r\n                <span>Back to </span>\r\n                <ActionLink to={signInUrl}>Sign in</ActionLink>\r\n              </div>\r\n            </FormContainer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordForm;\r\n","import React from 'react'\r\nimport ForgotPasswordForm from './ForgotPasswordForm'\r\n\r\nconst ForgotPassword = () => {\r\n  return (\r\n    <ForgotPasswordForm disableSubmit={false} />\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n"],"names":["interval","useState","message","setMessage","useEffect","timeout","setTimeout","clearTimeout","validationSchema","Yup","shape","email","required","initialValues","props","disableSubmit","className","signInUrl","emailSent","setEmailSent","useTimeOutMessage","onSendMail","values","setSubmitting","postApi","APIS","userType","then","res","toast","type","finally","showIcon","onSubmit","touched","errors","isSubmitting","label","invalid","errorMessage","autoComplete","name","placeholder","component","Input","block","loading","variant","to"],"sourceRoot":""}
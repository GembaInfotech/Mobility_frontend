{"version":3,"file":"static/js/4962.fc91643c.chunk.js","mappings":"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","sources":["views/masters/physicians/Header.js","views/masters/physicians/addEdit.js","views/masters/physicians/index.js"],"sourcesContent":["import React from 'react';\r\nimport TableSearchBar from 'components/ui/TableSearchBar';\r\nimport { HiOutlinePlusCircle } from 'react-icons/hi';\r\nimport { Button } from 'components/ui';\r\nimport hasPermisson, { ACCESS, MODULE } from 'utils/hasPermission';\r\n\r\nconst Header = ({ setSearch, addButtonClick }) => {\r\n  return (\r\n    <>\r\n      {hasPermisson(MODULE.PHYSICIAN, ACCESS.WRITE) && (\r\n        <div className=\"md:flex items-center justify-end\">\r\n          <Button size=\"sm\" variant=\"solid\" onClick={addButtonClick} icon={<HiOutlinePlusCircle />}>\r\n            Add Physician\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <TableSearchBar onChange={(query) => setSearch(query)} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { AdaptableCard } from \"components/shared\";\r\nimport {\r\n  Button,\r\n  FormContainer,\r\n  toast,\r\n  Notification,\r\n  Card,\r\n  FormItem,\r\n  Input,\r\n  Select,\r\n} from \"components/ui\";\r\nimport { AiOutlineSave, AiOutlineCloseCircle } from \"react-icons/ai\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { getApi, postApi } from \"services/CommonService\";\r\nimport { APIS, LIST_DATA_API_TYPE } from \"constants/api.constant\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/bootstrap.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst FORM_FIELDS = [\r\n  {\r\n    label: \"Name\",\r\n    type: \"text\",\r\n    name: \"name\",\r\n    placeholder: \"Enter physician name\",\r\n    component: Input,\r\n    isBasic: true,\r\n  },\r\n  {\r\n    name: \"phoneNumber\",\r\n    countryCode: \"countryCode\",\r\n    label: \"Mobile No.\",\r\n    component: \"phoneNumber\",\r\n    placeholder: \"Enter mobile no.\",\r\n  },\r\n  {\r\n    label: \"Fax\",\r\n    name: \"fax\",\r\n    placeholder: \"Enter Fax\",\r\n    component: Input,\r\n    isBasic: true,\r\n  },\r\n  {\r\n    label: \"NPI No.\",\r\n    name: \"npiNo\",\r\n    placeholder: \"Enter NPI No.\",\r\n    component: Input,\r\n    isBasic: true,\r\n  },\r\n  {\r\n    label: \"Address\",\r\n    name: \"address\",\r\n    placeholder: \"Enter Address\",\r\n    component: Input,\r\n    isBasic: true,\r\n    textArea: true\r\n  },\r\n\r\n];\r\n\r\n////// YUP VALIDATION //////\r\n\r\nconst Schema = Yup.object().shape({\r\n  name: Yup.string().required(\"Required\"),\r\n  phoneNumber: Yup.string().required(\"Required\"),\r\n  address: Yup.string().required(\"Required\"),\r\n  fax: Yup.string().required(\"Required\"),\r\n  npiNo: Yup.string().required(\"Required\"),\r\n});\r\n\r\n\r\n///// INITIAL VALUES //////\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  fax: \"\",\r\n  npiNo: \"\",\r\n  phoneNumber: \"\",\r\n  countryCode: \"+1\",\r\n  address: \"\",\r\n  companyId: \"\",\r\n};\r\n\r\nconst AddEditPhysician = ({ closeAddEdit, selectedRow }) => {\r\n  const savedHospitalId = localStorage.getItem(\"selectedHospitalId\");\r\n\r\n  // const [companyOptions, setCompanyOptionos] = useState([]);\r\n  const user = useSelector((state) => state.auth.user);\r\n\r\n  // useEffect(() => {\r\n  //   if (user?.companyId) {\r\n  //     getApi(APIS.LIST_DATA, {\r\n  //       companyIds: JSON.stringify(user.companyId),\r\n  //       type: LIST_DATA_API_TYPE.COMPANY,\r\n  //     })\r\n  //       .then((res) => {\r\n  //         const response = res?.data?.data;\r\n\r\n  //         if (Array.isArray(response)) {\r\n  //           const companyOptions = response.map((company) => ({\r\n  //             label: company.name,\r\n  //             value: company._id,\r\n  //           }));\r\n  //           setCompanyOptionos(companyOptions);\r\n  //         }\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         // Handle any errors from the additional API call\r\n  //         console.error(\"Error calling additional API:\", error);\r\n  //       });\r\n  //   } else {\r\n  //     getApi(APIS.LIST_DATA, { type: LIST_DATA_API_TYPE.COMPANY })\r\n  //       .then((res) => {\r\n  //         if (res && res.data && Array.isArray(res.data.data)) {\r\n  //           const locations = res.data.data.map((location) => ({\r\n  //             label: location.name,\r\n  //             value: location._id,\r\n  //           }));\r\n  //           setCompanyOptionos(locations);\r\n  //         } else {\r\n  //           toast.push(<Notification type=\"error\">No Companies found!</Notification>);\r\n  //         }\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.error(\"Error fetching Companies:\", error);\r\n  //         toast.push(<Notification type=\"error\">Failed to load Companies</Notification>);\r\n  //       });\r\n  //   }\r\n\r\n  // }, []);\r\n  //// HANDLER FOR SUBMIT FORM /////\r\n  const onSubmit = (payload, { setSubmitting }) => {\r\n\r\n    const dataToSend = {}\r\n    // Remove Country code from phone number\r\n    dataToSend.phoneNumber = payload?.phoneNumber?.replace(\r\n      payload?.countryCode,\r\n      \"\"\r\n    );\r\n\r\n    if (!payload?.countryCode?.includes(\"+\")) {\r\n      dataToSend.countryCode = `+${payload.countryCode}`;\r\n    }\r\n\r\n    //Check for Empty Phone number\r\n    if (payload.phoneNumber === \"\") {\r\n      delete dataToSend.phoneNumber;\r\n    }\r\n\r\n    if (selectedRow) {\r\n      dataToSend.id = selectedRow._id\r\n    }\r\n\r\n    dataToSend.name = payload?.name\r\n    dataToSend.email = payload?.email\r\n    dataToSend.address = payload?.address\r\n    dataToSend.fax = payload?.fax\r\n    dataToSend.npiNo = payload?.npiNo\r\n    // dataToSend.companyId = payload?.companyId\r\n    dataToSend.companyId = savedHospitalId\r\n\r\n    postApi(APIS.ADD_EDIT_PHYSICIANS, dataToSend)\r\n      .then((res) => {\r\n        closeAddEdit();\r\n        toast.push(\r\n          <Notification type=\"success\">Saved successfully</Notification>\r\n        );\r\n      })\r\n      .catch(()=>{\r\n        setSubmitting(false);\r\n      })\r\n      .finally(() => {\r\n        setSubmitting(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <AdaptableCard>\r\n      <Formik\r\n        initialValues={selectedRow ? selectedRow : initialValues}\r\n        validationSchema={Schema}\r\n        onSubmit={onSubmit}\r\n        enableReinitialize\r\n      >\r\n        {({ errors, touched, values, isSubmitting, setFieldValue }) => (\r\n          <Form className=\"p-5\">\r\n            <div className=\"flex mb-3 justify-between w-3/4\">\r\n              <h3>{selectedRow ? \"Edit Physician\" : \"Add Physician\"}</h3>\r\n              <div className=\"flex\">\r\n                <Button\r\n                  size=\"sm\"\r\n                  className=\"ltr:mr-3 rtl:ml-3\"\r\n                  onClick={closeAddEdit}\r\n                  icon={<AiOutlineCloseCircle />}\r\n                  type=\"button\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  size=\"sm\"\r\n                  variant=\"solid\"\r\n                  loading={isSubmitting}\r\n                  icon={<AiOutlineSave />}\r\n                  type=\"submit\"\r\n                >\r\n                  {selectedRow ? \"Update\" : \"Save\"}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <Card className=\"mt-2.5 w-3/4 \">\r\n                <FormContainer className=\" md:w-full lg:w-1/2\">\r\n                  {/* <FormItem\r\n                    label=\"Company\"\r\n                    invalid={errors.companyId && touched.companyId}\r\n                    errorMessage={errors.companyId}\r\n                  >\r\n                    <Field name=\"companyId\">\r\n                      {({ field, form }) => (\r\n                        <Select\r\n                          {...field}\r\n                          options={companyOptions}\r\n                          placeholder=\"Select Company\"\r\n                          value={companyOptions.find(\r\n                            (option) => option.value === field.value\r\n                          )}\r\n                          onChange={(selectedOption) =>\r\n                            form.setFieldValue(\"companyId\", selectedOption.value)\r\n                          }\r\n                          onBlur={field.onBlur}\r\n                        />\r\n                      )}\r\n                    </Field>\r\n                  </FormItem> */}\r\n                  {FORM_FIELDS.map((field, index) => {\r\n                    return (\r\n                      <FormItem\r\n                        key={index}\r\n                        label={field?.label}\r\n                        invalid={errors?.[field.name] && touched?.[field.name]}\r\n                        errorMessage={errors?.[field.name]}\r\n                      >\r\n                        {field?.isBasic ? (\r\n                          <Field\r\n                            textArea={field?.textArea ? true : false}\r\n                            type={field.type}\r\n                            autoComplete=\"off\"\r\n                            onWheel={(e) =>\r\n                              field?.isWheel ? e.target.blur() : \"\"\r\n                            }\r\n                            value={values?.[field.name]}\r\n                            name={field.name}\r\n                            placeholder={field.placeholder}\r\n                            component={field?.component}\r\n                          />\r\n                        ) : (\r\n                          <>\r\n                            {field?.component === \"phoneNumber\" && (\r\n                              <PhoneInput\r\n                                inputStyle={{ width: \"369px\", padding: \"11px 14px 11px 60px\" }}\r\n                                enableSearch={true}\r\n                                country={\"us\"}\r\n                                countryCodeEditable\r\n                                value={`${values?.[field.name]}`}\r\n                                onChange={(phone, country) => {\r\n                                  setFieldValue(field.name, phone);\r\n                                  setFieldValue(field.countryCode, country?.dialCode);\r\n                                }}\r\n                              />\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </FormItem>\r\n                    );\r\n                  })}\r\n                </FormContainer>\r\n              </Card>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </AdaptableCard>\r\n  );\r\n};\r\n\r\nexport default AddEditPhysician;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getApi, postApi } from 'services/CommonService';\r\nimport { APIS, LIST_DATA_API_TYPE } from 'constants/api.constant';\r\nimport { AdaptableCard, DataTable } from 'components/shared';\r\nimport Header from './Header';\r\nimport { AiFillDelete } from 'react-icons/ai';\r\nimport { toast, Notification } from 'components/ui';\r\nimport ConfirmationContent from 'components/custom/ConfirmationContent';\r\nimport {\r\n  ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM,\r\n  DELETE_TOAST,\r\n  UPDATE_TOAST,\r\n} from 'constants/app.constant';\r\nimport { TABLE_ACTION_KEYS, CONFIRMATION_OBJ } from 'constants/app.constant';\r\nimport AddEditPhysician from './addEdit';\r\nimport ActiveInActiveCheckbox from 'components/custom/activeCheckbox';\r\nimport hasPermisson, { ACCESS, MODULE, newColumn } from 'utils/hasPermission';\r\nimport ActionColumn from 'components/custom/actionColumn';\r\n\r\n\r\nconst ACTION_CONSTANT = [\r\n  {\r\n    label: 'Edit',\r\n    key: TABLE_ACTION_KEYS.EDIT,\r\n    show: () => hasPermisson(MODULE.PHYSICIAN, ACCESS.WRITE),\r\n  },\r\n  {\r\n    label: <AiFillDelete style={{ fontSize: '1.2rem' }} />,\r\n    key: TABLE_ACTION_KEYS.DELETE,\r\n    toolTip: 'Delete',\r\n    show: () => hasPermisson(MODULE.PHYSICIAN, ACCESS.DELETE),\r\n  },\r\n];\r\n\r\nconst Physicians = () => {\r\n  const savedHospitalId = localStorage.getItem(\"selectedHospitalId\");\r\n\r\n  const [tabledata, setTableData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [search, setSearch] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [isAddEdit, setIsAddEdit] = useState(false);\r\n  const [selectedRow, setSelectedRow] = useState('');\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [selectedData, setSelectedData] = useState('');\r\n  const [activeConfirm, setActiveConfirm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getApi(APIS.LIST_DATA, {\r\n      type : LIST_DATA_API_TYPE.PHYSICIANS,\r\n      limit,\r\n      search,\r\n      companyId:savedHospitalId,\r\n      skip: limit * (page - 1),\r\n    })\r\n      .then((res) => {\r\n        setTableData(res?.data?.data);\r\n        setTotalCount(res?.data?.count);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [search, page, limit, refresh]);\r\n\r\n  const onActionHandle = (event, key, row) => {\r\n    if (key === TABLE_ACTION_KEYS.EDIT) {\r\n      row.phoneNumber = row?.countryCode + row?.phoneNumber\r\n      setSelectedRow(row);\r\n      setIsAddEdit(true);\r\n    }\r\n    if (key === TABLE_ACTION_KEYS.DELETE) {\r\n      setOpenModal(true);\r\n      setSelectedRow(row?.id);\r\n    }\r\n  };\r\n\r\n  const onDialogClose = () => {\r\n    setOpenModal(false);\r\n    setSelectedRow('');\r\n    setActiveConfirm(false);\r\n  };\r\n\r\n  const CONFIRMATION_CONSTANT = {\r\n    header: CONFIRMATION_OBJ.HEADER,\r\n    des: CONFIRMATION_OBJ.DELETE,\r\n    buttonLabel: 'Delete',\r\n  };\r\n\r\n  const onDialogOk = () => {\r\n    let toastMessage;\r\n    const payload = {\r\n      type: LIST_DATA_API_TYPE.PHYSICIANS,\r\n      id: selectedData?.id,\r\n    }\r\n    if (activeConfirm) {\r\n      toastMessage = UPDATE_TOAST;\r\n      payload.status = +selectedData?.action;\r\n    \r\n    } else {\r\n      toastMessage = DELETE_TOAST;\r\n      payload.status = 0\r\n    }\r\n\r\n    postApi(APIS.BLOCK_DELETE_DATA, payload).then((res) => {\r\n      toast.push(<Notification type=\"success\">{toastMessage}</Notification>);\r\n      setRefresh((s) => !s);\r\n      onDialogClose();\r\n    });\r\n  };\r\n\r\n  const closeAddEdit = () => {\r\n    setIsAddEdit(false);\r\n    setRefresh(!refresh);\r\n    setSelectedRow('');\r\n  };\r\n\r\n  const columns = [\r\n  \r\n    {\r\n      Header: 'Physician Name',\r\n      Cell: (props) => {\r\n        const row = props?.row?.original;\r\n        return <div className=\"flex items-center w-40\">{row?.name}</div>;\r\n      },\r\n    },\r\n    {\r\n      Header: 'Address',\r\n      accessor: 'address',\r\n      Cell: (props) => {\r\n        const row = props?.row?.original;\r\n        return (\r\n          <div className=\"flex items-center w-40\">\r\n            {row?.address}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      Header: 'Mobile',\r\n      accessor: 'mobile',\r\n      Cell: (props) => {\r\n        const row = props?.row?.original;\r\n        return (\r\n          <div className=\"flex items-center w-40\">\r\n            {row?.countryCode} - {row?.phoneNumber}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: 'Fax',\r\n      accessor: 'fax',\r\n      Cell: (props) => {\r\n        const row = props?.row?.original;\r\n        return (\r\n          <div className=\"flex items-center w-40\">\r\n            {row?.fax}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: 'NPI No.',\r\n      accessor: 'npiNo',\r\n      Cell: (props) => {\r\n        const row = props?.row?.original;\r\n        return (\r\n          <div className=\"flex items-center w-40\">\r\n            {row?.npiNo}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      Header: 'Active',\r\n      Cell: (props) => {\r\n        return (\r\n          <ActiveInActiveCheckbox\r\n            dataObj={props}\r\n            setSelectedData={setSelectedData}\r\n            setActiveConfirm={setActiveConfirm}\r\n            setOpenModal={setOpenModal}\r\n          />\r\n        );\r\n      },\r\n    },\r\n    {\r\n      Header: 'Actions',\r\n      id: 'action',\r\n      accessor: (row) => row,\r\n      Cell: (props) => (\r\n        <ActionColumn\r\n          row={props.row.original}\r\n          onActionHandle={onActionHandle}\r\n          actionsMenu={ACTION_CONSTANT}\r\n        />\r\n      ),\r\n    },\r\n    \r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {isAddEdit ? (\r\n        <AddEditPhysician closeAddEdit={closeAddEdit} selectedRow={selectedRow} />\r\n      ) : (\r\n        <>\r\n          <Header setSearch={setSearch} addButtonClick={() => setIsAddEdit(true)} />\r\n          <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\r\n            <DataTable\r\n              columns={newColumn(columns, MODULE.PHYSICIAN, 1)}\r\n              data={tabledata}\r\n              loading={loading}\r\n              skeletonAvatarColumns={[0]}\r\n              skeletonAvatarProps={{ width: 28, height: 28 }}\r\n              pagingData={{\r\n                pageIndex: page,\r\n                pageSize: limit,\r\n                total: totalCount,\r\n              }}\r\n              onPaginationChange={(limitpage) => setPage(limitpage)}\r\n              onSelectChange={(limitPage) => setLimit(limitPage)}\r\n            />\r\n          </AdaptableCard>\r\n\r\n          <ConfirmationContent\r\n            isOpen={openModal}\r\n            onConfirmClick={onDialogOk}\r\n            header={CONFIRMATION_CONSTANT.header}\r\n            des={\r\n              activeConfirm ? ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM?.des : CONFIRMATION_OBJ.DELETE\r\n            }\r\n            isWarning={!activeConfirm && CONFIRMATION_OBJ.WARNING}\r\n            onDialogClose={onDialogClose}\r\n            buttonLabel={\r\n              activeConfirm\r\n                ? ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM?.buttonLabel\r\n                : CONFIRMATION_CONSTANT.buttonLabel\r\n            }\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Physicians;\r\n"],"names":["setSearch","addButtonClick","hasPermisson","MODULE","ACCESS","className","size","variant","onClick","icon","TableSearchBar","onChange","query","FORM_FIELDS","label","type","name","placeholder","component","Input","isBasic","countryCode","textArea","Schema","Yup","shape","required","phoneNumber","address","fax","npiNo","initialValues","companyId","closeAddEdit","selectedRow","savedHospitalId","localStorage","getItem","useSelector","state","auth","user","validationSchema","onSubmit","payload","setSubmitting","dataToSend","replace","includes","id","_id","email","postApi","APIS","then","res","toast","catch","finally","enableReinitialize","errors","touched","values","isSubmitting","setFieldValue","loading","map","field","index","invalid","errorMessage","autoComplete","onWheel","e","isWheel","target","blur","value","inputStyle","width","padding","enableSearch","country","countryCodeEditable","phone","dialCode","ACTION_CONSTANT","key","TABLE_ACTION_KEYS","show","style","fontSize","toolTip","useState","tabledata","setTableData","setLoading","search","page","setPage","totalCount","setTotalCount","limit","setLimit","isAddEdit","setIsAddEdit","setSelectedRow","openModal","setOpenModal","refresh","setRefresh","selectedData","setSelectedData","activeConfirm","setActiveConfirm","useEffect","getApi","LIST_DATA_API_TYPE","skip","data","count","onActionHandle","event","row","onDialogClose","CONFIRMATION_CONSTANT","header","CONFIRMATION_OBJ","des","buttonLabel","columns","Header","Cell","props","original","accessor","dataObj","actionsMenu","bodyClass","newColumn","skeletonAvatarColumns","skeletonAvatarProps","height","pagingData","pageIndex","pageSize","total","onPaginationChange","limitpage","onSelectChange","limitPage","ConfirmationContent","isOpen","onConfirmClick","toastMessage","UPDATE_TOAST","status","action","DELETE_TOAST","s","ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM","isWarning"],"sourceRoot":""}
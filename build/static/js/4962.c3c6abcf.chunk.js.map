{"version":3,"file":"static/js/4962.c3c6abcf.chunk.js","mappings":"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","sources":["components/custom/ConfirmationContent/index.js","components/custom/actionColumn/index.js","components/custom/activeCheckbox/index.js","components/ui/TableSearchBar/index.js","services/CommonService.js","views/masters/physicians/Header.js","views/masters/physicians/addEdit.js","views/masters/physicians/index.js"],"sourcesContent":["import React from \"react\";\nimport { Button, Dialog } from \"components/ui\";\n\nconst ConfirmationContent = ({\n  header,\n  des,\n  onDialogClose,\n  isWarning,\n  onConfirmClick,\n  isOpen,\n  buttonLabel,\n}) => {\n  return (\n    <Dialog\n      isOpen={isOpen}\n      onClose={onDialogClose}\n      onRequestClose={onDialogClose}\n      contentClassName=\"pb-0 px-0 mt-36 min-w-36\"\n    >\n      <div className=\"px-5 pb-5\">\n        <h5 className=\"mb-4\">{header}</h5>\n        <p>{des}</p>\n        {isWarning && <p className=\"text-red-700\">{isWarning}</p>}\n        <div className=\"text-right mt-6\">\n          <Button\n            className=\"ltr:mr-2 rtl:ml-2\"\n            variant=\"plain\"\n            onClick={onDialogClose}\n          >\n            Cancel\n          </Button>\n          <Button variant=\"solid\" onClick={onConfirmClick}>\n            {buttonLabel}\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default ConfirmationContent;\n","import useThemeClass from 'utils/hooks/useThemeClass';\nimport { Tooltip } from 'components/ui';\n\nconst ActionColumn = ({ row, onActionHandle, actionsMenu }) => {\n  const { textTheme } = useThemeClass();\n\n  return (\n    <div className=\"flex items-center justify-between\">\n      {actionsMenu?.map((item, i) => {\n        if (item?.show?.() ?? true) {\n          return (\n            <Tooltip title={item?.toolTip} visible={item?.toolTip ? true : false}>\n              {item?.isImage ? (\n                <img\n                  src={item.label}\n                  alt=\"view Icon\"\n                  style={{ maxWidth: '20px' }}\n                  // h-5 justify-center ml-5 text-blue-400\n                  className=\"cursor-pointer mx-0.5\"\n                  onClick={(e) => onActionHandle(e, item.key, row)}\n                />\n              ) : (\n                <span\n                  className={`${textTheme} cursor-pointer select-none font-semibold ml-2 `}\n                  onClick={(e) => onActionHandle(e, item.key, row)}\n                >\n                  {item.label}\n                </span>\n              )}\n            </Tooltip>\n          );\n        }\n      })}\n    </div>\n  );\n};\n\nexport default ActionColumn;\n","import React from \"react\";\nimport { ACTIVE_INACTIVE_STATUS } from \"constants/app.constant\";\nimport { Checkbox } from \"components/ui\";\n\nconst ActiveInActiveCheckbox = ({\n  dataObj,\n  setSelectedData,\n  setActiveConfirm,\n  setOpenModal,\n}) => {\n  const onStatusChange = (e, value, id) => {\n    let actionValue = \"\";\n  \n    if (value === 1) {\n      actionValue = 2;\n    }\n    if (value === 2) {\n      actionValue = 1;\n    }\n    setSelectedData({ id, action: actionValue });\n    setActiveConfirm(true);\n    setOpenModal(true);\n  };\n  const id = dataObj?.row?.original?._id;\n  const dataObj1 = ACTIVE_INACTIVE_STATUS.find(\n    (item, i) => item.identifier === dataObj?.row?.original?.status\n  );\n  return (\n    <Checkbox\n      checked={dataObj1?.value}\n      onChange={(e) => onStatusChange(e, dataObj1?.identifier, id)}\n    />\n  );\n};\nexport default ActiveInActiveCheckbox;\n","import React from 'react';\nimport { Input } from 'components/ui';\nimport { HiOutlineSearch } from 'react-icons/hi';\nimport debounce from 'lodash/debounce';\n\nconst TableSearchBar = ({ onChange, placeholder }) => {\n  const debounceFn = debounce(handleDebounceFn, 500);\n\n  function handleDebounceFn(val) {\n    onChange?.(val);\n  }\n\n  const handleInputChange = (e) => {\n    debounceFn(e.target.value);\n  };\n\n  return (\n    <Input\n      className=\"max-w-md md:w-96 mb-4\"\n      size=\"sm\"\n      placeholder={placeholder ? `${placeholder}` : 'Filter by NAL, LCode, Referring Physician'}\n      prefix={<HiOutlineSearch className=\"text-lg\" />}\n      onChange={handleInputChange}\n    />\n  );\n};\n\nexport default TableSearchBar;\n","import ApiService from \"./ApiService\"\nimport BaseService from \"./BaseService\";\n\nexport function getApi(endpoint, params) {\n  return BaseService.get(endpoint, { params }).then((res) => res?.data);\n}\n\nexport function postApi(endpoint, payload) {\n  return BaseService.post(endpoint, payload).then((res) => res?.data);\n}\n\nexport async function apiGetNotificationCount () {\n    return ApiService.fetchData({\n        url: '/notification/count',\n        method: 'get'\n    })\n}\n\nexport async function apiGetNotificationList () {\n    return ApiService.fetchData({\n        url: '/notification/list',\n        method: 'get'\n    })\n}\n\nexport async function apiGetSearchResult (data) {\n    return ApiService.fetchData({\n        url: '/search/query',\n        method: 'post',\n        data\n    })\n}","import React from 'react';\nimport TableSearchBar from 'components/ui/TableSearchBar';\nimport { HiOutlinePlusCircle } from 'react-icons/hi';\nimport { Button } from 'components/ui';\nimport hasPermisson, { ACCESS, MODULE } from 'utils/hasPermission';\n\nconst Header = ({ setSearch, addButtonClick }) => {\n  return (\n    <>\n      {hasPermisson(MODULE.PHYSICIAN, ACCESS.WRITE) && (\n        <div className=\"md:flex items-center justify-end\">\n          <Button size=\"sm\" variant=\"solid\" onClick={addButtonClick} icon={<HiOutlinePlusCircle />}>\n            Add Physician\n          </Button>\n        </div>\n      )}\n      <TableSearchBar onChange={(query) => setSearch(query)} />\n    </>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { AdaptableCard } from \"components/shared\";\nimport {\n  Button,\n  FormContainer,\n  toast,\n  Notification,\n  Card,\n  FormItem,\n  Input\n} from \"components/ui\";\nimport { AiOutlineSave, AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { getApi, postApi } from \"services/CommonService\";\nimport { APIS } from \"constants/api.constant\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/bootstrap.css\";\n\n\nconst FORM_FIELDS = [\n  {\n    label: \"Name\",\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Enter physician name\",\n    component: Input,\n    isBasic: true,\n  },\n  {\n    name: \"phoneNumber\",\n    countryCode: \"countryCode\",\n    label: \"Mobile No.\",\n    component: \"phoneNumber\",\n    placeholder: \"Enter mobile no.\",\n  },\n  {\n    label: \"Fax\",\n    name: \"fax\",\n    placeholder: \"Enter Fax\",\n    component: Input,\n    isBasic: true,\n  },\n  {\n    label: \"NPI No.\",\n    name: \"npiNo\",\n    placeholder: \"Enter NPI No.\",\n    component: Input,\n    isBasic: true,\n  },\n  {\n    label: \"Address\",\n    name: \"address\",\n    placeholder: \"Enter Address\",\n    component: Input,\n    isBasic: true,\n    textArea : true \n  },\n  \n];\n\n////// YUP VALIDATION //////\n\nconst Schema = Yup.object().shape({\n  name: Yup.string().required(\"Required\"),\n  phoneNumber: Yup.string().required(\"Required\"),\n  address: Yup.string().required(\"Required\"),\n  fax: Yup.string().required(\"Required\"),\n  npiNo: Yup.string().required(\"Required\"),\n});\n\n\n///// INITIAL VALUES //////\n\nconst initialValues = {\n  name: \"\",\n  fax: \"\",\n  npiNo: \"\",\n  phoneNumber: \"\",\n  countryCode: \"+1\",\n  address: \"\",\n};\n\nconst AddEditPhysician = ({ closeAddEdit, selectedRow }) => {\n\n  //// HANDLER FOR SUBMIT FORM /////\n  const onSubmit = (payload, { setSubmitting }) => {\n\n    const dataToSend = {}\n    // Remove Country code from phone number\n    dataToSend.phoneNumber = payload?.phoneNumber?.replace(\n      payload?.countryCode,\n      \"\"\n    );\n\n    if (!payload?.countryCode?.includes(\"+\")) {\n      dataToSend.countryCode = `+${payload.countryCode}`;\n    }\n\n    //Check for Empty Phone number\n    if (payload.phoneNumber === \"\") {\n      delete dataToSend.phoneNumber;\n    }\n\n    if(selectedRow){\n      dataToSend.id = selectedRow._id\n    }\n\n    dataToSend.name = payload?.name\n    dataToSend.email = payload?.email\n    dataToSend.address = payload?.address\n    dataToSend.fax = payload?.fax\n    dataToSend.npiNo = payload?.npiNo\n\n    postApi(APIS.ADD_EDIT_PHYSICIANS, dataToSend)\n      .then((res) => {\n        toast.push(\n          <Notification type=\"success\">Saved successfully</Notification>\n        );\n      })\n      .finally(() => {\n        closeAddEdit();\n        setSubmitting(false);\n      });\n  };\n\n  return (\n    <AdaptableCard>\n      <Formik\n        initialValues={selectedRow ? selectedRow : initialValues}\n        validationSchema={Schema}\n        onSubmit={onSubmit}\n        enableReinitialize\n      >\n        {({ errors, touched, values, isSubmitting, setFieldValue }) => (\n          <Form className=\"p-5\">\n            <div className=\"flex mb-3 justify-between w-3/4\">\n              <h3>{selectedRow ? \"Edit Physician\" : \"Add Physician\"}</h3>\n              <div className=\"flex\">\n                <Button\n                  size=\"sm\"\n                  className=\"ltr:mr-3 rtl:ml-3\"\n                  onClick={closeAddEdit}\n                  icon={<AiOutlineCloseCircle />}\n                  type=\"button\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  size=\"sm\"\n                  variant=\"solid\"\n                  loading={isSubmitting}\n                  icon={<AiOutlineSave />}\n                  type=\"submit\"\n                >\n                  {selectedRow ? \"Update\" : \"Save\"}\n                </Button>\n              </div>\n            </div>\n            <div>\n              <Card className=\"mt-2.5 w-3/4 \">\n                <FormContainer className=\" md:w-full lg:w-1/2\">\n                  {FORM_FIELDS.map((field, index) => {\n                    return (\n                      <FormItem\n                        key={index}\n                        label={field?.label}\n                        invalid={errors?.[field.name] && touched?.[field.name]}\n                        errorMessage={errors?.[field.name]}\n                      >\n                        {field?.isBasic ? (\n                          <Field\n                            textArea={field?.textArea ? true : false}\n                            type={field.type}\n                            autoComplete=\"off\"\n                            onWheel={(e) =>\n                              field?.isWheel ? e.target.blur() : \"\"\n                            }\n                            value={values?.[field.name]}\n                            name={field.name}\n                            placeholder={field.placeholder}\n                            component={field?.component}\n                          />\n                        ) : (\n                          <>\n                           {field?.component === \"phoneNumber\" && (\n                              <PhoneInput\n                                inputStyle={{ width: \"369px\", padding: \"11px 14px 11px 60px\" }}\n                                enableSearch={true}\n                                country={\"us\"}\n                                countryCodeEditable\n                                value={`${values?.[field.name]}`}\n                                onChange={(phone, country) => {\n                                  setFieldValue(field.name, phone);\n                                  setFieldValue(field.countryCode, country?.dialCode);\n                                }}\n                              />\n                           )}\n                          </>\n                        )}\n                      </FormItem>\n                    );\n                  })}\n                </FormContainer>\n              </Card>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </AdaptableCard>\n  );\n};\n\nexport default AddEditPhysician;\n","import React, { useEffect, useState } from 'react';\nimport { getApi, postApi } from 'services/CommonService';\nimport { APIS, LIST_DATA_API_TYPE } from 'constants/api.constant';\nimport { AdaptableCard, DataTable } from 'components/shared';\nimport Header from './Header';\nimport { AiFillDelete } from 'react-icons/ai';\nimport { toast, Notification } from 'components/ui';\nimport ConfirmationContent from 'components/custom/ConfirmationContent';\nimport {\n  ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM,\n  DELETE_TOAST,\n  UPDATE_TOAST,\n} from 'constants/app.constant';\nimport { TABLE_ACTION_KEYS, CONFIRMATION_OBJ } from 'constants/app.constant';\nimport AddEditPhysician from './addEdit';\nimport ActiveInActiveCheckbox from 'components/custom/activeCheckbox';\nimport hasPermisson, { ACCESS, MODULE, newColumn } from 'utils/hasPermission';\nimport ActionColumn from 'components/custom/actionColumn';\n\n\nconst ACTION_CONSTANT = [\n  {\n    label: 'Edit',\n    key: TABLE_ACTION_KEYS.EDIT,\n    show: () => hasPermisson(MODULE.PHYSICIAN, ACCESS.WRITE),\n  },\n  {\n    label: <AiFillDelete style={{ fontSize: '1.2rem' }} />,\n    key: TABLE_ACTION_KEYS.DELETE,\n    toolTip: 'Delete',\n    show: () => hasPermisson(MODULE.PHYSICIAN, ACCESS.DELETE),\n  },\n];\n\nconst Physicians = () => {\n  const [tabledata, setTableData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [search, setSearch] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalCount, setTotalCount] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [isAddEdit, setIsAddEdit] = useState(false);\n  const [selectedRow, setSelectedRow] = useState('');\n  const [openModal, setOpenModal] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [selectedData, setSelectedData] = useState('');\n  const [activeConfirm, setActiveConfirm] = useState(false);\n\n  useEffect(() => {\n    getApi(APIS.LIST_DATA, {\n      type : LIST_DATA_API_TYPE.PHYSICIANS,\n      limit,\n      search,\n      skip: limit * (page - 1),\n    })\n      .then((res) => {\n        setTableData(res?.data?.data);\n        setTotalCount(res?.data?.count);\n      })\n      .finally(() => setLoading(false));\n  }, [search, page, limit, refresh]);\n\n  const onActionHandle = (event, key, row) => {\n    if (key === TABLE_ACTION_KEYS.EDIT) {\n      row.phoneNumber = row?.countryCode + row?.phoneNumber\n      setSelectedRow(row);\n      setIsAddEdit(true);\n    }\n    if (key === TABLE_ACTION_KEYS.DELETE) {\n      setOpenModal(true);\n      setSelectedRow(row?.id);\n    }\n  };\n\n  const onDialogClose = () => {\n    setOpenModal(false);\n    setSelectedRow('');\n    setActiveConfirm(false);\n  };\n\n  const CONFIRMATION_CONSTANT = {\n    header: CONFIRMATION_OBJ.HEADER,\n    des: CONFIRMATION_OBJ.DELETE,\n    buttonLabel: 'Delete',\n  };\n\n  const onDialogOk = () => {\n    let toastMessage;\n    const payload = {\n      type: LIST_DATA_API_TYPE.PHYSICIANS,\n      id: selectedData?.id,\n    }\n    if (activeConfirm) {\n      toastMessage = UPDATE_TOAST;\n      payload.status = +selectedData?.action;\n    \n    } else {\n      toastMessage = DELETE_TOAST;\n      payload.status = 0\n    }\n\n    postApi(APIS.BLOCK_DELETE_DATA, payload).then((res) => {\n      toast.push(<Notification type=\"success\">{toastMessage}</Notification>);\n      setRefresh((s) => !s);\n      onDialogClose();\n    });\n  };\n\n  const closeAddEdit = () => {\n    setIsAddEdit(false);\n    setRefresh(!refresh);\n    setSelectedRow('');\n  };\n\n  const columns = [\n  \n    {\n      Header: 'Physician Name',\n      Cell: (props) => {\n        const row = props?.row?.original;\n        return <div className=\"flex items-center w-40\">{row?.name}</div>;\n      },\n    },\n    {\n      Header: 'Address',\n      accessor: 'address',\n      Cell: (props) => {\n        const row = props?.row?.original;\n        return (\n          <div className=\"flex items-center w-40\">\n            {row?.address}\n          </div>\n        );\n      },\n    },\n    {\n      Header: 'Mobile',\n      accessor: 'mobile',\n      Cell: (props) => {\n        const row = props?.row?.original;\n        return (\n          <div className=\"flex items-center w-40\">\n            {row?.countryCode} - {row?.phoneNumber}\n          </div>\n        );\n      },\n    },\n\n    {\n      Header: 'Fax',\n      accessor: 'fax',\n      Cell: (props) => {\n        const row = props?.row?.original;\n        return (\n          <div className=\"flex items-center w-40\">\n            {row?.fax}\n          </div>\n        );\n      },\n    },\n\n    {\n      Header: 'NPI No.',\n      accessor: 'npiNo',\n      Cell: (props) => {\n        const row = props?.row?.original;\n        return (\n          <div className=\"flex items-center w-40\">\n            {row?.npiNo}\n          </div>\n        );\n      },\n    },\n    {\n      Header: 'Active',\n      Cell: (props) => {\n        return (\n          <ActiveInActiveCheckbox\n            dataObj={props}\n            setSelectedData={setSelectedData}\n            setActiveConfirm={setActiveConfirm}\n            setOpenModal={setOpenModal}\n          />\n        );\n      },\n    },\n    {\n      Header: 'Actions',\n      id: 'action',\n      accessor: (row) => row,\n      Cell: (props) => (\n        <ActionColumn\n          row={props.row.original}\n          onActionHandle={onActionHandle}\n          actionsMenu={ACTION_CONSTANT}\n        />\n      ),\n    },\n    \n  ];\n\n  return (\n    <>\n      {isAddEdit ? (\n        <AddEditPhysician closeAddEdit={closeAddEdit} selectedRow={selectedRow} />\n      ) : (\n        <>\n          <Header setSearch={setSearch} addButtonClick={() => setIsAddEdit(true)} />\n          <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\n            <DataTable\n              columns={newColumn(columns, MODULE.PHYSICIAN, 1)}\n              data={tabledata}\n              loading={loading}\n              skeletonAvatarColumns={[0]}\n              skeletonAvatarProps={{ width: 28, height: 28 }}\n              pagingData={{\n                pageIndex: page,\n                pageSize: limit,\n                total: totalCount,\n              }}\n              onPaginationChange={(limitpage) => setPage(limitpage)}\n              onSelectChange={(limitPage) => setLimit(limitPage)}\n            />\n          </AdaptableCard>\n\n          <ConfirmationContent\n            isOpen={openModal}\n            onConfirmClick={onDialogOk}\n            header={CONFIRMATION_CONSTANT.header}\n            des={\n              activeConfirm ? ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM?.des : CONFIRMATION_OBJ.DELETE\n            }\n            isWarning={!activeConfirm && CONFIRMATION_OBJ.WARNING}\n            onDialogClose={onDialogClose}\n            buttonLabel={\n              activeConfirm\n                ? ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM?.buttonLabel\n                : CONFIRMATION_CONSTANT.buttonLabel\n            }\n          />\n        </>\n      )}\n    </>\n  );\n};\nexport default Physicians;\n"],"names":["header","des","onDialogClose","isWarning","onConfirmClick","isOpen","buttonLabel","onClose","onRequestClose","contentClassName","className","variant","onClick","row","onActionHandle","actionsMenu","textTheme","useThemeClass","map","item","i","show","title","toolTip","visible","isImage","src","label","alt","style","maxWidth","e","key","dataObj","setSelectedData","setActiveConfirm","setOpenModal","id","original","_id","dataObj1","ACTIVE_INACTIVE_STATUS","identifier","status","checked","value","onChange","actionValue","action","onStatusChange","placeholder","debounceFn","debounce","val","size","prefix","target","getApi","endpoint","params","BaseService","then","res","data","postApi","payload","async","apiGetSearchResult","ApiService","url","method","setSearch","addButtonClick","hasPermisson","MODULE","ACCESS","icon","TableSearchBar","query","FORM_FIELDS","type","name","component","Input","isBasic","countryCode","textArea","Schema","Yup","shape","required","phoneNumber","address","fax","npiNo","initialValues","closeAddEdit","selectedRow","validationSchema","onSubmit","setSubmitting","dataToSend","replace","includes","email","APIS","toast","finally","enableReinitialize","errors","touched","values","isSubmitting","setFieldValue","loading","field","index","invalid","errorMessage","autoComplete","onWheel","isWheel","blur","inputStyle","width","padding","enableSearch","country","countryCodeEditable","phone","dialCode","ACTION_CONSTANT","TABLE_ACTION_KEYS","fontSize","tabledata","setTableData","useState","setLoading","search","page","setPage","totalCount","setTotalCount","limit","setLimit","isAddEdit","setIsAddEdit","setSelectedRow","openModal","refresh","setRefresh","selectedData","activeConfirm","useEffect","LIST_DATA_API_TYPE","skip","count","event","CONFIRMATION_CONSTANT","CONFIRMATION_OBJ","columns","Header","Cell","props","accessor","bodyClass","newColumn","skeletonAvatarColumns","skeletonAvatarProps","height","pagingData","pageIndex","pageSize","total","onPaginationChange","limitpage","onSelectChange","limitPage","ConfirmationContent","toastMessage","UPDATE_TOAST","DELETE_TOAST","s","ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM"],"sourceRoot":""}
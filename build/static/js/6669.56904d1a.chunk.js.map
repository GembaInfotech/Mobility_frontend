{"version":3,"file":"static/js/6669.56904d1a.chunk.js","mappings":"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","sources":["components/custom/ConfirmationContent/index.js","components/custom/actionColumn/index.js","components/custom/activeCheckbox/index.js","components/ui/TableSearchBar/index.js","services/CommonService.js","views/masters/insurances/Header.js","views/masters/insurances/addEdit.js","views/masters/insurances/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Dialog } from \"components/ui\";\r\n\r\nconst ConfirmationContent = ({\r\n  header,\r\n  des,\r\n  onDialogClose,\r\n  isWarning,\r\n  onConfirmClick,\r\n  isOpen,\r\n  buttonLabel,\r\n}) => {\r\n  return (\r\n    <Dialog\r\n      isOpen={isOpen}\r\n      onClose={onDialogClose}\r\n      onRequestClose={onDialogClose}\r\n      contentClassName=\"pb-0 px-0 mt-36 min-w-36\"\r\n    >\r\n      <div className=\"px-5 pb-5\">\r\n        <h5 className=\"mb-4\">{header}</h5>\r\n        <p>{des}</p>\r\n        {isWarning && <p className=\"text-red-700\">{isWarning}</p>}\r\n        <div className=\"text-right mt-6\">\r\n          <Button\r\n            className=\"ltr:mr-2 rtl:ml-2\"\r\n            variant=\"plain\"\r\n            onClick={onDialogClose}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"solid\" onClick={onConfirmClick}>\r\n            {buttonLabel}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmationContent;\r\n","import useThemeClass from 'utils/hooks/useThemeClass';\r\nimport { Tooltip } from 'components/ui';\r\n\r\nconst ActionColumn = ({ row, onActionHandle, actionsMenu }) => {\r\n  const { textTheme } = useThemeClass();\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-between\">\r\n      {actionsMenu?.map((item, i) => {\r\n        if (item?.show?.() ?? true) {\r\n          return (\r\n            <Tooltip title={item?.toolTip} visible={item?.toolTip ? true : false}>\r\n              {item?.isImage ? (\r\n                <img\r\n                  src={item.label}\r\n                  alt=\"view Icon\"\r\n                  style={{ maxWidth: '20px' }}\r\n                  // h-5 justify-center ml-5 text-blue-400\r\n                  className=\"cursor-pointer mx-0.5\"\r\n                  onClick={(e) => onActionHandle(e, item.key, row)}\r\n                />\r\n              ) : (\r\n                <span\r\n                  className={`${textTheme} cursor-pointer select-none font-semibold ml-2 `}\r\n                  onClick={(e) => onActionHandle(e, item.key, row)}\r\n                >\r\n                  {item.label}\r\n                </span>\r\n              )}\r\n            </Tooltip>\r\n          );\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionColumn;\r\n","import React from \"react\";\r\nimport { ACTIVE_INACTIVE_STATUS } from \"constants/app.constant\";\r\nimport { Checkbox } from \"components/ui\";\r\n\r\nconst ActiveInActiveCheckbox = ({\r\n  dataObj,\r\n  setSelectedData,\r\n  setActiveConfirm,\r\n  setOpenModal,\r\n}) => {\r\n  const onStatusChange = (e, value, id) => {\r\n    let actionValue = \"\";\r\n  \r\n    if (value === 1) {\r\n      actionValue = 2;\r\n    }\r\n    if (value === 2) {\r\n      actionValue = 1;\r\n    }\r\n    setSelectedData({ id, action: actionValue });\r\n    setActiveConfirm(true);\r\n    setOpenModal(true);\r\n  };\r\n  const id = dataObj?.row?.original?._id;\r\n  const dataObj1 = ACTIVE_INACTIVE_STATUS.find(\r\n    (item, i) => item.identifier === dataObj?.row?.original?.status\r\n  );\r\n  return (\r\n    <Checkbox\r\n      checked={dataObj1?.value}\r\n      onChange={(e) => onStatusChange(e, dataObj1?.identifier, id)}\r\n    />\r\n  );\r\n};\r\nexport default ActiveInActiveCheckbox;\r\n","import React from 'react';\r\nimport { Input } from 'components/ui';\r\nimport { HiOutlineSearch } from 'react-icons/hi';\r\nimport debounce from 'lodash/debounce';\r\n\r\nconst TableSearchBar = ({ onChange, placeholder }) => {\r\n  const debounceFn = debounce(handleDebounceFn, 500);\r\n\r\n  function handleDebounceFn(val) {\r\n    onChange?.(val);\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    debounceFn(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Input\r\n      className=\"max-w-md md:w-96 mb-4\"\r\n      size=\"sm\"\r\n      placeholder={placeholder ? `${placeholder}` : 'Filter by NAL, LCode, Referring Physician'}\r\n      prefix={<HiOutlineSearch className=\"text-lg\" />}\r\n      onChange={handleInputChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TableSearchBar;\r\n","import ApiService from \"./ApiService\"\r\nimport BaseService from \"./BaseService\";\r\n\r\nexport function getApi(endpoint, params) {\r\n  return BaseService.get(endpoint, { params }).then((res) => res?.data);\r\n}\r\n\r\nexport function postApi(endpoint, payload) {    \r\n  return BaseService.post(endpoint, payload).then((res) => res?.data);\r\n}\r\n\r\nexport async function apiGetNotificationCount () {\r\n    return ApiService.fetchData({\r\n        url: '/notification/count',\r\n        method: 'get'\r\n    })\r\n}\r\n\r\nexport async function apiGetNotificationList () {\r\n    return ApiService.fetchData({\r\n        url: '/notification/list',\r\n        method: 'get'\r\n    })\r\n}\r\n\r\nexport async function apiGetSearchResult (data) {\r\n    return ApiService.fetchData({\r\n        url: '/search/query',\r\n        method: 'post',\r\n        data\r\n    })\r\n}","import React, { useState, useEffect } from 'react';\r\nimport TableSearchBar from 'components/ui/TableSearchBar';\r\nimport { HiOutlinePlusCircle } from 'react-icons/hi';\r\nimport { GrPowerReset } from \"react-icons/gr\";\r\nimport { Button, Select } from 'components/ui';\r\nimport hasPermisson, { ACCESS, MODULE } from 'utils/hasPermission';\r\nimport { APIS, LIST_DATA_API_TYPE } from \"constants/api.constant\";\r\nimport { getApi } from 'services/CommonService';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst FilterSection = ({\r\n  setSearch,\r\n  filtervalue,\r\n  setFilterValue,\r\n  setFilterCompanyId,\r\n  filterCompanyId\r\n}) => {\r\n\r\n    const navigate = useNavigate();\r\n  \r\n  const user = useSelector((state) => state.auth.user);\r\n  \r\n  const [companyOptions, setCompanyOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCompanies = async () => {\r\n      try {\r\n        let response;\r\n\r\n        if (user?.companyId) {\r\n          response = await getApi(APIS.LIST_DATA, {\r\n            companyIds: JSON.stringify(user.companyId),\r\n            type: LIST_DATA_API_TYPE.COMPANY,\r\n          });\r\n        } else {\r\n          response = await getApi(APIS.LIST_DATA, { type: LIST_DATA_API_TYPE.COMPANY });\r\n        }\r\n\r\n        console.log(response?.data);\r\n        setCompanyOptions(response?.data?.data || []);\r\n        console.log(companyOptions)\r\n      } catch (error) {\r\n        console.error(\"Error loading company list:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCompanies();\r\n  }, [user]);\r\n\r\n  return (\r\n    <>\r\n      {/* <TableSearchBar onChange={(query) => setSearch(query)} /> */}\r\n      <div className=\"md:flex gap-4 w-full\">\r\n\r\n        <Select\r\n          autoComplete=\"off\"\r\n          placeholder=\"Filter by Company\"\r\n          defaultOptions\r\n          cacheOptions\r\n          size=\"sm\"\r\n          className=\"mb-4\"\r\n          value={filterCompanyId}\r\n          options={companyOptions}\r\n          getOptionLabel={(v) => `${v?.name || \"\"}`}\r\n          getOptionValue={(v) => v?._id}\r\n          onChange={(selectedCompany) => {\r\n            setFilterCompanyId(selectedCompany);\r\n            setFilterValue(\"\");\r\n          }}\r\n        />\r\n        <Button\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                setSearch(\"\");\r\n                setFilterCompanyId(null);\r\n                console.log(\"filterCompanyId\", filterCompanyId)\r\n                navigate(\"/app/masters/insurances\");\r\n              }}\r\n              icon={<GrPowerReset />}\r\n            >\r\n              Reset\r\n            </Button>\r\n\r\n      </div>\r\n\r\n      \r\n    </>\r\n\r\n  );\r\n};\r\n\r\nconst Header = ({\r\n  setSearch,\r\n  filtervalue,\r\n  setFilterValue,\r\n  setFilterCompanyId,\r\n  filterCompanyId,\r\n  addButtonClick }) => {\r\n  return (\r\n    <>\r\n      {hasPermisson(MODULE.INSURANCES, ACCESS.WRITE) && (\r\n        <div className=\"md:flex items-center justify-end\">\r\n          <Button size=\"sm\" variant=\"solid\" onClick={addButtonClick} icon={<HiOutlinePlusCircle />}>\r\n            Add Insurance\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <div className=\"flex flex-col\">\r\n        <FilterSection\r\n          setSearch = {setSearch}\r\n          filtervalue={filtervalue}\r\n          setFilterValue={setFilterValue}\r\n          setFilterCompanyId={setFilterCompanyId}\r\n          filterCompanyId={filterCompanyId}\r\n        />\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { AdaptableCard } from \"components/shared\";\r\nimport {\r\n  Button,\r\n  FormContainer,\r\n  toast,\r\n  Notification,\r\n  Card,\r\n  FormItem,\r\n  Input,\r\n  Select,\r\n} from \"components/ui\";\r\nimport { AiOutlineSave, AiOutlineCloseCircle } from \"react-icons/ai\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { getApi, postApi } from \"services/CommonService\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { APIS, LIST_DATA_API_TYPE } from \"constants/api.constant\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/bootstrap.css\";\r\nimport { useNavigate} from 'react-router-dom';\r\n\r\n\r\n\r\nconst FORM_FIELDS = [\r\n  {\r\n    label: \"Name\",\r\n    type: \"text\",\r\n    name: \"name\",\r\n    placeholder: \"Enter insurance name\",\r\n    component: Input,\r\n    isBasic: true,\r\n  },\r\n  {\r\n    name: \"phoneNumber\",\r\n    countryCode: \"countryCode\",\r\n    label: \"Mobile No.\",\r\n    component: \"phoneNumber\",\r\n    placeholder: \"Enter mobile no.\",\r\n  },\r\n  {\r\n    label: \"Email\",\r\n    name: \"email\",\r\n    placeholder: \"Enter Email\",\r\n    component: Input,\r\n    isBasic: true,\r\n  },\r\n  {\r\n    label: \"Address\",\r\n    name: \"address\",\r\n    placeholder: \"Enter Address\",\r\n    component: Input,\r\n    isBasic: true,\r\n  },\r\n\r\n];\r\n\r\n////// YUP VALIDATION //////\r\n\r\nconst Schema = Yup.object().shape({\r\n  name: Yup.string().required(\"Required\"),\r\n  email: Yup.string().email().required(\"Required\"),\r\n  phoneNumber: Yup.string().required(\"Required\"),\r\n  address: Yup.string().required(\"Required\"),\r\n});\r\n\r\n\r\n///// INITIAL VALUES //////\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  phoneNumber: \"\",\r\n  countryCode: \"+1\",\r\n  address: \"\",\r\n  companyId: \"\",\r\n};\r\n\r\nconst AddEditInsurance = ({ closeAddEdit, selectedRow }) => {\r\n  const savedHospitalId = localStorage.getItem(\"selectedHospitalId\");\r\n  // const [companyOptions, setCompanyOptionos] = useState([]);\r\n  const user = useSelector((state) => state.auth.user);\r\n  const navigate = useNavigate();\r\n  \r\n\r\n\r\n  // useEffect(() => {\r\n  //   if (user?.companyId) {\r\n  //     getApi(APIS.LIST_DATA, {\r\n  //       companyIds: JSON.stringify(user.companyId),\r\n  //       type: LIST_DATA_API_TYPE.COMPANY,\r\n  //     })\r\n  //       .then((res) => {\r\n  //         const response = res?.data?.data;\r\n\r\n  //         if (Array.isArray(response)) {\r\n  //           const companyOptions = response.map((company) => ({\r\n  //             label: company.name,\r\n  //             value: company._id,\r\n  //           }));\r\n  //           setCompanyOptionos(companyOptions);\r\n  //         }\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         // Handle any errors from the additional API call\r\n  //         console.error(\"Error calling additional API:\", error);\r\n  //       });\r\n  //   } else {\r\n  //     getApi(APIS.LIST_DATA, { type: LIST_DATA_API_TYPE.COMPANY })\r\n  //       .then((res) => {\r\n  //         if (res && res.data && Array.isArray(res.data.data)) {\r\n  //           const locations = res.data.data.map((location) => ({\r\n  //             label: location.name,\r\n  //             value: location._id,\r\n  //           }));\r\n  //           setCompanyOptionos(locations);\r\n  //         } else {\r\n  //           toast.push(<Notification type=\"error\">No Companies found!</Notification>);\r\n  //         }\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.error(\"Error fetching Companies:\", error);\r\n  //         toast.push(<Notification type=\"error\">Failed to load Companies</Notification>);\r\n  //       });\r\n  //   }\r\n\r\n  // }, []);\r\n  //// HANDLER FOR SUBMIT FORM /////\r\n  const onSubmit = (payload, { setSubmitting }) => {\r\n\r\n    const dataToSend = {}\r\n    // Remove Country code from phone number\r\n    dataToSend.phoneNumber = payload?.phoneNumber?.replace(\r\n      payload?.countryCode,\r\n      \"\"\r\n    );\r\n\r\n    // dataToSend.companyId = payload.companyId;\r\n    dataToSend.companyId = savedHospitalId;\r\n\r\n    if (!payload?.countryCode?.includes(\"+\")) {\r\n      dataToSend.countryCode = `+${payload.countryCode}`;\r\n    }\r\n\r\n    //Check for Empty Phone number\r\n    if (payload.phoneNumber === \"\") {\r\n      delete dataToSend.phoneNumber;\r\n    }\r\n\r\n    if (selectedRow) {\r\n      dataToSend.id = selectedRow._id\r\n    }\r\n\r\n    dataToSend.name = payload?.name\r\n    dataToSend.email = payload?.email\r\n    dataToSend.address = payload?.address\r\n    // dataToSend.companyId = savedHospitalId\r\n\r\n    postApi(APIS.ADD_EDIT_INSURANCE, dataToSend)\r\n      .then((res) => {\r\n        navigate(-1);\r\n        toast.push(\r\n          <Notification type=\"success\">Saved successfully</Notification>\r\n        );\r\n      }).catch(()=>{\r\n        setSubmitting(false)\r\n      })\r\n      .finally(() => {\r\n        // closeAddEdit();\r\n        setSubmitting(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <AdaptableCard>\r\n      <Formik\r\n        initialValues={selectedRow ? selectedRow : initialValues}\r\n        validationSchema={Schema}\r\n        onSubmit={onSubmit}\r\n        enableReinitialize\r\n      >\r\n        {({ errors, touched, values, isSubmitting, setFieldValue }) => (\r\n          <Form className=\"p-5\">\r\n            <div className=\"flex mb-3 justify-between w-3/4\">\r\n              <h3>{selectedRow ? \"Edit Insurance\" : \"Add Insurance\"}</h3>\r\n              <div className=\"flex\">\r\n                <Button\r\n                  size=\"sm\"\r\n                  className=\"ltr:mr-3 rtl:ml-3\"\r\n                  onClick={closeAddEdit}\r\n                  icon={<AiOutlineCloseCircle />}\r\n                  type=\"button\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  size=\"sm\"\r\n                  variant=\"solid\"\r\n                  loading={isSubmitting}\r\n                  icon={<AiOutlineSave />}\r\n                  type=\"submit\"\r\n                >\r\n                  {selectedRow ? \"Update\" : \"Save\"}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <Card className=\"mt-2.5 w-3/4 \">\r\n                <FormContainer className=\" md:w-full lg:w-1/2\">\r\n                  {/* <FormItem\r\n                    label=\"Company\"\r\n                    invalid={errors.companyId && touched.companyId}\r\n                    errorMessage={errors.companyId}\r\n                  >\r\n                    <Field name=\"companyId\">\r\n                      {({ field, form }) => (\r\n                        <Select\r\n                          {...field}\r\n                          options={companyOptions}\r\n                          placeholder=\"Select Company\"\r\n                          value={companyOptions.find(\r\n                            (option) => option.value === field.value\r\n                          )}\r\n                          onChange={(selectedOption) =>\r\n                            form.setFieldValue(\"companyId\", selectedOption.value)\r\n                          }\r\n                          onBlur={field.onBlur}\r\n                        />\r\n                      )}\r\n                    </Field>\r\n                  </FormItem> */}\r\n\r\n                  {FORM_FIELDS.map((field, index) => {\r\n                    return (\r\n                      <FormItem\r\n                        key={index}\r\n                        label={field?.label}\r\n                        invalid={errors?.[field.name] && touched?.[field.name]}\r\n                        errorMessage={errors?.[field.name]}\r\n                      >\r\n                        {field?.isBasic ? (\r\n                          <Field\r\n                            type={field.type}\r\n                            autoComplete=\"off\"\r\n                            onWheel={(e) =>\r\n                              field?.isWheel ? e.target.blur() : \"\"\r\n                            }\r\n                            value={values?.[field.name]}\r\n                            name={field.name}\r\n                            placeholder={field.placeholder}\r\n                            component={field?.component}\r\n                          />\r\n                        ) : (\r\n                          <>\r\n                            {field?.component === \"phoneNumber\" && (\r\n                              <PhoneInput\r\n                                inputStyle={{ width: \"369px\", padding: \"11px 14px 11px 60px\" }}\r\n                                enableSearch={true}\r\n                                country={\"us\"}\r\n                                countryCodeEditable\r\n                                value={`${values?.[field.name]}`}\r\n                                onChange={(phone, country) => {\r\n                                  setFieldValue(field.name, phone);\r\n                                  setFieldValue(field.countryCode, country?.dialCode);\r\n                                }}\r\n                              />\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </FormItem>\r\n\r\n                    );\r\n                  })}\r\n                </FormContainer>\r\n              </Card>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </AdaptableCard>\r\n  );\r\n};\r\n\r\nexport default AddEditInsurance;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getApi, postApi } from 'services/CommonService';\r\nimport { APIS, LIST_DATA_API_TYPE } from 'constants/api.constant';\r\nimport { AdaptableCard, DataTable } from 'components/shared';\r\nimport Header from './Header';\r\nimport { AiFillDelete } from 'react-icons/ai';\r\nimport { toast, Notification } from 'components/ui';\r\nimport ConfirmationContent from 'components/custom/ConfirmationContent';\r\nimport {\r\n  ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM,\r\n  DELETE_TOAST,\r\n  UPDATE_TOAST,\r\n} from 'constants/app.constant';\r\nimport { TABLE_ACTION_KEYS, CONFIRMATION_OBJ } from 'constants/app.constant';\r\nimport AddEditInsurance from './addEdit';\r\nimport ActiveInActiveCheckbox from 'components/custom/activeCheckbox';\r\nimport hasPermisson, { ACCESS, MODULE, newColumn } from 'utils/hasPermission';\r\nimport ActionColumn from 'components/custom/actionColumn';\r\n\r\nconst ACTION_CONSTANT = [\r\n  {\r\n    label: 'Edit',\r\n    key: TABLE_ACTION_KEYS.EDIT,\r\n    show: () => hasPermisson(MODULE.INSURANCES, ACCESS.WRITE),\r\n  },\r\n  {\r\n    label: <AiFillDelete style={{ fontSize: '1.2rem' }} />,\r\n    key: TABLE_ACTION_KEYS.DELETE,\r\n    toolTip: 'Delete',\r\n    show: () => hasPermisson(MODULE.INSURANCES, ACCESS.DELETE),\r\n  },\r\n];\r\n\r\nconst Insurances = () => {\r\n  const savedHospitalId = localStorage.getItem(\"selectedHospitalId\");\r\n  const [filterCompanyId, setFilterCompanyId] = useState([]);\r\n  const [tabledata, setTableData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [search, setSearch] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [isAddEdit, setIsAddEdit] = useState(false);\r\n  const [selectedRow, setSelectedRow] = useState('');\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [selectedData, setSelectedData] = useState('');\r\n  const [activeConfirm, setActiveConfirm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getApi(APIS.LIST_DATA, {\r\n      type : LIST_DATA_API_TYPE.INSURANCES,\r\n      limit,\r\n      search,\r\n      companyId: filterCompanyId?._id ?? savedHospitalId,\r\n      skip: limit * (page - 1),\r\n    })\r\n      .then((res) => {\r\n        setTableData(res?.data?.data);\r\n        setTotalCount(res?.data?.count);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [search, page, limit, refresh, filterCompanyId]);\r\n\r\n  const onActionHandle = (event, key, row) => {\r\n    setSelectedRow(row);\r\n    if (key === TABLE_ACTION_KEYS.EDIT) {\r\n      row.phoneNumber = row?.countryCode + row?.phoneNumber\r\n      setIsAddEdit(true);\r\n    }\r\n    if (key === TABLE_ACTION_KEYS.DELETE) {\r\n      setOpenModal(true);\r\n    }\r\n  };\r\n\r\n  const onDialogClose = () => {\r\n    setOpenModal(false);\r\n    setSelectedRow('');\r\n    setActiveConfirm(false);\r\n  };\r\n\r\n  const CONFIRMATION_CONSTANT = {\r\n    header: CONFIRMATION_OBJ.HEADER,\r\n    des: CONFIRMATION_OBJ.DELETE,\r\n    buttonLabel: 'Delete',\r\n  };\r\n\r\n  const onDialogOk = () => {\r\n    let toastMessage;\r\n    console.log('selectedRow', selectedRow)\r\n    const payload = {\r\n      type: LIST_DATA_API_TYPE.INSURANCES,\r\n      id: selectedRow?._id,\r\n    }\r\n    if (activeConfirm) {\r\n      toastMessage = UPDATE_TOAST;\r\n      payload.status = +selectedRow?.action;\r\n    \r\n    } else {\r\n      toastMessage = DELETE_TOAST;\r\n      payload.status = 0\r\n    }\r\n\r\n    postApi(APIS.BLOCK_DELETE_DATA, payload).then((res) => {\r\n      toast.push(<Notification type=\"success\">{toastMessage}</Notification>);\r\n      setRefresh((s) => !s);\r\n      onDialogClose();\r\n    });\r\n  };\r\n\r\n  const closeAddEdit = () => {\r\n    setIsAddEdit(false);\r\n    setRefresh(!refresh);\r\n    setSelectedRow('');\r\n  };\r\n\r\n  const columns = [\r\n  \r\n    {\r\n      Header: 'Company Name',\r\n      Cell: (props) => {\r\n        const row = props?.row?.original;\r\n        return <div className=\"flex items-center w-40\">{row?.name}</div>;\r\n      },\r\n    },\r\n    {\r\n      Header: 'Address',\r\n      accessor: 'address',\r\n      Cell: (props) => {\r\n        const row = props?.row?.original;\r\n        return (\r\n          <div className=\"flex items-center w-40\">\r\n            {row?.address}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      Header: 'Mobile',\r\n      accessor: 'mobile',\r\n      Cell: (props) => {\r\n        const row = props?.row?.original;\r\n        return (\r\n          <div className=\"flex items-center w-40\">\r\n            {row?.countryCode} - {row?.phoneNumber}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: 'Email',\r\n      accessor: 'email',\r\n      Cell: (props) => {\r\n        const row = props?.row?.original;\r\n        return (\r\n          <div className=\"flex items-center w-40\">\r\n            {row?.email}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n   \r\n   \r\n    {\r\n      Header: 'Active',\r\n      Cell: (props) => {\r\n        return (\r\n          <ActiveInActiveCheckbox\r\n            dataObj={props}\r\n            setSelectedData={setSelectedData}\r\n            setActiveConfirm={setActiveConfirm}\r\n            setOpenModal={setOpenModal}\r\n          />\r\n        );\r\n      },\r\n    },\r\n    {\r\n      Header: 'Actions',\r\n      id: 'action',\r\n      accessor: (row) => row,\r\n      Cell: (props) => (\r\n        <ActionColumn\r\n          row={props.row.original}\r\n          onActionHandle={onActionHandle}\r\n          actionsMenu={ACTION_CONSTANT}\r\n        />\r\n      ),\r\n    },\r\n    \r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {isAddEdit ? (\r\n        <AddEditInsurance closeAddEdit={closeAddEdit} selectedRow={selectedRow} />\r\n      ) : (\r\n        <>\r\n          <Header \r\n          setSearch={setSearch}\r\n          setFilterCompanyId={setFilterCompanyId}\r\n          filterCompanyId={filterCompanyId}\r\n          addButtonClick={() => setIsAddEdit(true)} />\r\n          <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\r\n            <DataTable\r\n              columns={newColumn(columns, MODULE.INSURANCES, 1)}\r\n              data={tabledata}\r\n              loading={loading}\r\n              skeletonAvatarColumns={[0]}\r\n              skeletonAvatarProps={{ width: 28, height: 28 }}\r\n              pagingData={{\r\n                pageIndex: page,\r\n                pageSize: limit,\r\n                total: totalCount,\r\n              }}\r\n              onPaginationChange={(limitpage) => setPage(limitpage)}\r\n              onSelectChange={(limitPage) => setLimit(limitPage)}\r\n            />\r\n          </AdaptableCard>\r\n\r\n          <ConfirmationContent\r\n            isOpen={openModal}\r\n            onConfirmClick={onDialogOk}\r\n            header={CONFIRMATION_CONSTANT.header}\r\n            des={\r\n              activeConfirm ? ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM?.des : CONFIRMATION_OBJ.DELETE\r\n            }\r\n            isWarning={!activeConfirm && CONFIRMATION_OBJ.WARNING}\r\n            onDialogClose={onDialogClose}\r\n            buttonLabel={\r\n              activeConfirm\r\n                ? ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM?.buttonLabel\r\n                : CONFIRMATION_CONSTANT.buttonLabel\r\n            }\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Insurances;\r\n"],"names":["header","des","onDialogClose","isWarning","onConfirmClick","isOpen","buttonLabel","onClose","onRequestClose","contentClassName","className","variant","onClick","row","onActionHandle","actionsMenu","textTheme","useThemeClass","map","item","i","show","title","toolTip","visible","isImage","src","label","alt","style","maxWidth","e","key","dataObj","setSelectedData","setActiveConfirm","setOpenModal","id","original","_id","dataObj1","ACTIVE_INACTIVE_STATUS","identifier","status","checked","value","onChange","actionValue","action","onStatusChange","placeholder","debounceFn","debounce","val","size","prefix","target","getApi","endpoint","params","BaseService","then","res","data","postApi","payload","apiGetSearchResult","ApiService","url","method","FilterSection","setSearch","setFilterValue","filtervalue","setFilterCompanyId","filterCompanyId","navigate","useNavigate","user","useSelector","state","auth","useState","companyOptions","setCompanyOptions","useEffect","fetchCompanies","companyId","APIS","companyIds","JSON","stringify","type","LIST_DATA_API_TYPE","response","console","log","error","autoComplete","defaultOptions","cacheOptions","options","getOptionLabel","v","name","getOptionValue","selectedCompany","icon","addButtonClick","hasPermisson","MODULE","ACCESS","FORM_FIELDS","component","Input","isBasic","countryCode","Schema","Yup","shape","required","email","phoneNumber","address","initialValues","closeAddEdit","selectedRow","savedHospitalId","localStorage","getItem","validationSchema","onSubmit","setSubmitting","dataToSend","replace","includes","toast","catch","finally","enableReinitialize","errors","touched","values","isSubmitting","setFieldValue","loading","field","index","invalid","errorMessage","onWheel","isWheel","blur","inputStyle","width","padding","enableSearch","country","countryCodeEditable","phone","dialCode","ACTION_CONSTANT","TABLE_ACTION_KEYS","fontSize","tabledata","setTableData","setLoading","search","page","setPage","totalCount","setTotalCount","limit","setLimit","isAddEdit","setIsAddEdit","setSelectedRow","openModal","refresh","setRefresh","activeConfirm","skip","count","event","CONFIRMATION_CONSTANT","CONFIRMATION_OBJ","columns","Header","Cell","props","accessor","bodyClass","newColumn","skeletonAvatarColumns","skeletonAvatarProps","height","pagingData","pageIndex","pageSize","total","onPaginationChange","limitpage","onSelectChange","limitPage","ConfirmationContent","toastMessage","UPDATE_TOAST","DELETE_TOAST","s","ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM"],"sourceRoot":""}
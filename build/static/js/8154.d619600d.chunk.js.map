{"version":3,"file":"static/js/8154.d619600d.chunk.js","mappings":"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","sources":["assets/icon.js","components/custom/exportContent/index.js","components/custom/userPasswordConfirm/index.js","views/userManagement/patient/index.js"],"sourcesContent":["export const IMAGES = {\r\n  VIEW_IMAGE: \"/img/prescription.png\",\r\n  REPLY: \"/img/reply.png\",\r\n  STATUS: \"/img/status.png\",\r\n  EXPORT: \"/img/fileExport.svg\",\r\n  RECEIPT: \"/img/receipt.svg\",\r\n  DOWNLOAD_PDF: \"/img/download.png\",\r\n};\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  Notification,\r\n  toast,\r\n} from 'components/ui';\r\nimport appConfig from 'configs/app.config';\r\nimport { APIS } from 'constants/api.constant';\r\nimport React from 'react';\r\nimport { postApi } from 'services/CommonService';\r\n\r\nconst ExportContent = ({ type, onDialogClose, isOpen, user, Payload }) => {\r\n  const onSubmit = () => {\r\n    const payload = { type, ...Payload };\r\n    \r\n    if (user) {\r\n      payload.userId = user?._id;\r\n    }\r\n\r\n    postApi(APIS.EXPORT_DATA, payload).then((res) => {\r\n      toast.push(<Notification type=\"success\">Exported successfully</Notification>);\r\n      const downloadLink = document.createElement('a');\r\n      downloadLink.href = appConfig.imageBaseUrl + res?.data?.fileName; \r\n      downloadLink.download = 'file_name.xlsx';\r\n      document.body.appendChild(downloadLink);\r\n      downloadLink.click();\r\n      document.body.removeChild(downloadLink);\r\n      onDialogClose();\r\n    }).catch(error => {\r\n      toast.push(<Notification type=\"error\">Export failed: {error.message}</Notification>);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      isOpen={isOpen}\r\n      onClose={onDialogClose}\r\n      onRequestClose={onDialogClose}\r\n      contentClassName=\"pb-0 px-0 mt-36 min-w-36\"\r\n    >\r\n      <div className=\"p-6\">\r\n        <p className=\"text-md mb-6 font-bold \">Please download the Excel file for the data.</p>\r\n        <div className=\"text-right mt-6\">\r\n          {/* <Button\r\n            className=\"ltr:mr-2 rtl:ml-2\"\r\n            variant=\"plain\"\r\n            onClick={onDialogClose}\r\n            type=\"button\"\r\n          >\r\n            Cancel\r\n          </Button> */}\r\n          <Button \r\n            variant=\"solid\" \r\n            type=\"button\" \r\n            onClick={onSubmit}\r\n          >\r\n            Export/Download File\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExportContent;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  FormContainer,\r\n  FormItem,\r\n  toast,\r\n  Notification,\r\n} from \"components/ui\";\r\nimport * as Yup from \"yup\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { PasswordInput } from \"components/shared\";\r\nimport { postApi } from \"services/CommonService\";\r\nimport { APIS } from \"constants/api.constant\";\r\nimport { UPDATE_TOAST } from \"constants/app.constant\";\r\n\r\nconst FORM_FIELD = [\r\n  { label: \"Password\", identifier: \"password\" },\r\n  { label: \"Confirm Password\", identifier: \"confirmPassword\" },\r\n];\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .required(\"Please enter a password\")\r\n    .min(8, \"Password must have at least 8 characters\"),\r\n  confirmPassword: Yup.string()\r\n    .oneOf([Yup.ref(\"password\"), null], \"Your passwords do not match\")\r\n    .required(\"Please enter confirm password\"),\r\n});\r\n\r\nconst initialValues = {\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\nconst UserPasswordConfirm = ({\r\n  selectedId,\r\n  onDialogClose,\r\n  isOpen,\r\n  setRefresh,\r\n}) => {\r\n  const onSubmit = (payload) => {\r\n    postApi(APIS.USER_PASSWORD_RESET, {\r\n      id: selectedId,\r\n      password: payload?.password,\r\n    }).then((res) => {\r\n      toast.push(<Notification type=\"success\">{UPDATE_TOAST}</Notification>);\r\n      setRefresh((s) => !s);\r\n      onDialogClose();\r\n    });\r\n  };\r\n  return (\r\n    <Dialog\r\n      isOpen={isOpen}\r\n      onClose={onDialogClose}\r\n      onRequestClose={onDialogClose}\r\n      contentClassName=\"pb-0 px-0 mt-36 min-w-36\"\r\n    >\r\n      <div className=\"px-5 pb-5\">\r\n        <h5 className=\"mb-4\">Reset Password</h5>\r\n        {/* <p>{des}</p> */}\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({ touched, errors, isSubmitting }) => (\r\n            <Form>\r\n              <FormContainer>\r\n                <>\r\n                  {FORM_FIELD.map((field, index) => {\r\n                    return (\r\n                      <FormItem\r\n                        key={`${field.identifier}-${index}`}\r\n                        label={field.label}\r\n                        invalid={\r\n                          errors?.[field.identifier] &&\r\n                          touched?.[field.identifier]\r\n                        }\r\n                        errorMessage={errors?.[field.identifier]}\r\n                      >\r\n                        <Field\r\n                          autoComplete=\"off\"\r\n                          name={field.identifier}\r\n                          placeholder={field.label}\r\n                          component={PasswordInput}\r\n                        />\r\n                      </FormItem>\r\n                    );\r\n                  })}\r\n                  <div className=\"text-right mt-6\">\r\n                    <Button\r\n                      className=\"ltr:mr-2 rtl:ml-2\"\r\n                      variant=\"plain\"\r\n                      onClick={onDialogClose}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      className=\"ltr:mr-2 rtl:ml-2\"\r\n                      loading={isSubmitting}\r\n                      variant=\"solid\"\r\n                      type=\"submit\"\r\n                    >\r\n                      {isSubmitting ? \"Reseting...\" : \"Reset\"}\r\n                    </Button>\r\n                  </div>\r\n                </>\r\n              </FormContainer>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UserPasswordConfirm;\r\n","import { AdaptableCard } from \"components/shared\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { DataTable } from \"components/shared\";\r\nimport dayjs from \"dayjs\";\r\nimport utc from \"dayjs/plugin/utc\";\r\nimport timezone from \"dayjs/plugin/timezone\";\r\nimport { getApi, postApi } from \"services/CommonService\";\r\nimport { APIS, LIST_DATA_API_TYPE } from \"constants/api.constant\";\r\nimport { toast, Notification, Avatar } from \"components/ui\";\r\nimport ActionColumn from \"components/custom/actionColumn\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport ConfirmationContent from \"components/custom/ConfirmationContent\";\r\nimport Header from \"components/custom/header\";\r\nimport { HiOutlinePlusCircle } from \"react-icons/hi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport appConfig from \"configs/app.config\";\r\nimport {\r\n  TABLE_ACTION_KEYS,\r\n  CONFIRMATION_OBJ,\r\n  DELETE_TOAST,\r\n  UPDATE_TOAST,\r\n  ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM,\r\n  DATE_TIME_FORMAT,\r\n  ACTIVE_STATUS_OPTONS,\r\n} from \"constants/app.constant\";\r\nimport { IMAGES } from \"../../../assets/icon\";\r\nimport ActiveInActiveCheckbox from \"components/custom/activeCheckbox\";\r\nimport UserPasswordConfirm from \"components/custom/userPasswordConfirm\";\r\nimport ExportContent from \"components/custom/exportContent\";\r\nimport { GrPowerReset } from \"react-icons/gr\";\r\nimport hasPermisson, {\r\n  ACCESS,\r\n  MODULE,\r\n  getFormattedPhoneNum,\r\n  userColumn,\r\n} from \"utils/hasPermission\";\r\n\r\n\r\nconst ACTION_CONSTANT = [\r\n  {\r\n    label: \"Edit\",\r\n    key: TABLE_ACTION_KEYS.EDIT,\r\n    show: () => hasPermisson(MODULE.PATIENT, ACCESS.WRITE),\r\n  },\r\n  // {\r\n  //   label: <FaKey style={{ fontSize: \"1.2rem\" }} />,\r\n  //   key: TABLE_ACTION_KEYS.CHANGE_PASSWORD,\r\n  //   toolTip: \"Change Password\",\r\n  //   show: () => hasPermisson(MODULE.PATIENT, ACCESS.WRITE),\r\n  // },\r\n  {\r\n    label: <AiFillDelete style={{ fontSize: \"1.1rem\" }} />,\r\n    key: TABLE_ACTION_KEYS.DELETE,\r\n    show: () => hasPermisson(MODULE.PATIENT, ACCESS.DELETE),\r\n    toolTip: \"Delete\",\r\n  },\r\n  {\r\n    label: IMAGES.VIEW_IMAGE,\r\n    key: TABLE_ACTION_KEYS.NAVIGATE,\r\n    isImage: true,\r\n    toolTip: \"View Prescriptions\",\r\n    show: () => hasPermisson(MODULE.SERVICEORDER, ACCESS.READ),\r\n  },\r\n];\r\n\r\nconst DEL_CONFIRM = {\r\n  header: CONFIRMATION_OBJ.HEADER,\r\n  des: CONFIRMATION_OBJ.DELETE,\r\n  warning: CONFIRMATION_OBJ.WARNING,\r\n  buttonLabel: \"Delete\",\r\n};\r\n\r\nconst BUTTON_CONSTANT = [\r\n  {\r\n    label: \"Add Patient\",\r\n    key: TABLE_ACTION_KEYS.ADD,\r\n    icon: <HiOutlinePlusCircle />,\r\n  },\r\n  // {\r\n  //   label: \"Export Excel\",\r\n  //   key: TABLE_ACTION_KEYS.EXPORT,\r\n  //   icon: <AiOutlineFile />,\r\n  // },\r\n];\r\n\r\nconst FILTER_CONSTANT = [\r\n  {\r\n    component: \"select\",\r\n    options: ACTIVE_STATUS_OPTONS,\r\n    className: \"mb-4 w-40\",\r\n    placeholder: \"Status\",\r\n    filterKey: \"status\",\r\n  },\r\n  {\r\n    component: \"datePicker\",\r\n    placeholder: \"DOB\",\r\n    className: \"mb-4 w-64\",\r\n    filterKey: \"dob\",\r\n  },\r\n  {\r\n    component: \"input\",\r\n    placeholder: \"Mobile Number\",\r\n    className: \"mb-4 w-40\",\r\n    filterKey: \"mobile\",\r\n  },\r\n  {\r\n    component: \"resetButton\",\r\n    label: \"Reset\",\r\n    icon: <GrPowerReset />,\r\n    className: \"mb-4\",\r\n    filterKey: { status: \"\", dob: null, search: \"\" },\r\n  },\r\n];\r\n\r\n\r\nconst PatientManagement = () => {\r\n  const savedHospitalId = localStorage.getItem(\"selectedHospitalId\");\r\n  const [filterCompanyId, setFilterCompanyId] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [tags, setData] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [selectedData, setSelectedData] = useState(\"\");\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [activeConfirm, setActiveConfirm] = useState(false);\r\n  const [openPasswordModal, setOpenPasswordModal] = useState(\"\");\r\n  const [openExportModal, setOpenExportModal] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [filterValue, setFilterValue] = useState({\r\n    status: \"\",\r\n  });\r\n  dayjs.extend(utc);\r\n  dayjs.extend(timezone);\r\n\r\n  const NameColumn = ({ row }) => {\r\n    return (\r\n      <div className=\"flex items-center\">\r\n        {row?.imageUrlThumbnail !== null && row?.imageUrlThumbnail ? (\r\n          <Avatar\r\n            size={28}\r\n            shape=\"circle\"\r\n            className=\"mr-2\"\r\n            src={`${appConfig.imageBaseUrl}${row?.imageUrlThumbnail}`}\r\n          />\r\n        ) : (\r\n          <Avatar size={28} shape=\"circle\" className=\"mr-2\">\r\n            {row?.firstName?.[0]?.toUpperCase()}\r\n          </Avatar>\r\n        )}\r\n\r\n        <div className=\"w-32\">{`${row?.firstName || row?.lastName\r\n            ? `${row?.lastName ? row?.lastName : \"\"\r\n            }, ${row?.firstName ? row?.firstName : \"\"} `\r\n            : \"-\"\r\n          }`}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getApi(APIS.LIST_DATA, {\r\n      type: LIST_DATA_API_TYPE.PATIENTS,\r\n      limit,\r\n      search,\r\n      companyId: filterCompanyId?._id ?? savedHospitalId,\r\n      status: filterValue?.status ? filterValue?.status?.value : null,\r\n      patientDob: filterValue?.dob ? dayjs(filterValue.dob).format(\"MM/DD/YYYY\") : null,\r\n      mobile: filterValue?.mobile ? filterValue.mobile : null,\r\n      skip: limit * (page - 1),\r\n    })\r\n      .then((res) => {\r\n        setData(res?.data?.data);\r\n        setTotalCount(res?.data?.count);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [savedHospitalId, search, page, limit, refresh, filterValue, filterCompanyId]);\r\n\r\n\r\n  const onActionHandle = (e, key, row) => {\r\n    if (key === TABLE_ACTION_KEYS.DELETE) {\r\n      setSelectedData({\r\n        id: row?._id,\r\n      });\r\n      setOpenModal(true);\r\n    }\r\n    if (key === TABLE_ACTION_KEYS.EDIT) {\r\n      navigate(`/app/patient/edit/${row?._id}`);\r\n    }\r\n    if (key === TABLE_ACTION_KEYS.NAVIGATE) {\r\n      navigate(`/app/orderManagement/service-order/${row?._id}`);\r\n    }\r\n  };\r\n\r\n  const onModalClose = () => {\r\n    setSelectedData(\"\");\r\n    setOpenModal(false);\r\n    setActiveConfirm(false);\r\n    setOpenExportModal(false);\r\n    setOpenPasswordModal(\"\");\r\n  };\r\n\r\n  const onHeaderButtonClick = (e, key) => {\r\n    if (key === TABLE_ACTION_KEYS.ADD) {\r\n      navigate(\"/app/patient/add\");\r\n    }\r\n    if (key === TABLE_ACTION_KEYS.EXPORT) {\r\n      setOpenExportModal(true);\r\n    }\r\n  };\r\n\r\n  const Caselabel = savedHospitalId === \"67c3ec77851f03d96270ca85\"\r\n    ? \"NASPAC Case No.\"\r\n    : savedHospitalId === \"67c3fb8308a4d79e36ebf939\"\r\n      ? \"PPS Case No.\"\r\n      : \"Case No.\";\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"Patient ID\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return row?.patientNo === null ? \"-\" : row?.patientNo;\r\n      },\r\n    },\r\n    {\r\n      Header: \"Patient Name\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return <NameColumn row={row} />;\r\n      },\r\n    },\r\n    {\r\n      Header: \"Mobile\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return (\r\n          <div className=\"flex items-center whitespace-nowrap\">\r\n            <p>{`${row?.countryCode} ${getFormattedPhoneNum(\r\n              row?.phoneNumber\r\n            )}`}</p>\r\n            {/* {dataObj === 1 && (\r\n              <img\r\n                className=\"ml-1 h-5 w-5\"\r\n                src={`${LOGO_SRC_PATH}verified.png`}\r\n                alt={`${APP_NAME} logo`}\r\n              />\r\n            )} */}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: \"DOB\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return `${dayjs(row?.dob).format(\"MM/DD/YYYY\") || '-'}`;\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: `${Caselabel}`,\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return (\r\n          <div className=\"flex items-center \">\r\n            {row?.naspacNo ? row?.naspacNo : \"-\"}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: \"Registered On\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return (\r\n          <div className=\"flex items-center \">\r\n            {dayjs.utc(row?.createdAt).tz(\"America/New_York\").format(DATE_TIME_FORMAT)}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: \"Active\",\r\n      Cell: (props) => {\r\n        return (\r\n          <ActiveInActiveCheckbox\r\n            dataObj={props}\r\n            setSelectedData={setSelectedData}\r\n            setActiveConfirm={setActiveConfirm}\r\n            setOpenModal={setOpenModal}\r\n          />\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: \"Actions\",\r\n      id: \"action\",\r\n      accessor: (row) => row,\r\n      Cell: (props) => (\r\n        <ActionColumn\r\n          row={props.row.original}\r\n          onActionHandle={onActionHandle}\r\n          actionsMenu={ACTION_CONSTANT}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const onConfirmClick = () => {\r\n    let toastMessage;\r\n    const payload = {\r\n      type: LIST_DATA_API_TYPE.PATIENTS,\r\n      id: selectedData?.id,\r\n    }\r\n    if (activeConfirm) {\r\n      toastMessage = UPDATE_TOAST;\r\n      payload.status = +selectedData?.action;\r\n\r\n    } else {\r\n      toastMessage = DELETE_TOAST;\r\n      payload.status = 0\r\n    }\r\n\r\n    postApi(APIS.BLOCK_DELETE_DATA, payload).then((res) => {\r\n      toast.push(<Notification type=\"success\">{toastMessage}</Notification>);\r\n      setRefresh((s) => !s);\r\n      onModalClose();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        buttonMenu={\r\n          hasPermisson(MODULE.PATIENT, ACCESS.WRITE)\r\n            ? BUTTON_CONSTANT\r\n            : BUTTON_CONSTANT.slice(0, BUTTON_CONSTANT.length - 1)\r\n        }\r\n        FilterMenu={FILTER_CONSTANT}\r\n        setFilterCompanyId={setFilterCompanyId}\r\n        filterCompanyId={filterCompanyId}\r\n        setSearch={setSearch}\r\n        buttonClick={onHeaderButtonClick}\r\n        setFilterValue={setFilterValue}\r\n        filterValue={filterValue}\r\n        searchPlaceholder=\"Search with Code, Name, Email, Mobile\"\r\n      />\r\n\r\n      <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\r\n        <DataTable\r\n          isCursor={false}\r\n          columns={userColumn(columns, MODULE.PATIENT)}\r\n          data={tags}\r\n          loading={loading}\r\n          skeletonAvatarColumns={[0]}\r\n          skeletonAvatarProps={{ width: 28, height: 28 }}\r\n          pagingData={{ pageIndex: page, pageSize: limit, total: totalCount }}\r\n          onPaginationChange={(pages) => setPage(pages)}\r\n          onSelectChange={(limits) => setLimit(limits)}\r\n        />\r\n      </AdaptableCard>\r\n\r\n      <ConfirmationContent\r\n        isOpen={openModal}\r\n        onConfirmClick={onConfirmClick}\r\n        header={DEL_CONFIRM.header}\r\n        des={\r\n          activeConfirm\r\n            ? ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM?.des\r\n            : DEL_CONFIRM.des\r\n        }\r\n        onDialogClose={onModalClose}\r\n        isWarning={!activeConfirm && DEL_CONFIRM.warning}\r\n        buttonLabel={\r\n          activeConfirm\r\n            ? ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM?.buttonLabel\r\n            : DEL_CONFIRM.buttonLabel\r\n        }\r\n      />\r\n      <UserPasswordConfirm\r\n        isOpen={!!openPasswordModal}\r\n        onDialogClose={onModalClose}\r\n        selectedId={openPasswordModal}\r\n        setRefresh={setRefresh}\r\n      />\r\n      <ExportContent\r\n        type=\"3\"\r\n        isOpen={openExportModal}\r\n        onDialogClose={onModalClose}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientManagement;\r\n"],"names":["IMAGES","VIEW_IMAGE","REPLY","STATUS","EXPORT","RECEIPT","DOWNLOAD_PDF","type","onDialogClose","isOpen","user","Payload","onClose","onRequestClose","contentClassName","className","variant","onClick","payload","userId","_id","postApi","APIS","then","res","toast","downloadLink","document","createElement","href","appConfig","data","fileName","download","body","appendChild","click","removeChild","catch","error","message","FORM_FIELD","label","identifier","validationSchema","Yup","shape","password","required","min","confirmPassword","oneOf","initialValues","selectedId","setRefresh","onSubmit","id","UPDATE_TOAST","s","touched","errors","isSubmitting","map","field","index","invalid","errorMessage","autoComplete","name","placeholder","component","PasswordInput","loading","ACTION_CONSTANT","key","TABLE_ACTION_KEYS","show","hasPermisson","MODULE","ACCESS","style","fontSize","toolTip","isImage","DEL_CONFIRM","header","CONFIRMATION_OBJ","des","warning","buttonLabel","BUTTON_CONSTANT","icon","FILTER_CONSTANT","options","ACTIVE_STATUS_OPTONS","filterKey","status","dob","search","savedHospitalId","localStorage","getItem","useState","filterCompanyId","setFilterCompanyId","setLoading","tags","setData","setSearch","refresh","page","setPage","totalCount","setTotalCount","limit","setLimit","selectedData","setSelectedData","openModal","setOpenModal","activeConfirm","setActiveConfirm","openPasswordModal","setOpenPasswordModal","openExportModal","setOpenExportModal","navigate","useNavigate","filterValue","setFilterValue","dayjs","utc","timezone","NameColumn","row","imageUrlThumbnail","size","src","firstName","toUpperCase","lastName","useEffect","getApi","LIST_DATA_API_TYPE","companyId","value","patientDob","format","mobile","skip","count","finally","onActionHandle","e","onModalClose","columns","Header","Cell","props","original","patientNo","countryCode","getFormattedPhoneNum","phoneNumber","naspacNo","createdAt","tz","DATE_TIME_FORMAT","dataObj","accessor","actionsMenu","buttonMenu","slice","length","FilterMenu","buttonClick","searchPlaceholder","bodyClass","isCursor","userColumn","skeletonAvatarColumns","skeletonAvatarProps","width","height","pagingData","pageIndex","pageSize","total","onPaginationChange","pages","onSelectChange","limits","onConfirmClick","toastMessage","action","DELETE_TOAST","ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM","isWarning"],"sourceRoot":""}
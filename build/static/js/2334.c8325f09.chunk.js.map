{"version":3,"file":"static/js/2334.c8325f09.chunk.js","mappings":"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","sources":["services/CommonService.js","views/userManagement/patient/patientConstant.js","views/userManagement/patient/addEditPatient/mixComponent.js","views/userManagement/patient/addEditPatient/index.js","../node_modules/react-select/dist/useAsync-1488b48a.esm.js","../node_modules/react-select/async/dist/react-select-async.esm.js"],"sourcesContent":["import ApiService from \"./ApiService\"\r\nimport BaseService from \"./BaseService\";\r\n\r\nexport function getApi(endpoint, params) {\r\n  return BaseService.get(endpoint, { params }).then((res) => res?.data);\r\n}\r\n\r\nexport function postApi(endpoint, payload) {    \r\n  return BaseService.post(endpoint, payload).then((res) => res?.data);\r\n}\r\n\r\nexport async function apiGetNotificationCount () {\r\n    return ApiService.fetchData({\r\n        url: '/notification/count',\r\n        method: 'get'\r\n    })\r\n}\r\n\r\nexport async function apiGetNotificationList () {\r\n    return ApiService.fetchData({\r\n        url: '/notification/list',\r\n        method: 'get'\r\n    })\r\n}\r\n\r\nexport async function apiGetSearchResult (data) {\r\n    return ApiService.fetchData({\r\n        url: '/search/query',\r\n        method: 'post',\r\n        data\r\n    })\r\n}","import { Input } from \"components/ui\";\r\n\r\nexport const PATIENT_FIELD_CONSTANT = [\r\n  {\r\n    name: \"firstName\",\r\n    label: \"First Name\",\r\n    type: \"text\",\r\n    component: Input,\r\n    placeholder: \"Enter first name\",\r\n    isBasic: true,\r\n  },\r\n  {\r\n    name: \"lastName\",\r\n    label: \"Last Name\",\r\n    type: \"text\",\r\n    component: Input,\r\n    placeholder: \"Enter last name\",\r\n    isBasic: true,\r\n  },\r\n  {\r\n    name: \"phoneNumber\",\r\n    countryCode: \"countryCode\",\r\n    label: \"Mobile No.\",\r\n    component: \"phoneNumber\",\r\n    placeholder: \"Enter mobile no.\",\r\n  },\r\n\r\n  {\r\n    name: \"dob\",\r\n    label: \"DOB\",\r\n    component: \"datepicker\",\r\n  },\r\n  {\r\n    name: \"naspacNo\",\r\n    label: \"NASPAC Case No.\",\r\n    type: \"text\",\r\n    component: Input,\r\n    isBasic: true,\r\n    placeholder: \"Enter NASPAC No.\",\r\n  },\r\n];\r\n\r\nexport const INSURANCE_FIELD_CONSTANT = [\r\n  {\r\n    name: \"primaryInsurance\",\r\n    apiType : \"insurance\",\r\n    label: \"Primary Insurance\",\r\n    component: \"asyncSelect\",\r\n    placeholder: \"Select primary insurance\",\r\n  },\r\n  {\r\n    name: \"primaryInsuranceNo\",\r\n    label: \"Primary Insurance No.\",\r\n    type: \"text\",\r\n    component: Input,\r\n    placeholder: \"Enter primary insurance no.\",\r\n    isBasic: true,\r\n  },\r\n  {\r\n    name: \"secondaryInsurance\",\r\n    apiType : \"insurance\",\r\n    label: \"Secondary Insurance\",\r\n    component: \"asyncSelect\",\r\n    placeholder: \"Select secondary insurance\",\r\n  },\r\n  {\r\n    name: \"secondaryInsuranceNo\",\r\n    label: \"Seconday Insurance No.\",\r\n    type: \"text\",\r\n    component: Input,\r\n    placeholder: \"Enter secondary insurance no.\",\r\n    isBasic: true,\r\n  }\r\n];\r\n\r\nexport const SERVICE_ORDER_FIELDS = [\r\n  {\r\n    name: \"deviceType\",\r\n    label: \"Type of device needed\",\r\n    component: \"asyncSelect\",\r\n    placeholder: \"Select device type\",\r\n  },\r\n  {\r\n    name: \"patientType\",\r\n    label: \"Is the patient ?\",\r\n    component: \"patientRadio\",\r\n  },\r\n  {\r\n    name: \"prescription\",\r\n    label: \"Prescription\",\r\n    component: \"upload\",\r\n  },\r\n  {\r\n    name: \"clinicalAssessment\",\r\n    label: \"Clinical Assessment\",\r\n    component: \"upload\",\r\n  },\r\n  {\r\n    name: \"remarks\",\r\n    label: \"Remarks\",\r\n    type: \"text\",\r\n    component: Input,\r\n    placeholder: \"Enter Remarks\",\r\n    textArea: true,\r\n    isBasic: true,\r\n  },\r\n];\r\n\r\nexport const FORM_GENDER_CONSANT = [\r\n  { label: \"Male\", value: 1 },\r\n  { label: \"Female\", value: 2 },\r\n  { label: \"Others\", value: 3 },\r\n];\r\n\r\nexport const IS_PATINET = [\r\n  { label: \"LTC\", value: 1 },\r\n  { label: \"Subacute\", value: 2 },\r\n];\r\n","import React from \"react\";\r\nimport {\r\n  DatePicker,\r\n  Radio,\r\n  Upload,\r\n  Select,\r\n  InputGroup,\r\n  Input,\r\n} from \"components/ui\";\r\nimport { Field } from \"formik\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/bootstrap.css\";\r\nimport { postApi, getApi } from \"services/CommonService\";\r\nimport { APIS, LIST_DATA_API_TYPE } from \"constants/api.constant\";\r\nimport debounce from \"lodash/debounce\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport { FORM_GENDER_CONSANT, IS_PATINET } from \"../patientConstant\";\r\nimport { PasswordInput } from \"components/shared\";\r\nimport { DATE_FORMAT } from \"constants/app.constant\";\r\nimport { formatAsSSN } from \"utils/hasPermission\";\r\n\r\nconst MixComponent = ({\r\n  id,\r\n  field,\r\n  setFieldValue,\r\n  values,\r\n  errors,\r\n  touched,\r\n}) => {\r\n  const savedHospitalId = localStorage.getItem(\"selectedHospitalId\");\r\n\r\n  const loadSelectOption = (inputValue, resolve) => {\r\n    if (field.name === \"state\") {\r\n      getApi(APIS.GET_CODE, { type: 4, search: inputValue }).then((result) => {\r\n        const filter = result?.data?.data.map((item) => {\r\n          let option = {\r\n            label: item?.name,\r\n            value: item?._id,\r\n          };\r\n          return option;\r\n        });\r\n        resolve(filter);\r\n      });\r\n    }\r\n    if (field.name === \"deviceType\") {\r\n      getApi(APIS.GET_CODE, { type: 2, search: inputValue }).then((result) => {\r\n        const filter = result?.data?.data.map((item) => {\r\n          let option = {\r\n            label: item?.name,\r\n            value: item?._id,\r\n          };\r\n          return option;\r\n        });\r\n        resolve(filter);\r\n      });\r\n    }\r\n    if (field.apiType === \"insurance\") {\r\n      getApi(APIS.LIST_DATA, { type: LIST_DATA_API_TYPE.INSURANCES, search: inputValue, companyId:savedHospitalId }).then((result) => {\r\n        const filter = result?.data?.data.map((item) => {\r\n          let option = {\r\n            label: item?.name,\r\n            value: item?._id,\r\n          };\r\n          return option;\r\n        });\r\n        resolve(filter);\r\n      });\r\n    }\r\n  };\r\n  const loadoptions = debounce(loadSelectOption, 300);\r\n\r\n  return (\r\n    <>\r\n      {field.component === \"datepicker\" && (\r\n        <>\r\n          <DatePicker\r\n            inputtable\r\n            selected={new Date(values?.[field.name])}\r\n            name={field.name}\r\n            inputFormat={DATE_FORMAT}\r\n            defaultValue={new Date(values?.[field.name])}\r\n            value={new Date(values?.[field.name])}\r\n            onChange={(date) => setFieldValue(field.name, date)}\r\n          />\r\n        </>\r\n      )}\r\n      {field.component === \"radio\" && (\r\n        <>\r\n          {FORM_GENDER_CONSANT.map((g, i) => {\r\n            return (\r\n              <Radio\r\n                className=\"mr-4\"\r\n                name=\"gender\"\r\n                value={g.value}\r\n                onChange={(date) => setFieldValue(field.name, date)}\r\n                checked={g.value === values?.[field.name] ? true : false}\r\n              >\r\n                {g.label}\r\n              </Radio>\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n      {field.component === \"patientRadio\" && (\r\n        <>\r\n          {IS_PATINET.map((g, i) => {\r\n            return (\r\n              <Radio\r\n                className=\"mr-4 mt-3\"\r\n                name=\"simpleRadioExample1\"\r\n                value={g.value}\r\n                onChange={(date) => setFieldValue(field.name, date)}\r\n                checked={g.value === values?.[field.name] ? true : false}\r\n              >\r\n                {g.label}\r\n              </Radio>\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n\r\n      {field.component === \"phoneNumber\" && (\r\n        <PhoneInput\r\n          inputStyle={{ width: \"369px\", padding: \"11px 14px 11px 60px\" }}\r\n          enableSearch={true}\r\n          country={\"us\"}\r\n          countryCodeEditable\r\n          value={`${values?.[field.name]}`}\r\n          onChange={(phone, country) => {\r\n            setFieldValue(field.name, phone);\r\n            setFieldValue(field.countryCode, country?.dialCode);\r\n          }}\r\n        />\r\n      )}\r\n      {field.component === \"upload\" && (\r\n        <InputGroup className=\"mb-4\">\r\n          <Input value={values[field.name]} />\r\n          <Upload\r\n            uploadLimit={1}\r\n            showList={false}\r\n            accept={[\"image/jpeg\", \"image/png\"]}\r\n            name={field.name}\r\n            onChange={(imgs) => {\r\n              let payload = new FormData();\r\n\r\n              for (let i = 0; i < imgs?.length; i++) {\r\n                payload.append(\"image\", imgs[i]);\r\n              }\r\n\r\n              postApi(APIS.UPLOAD_IMAGE, payload).then((res) => {\r\n                let files = [];\r\n\r\n                if (res?.data?.length) {\r\n                  files = [...files, ...res?.data];\r\n                } else {\r\n                  files = [...files, res?.data];\r\n                }\r\n\r\n                setFieldValue(field.name, files[0]?.original);\r\n              });\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      )}\r\n      {field.component === \"asyncSelect\" && (\r\n        <>\r\n          <Field\r\n            closeMenuOnSelect={true}\r\n            component={Select}\r\n            autoComplete=\"off\"\r\n            placeholder={field.placeholder}\r\n            defaultOptions\r\n            cacheOptions\r\n            loadOptions={loadoptions}\r\n            componentAs={AsyncSelect}\r\n            name={field.name}\r\n            value={values?.[field.name]}\r\n            onChange={(event) => {\r\n              setFieldValue(field.name, event);\r\n            }}\r\n          />\r\n        </>\r\n      )}\r\n      {field.component === \"password\" && !id && (\r\n        <Field\r\n          autoComplete=\"off\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          component={PasswordInput}\r\n        />\r\n      )}\r\n      {field.component === \"ssn\" && (\r\n        <>\r\n          <Field\r\n            autoComplete=\"off\"\r\n            name=\"ssn\"\r\n            placeholder=\"SSN\"\r\n            maxlength={9}\r\n            component={Input}\r\n            onChange={(e) =>\r\n              setFieldValue(field.name, formatAsSSN(e.target.value))\r\n            }\r\n            value={values?.[field.name]}\r\n          />\r\n          {console.log(values?.[field.name])}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MixComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  FormItem,\r\n  FormContainer,\r\n  Card,\r\n  Button,\r\n  Spinner,\r\n  Notification,\r\n  toast,\r\n  Select,\r\n} from \"components/ui\";\r\nimport { Form, Field, useFormik, FormikProvider } from \"formik\";\r\nimport {\r\n  INSURANCE_FIELD_CONSTANT,\r\n  PATIENT_FIELD_CONSTANT,\r\n} from \"../patientConstant\";\r\nimport MixComponent from \"./mixComponent\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { postApi, getApi } from \"services/CommonService\";\r\nimport { APIS, LIST_DATA_API_TYPE } from \"constants/api.constant\";\r\nimport { UPDATE_TOAST, ADDED_TOAST } from \"constants/app.constant\";\r\nimport * as Yup from \"yup\";\r\nimport { useSelector } from \"react-redux\";\r\n// import ImageField from \"./imageField\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst patientSchema = Yup.object().shape({\r\n  firstName: Yup.string().required(\"Required\"),\r\n  lastName: Yup.string().required(\"Required\"),\r\n  dob: Yup.string().required(\"Required\"),\r\n  naspacNo: Yup.string().required(\"Required\"),\r\n  phoneNumber: Yup.string().required(\"Required\"),\r\n  primaryInsuranceNo: Yup.string(),\r\n  primaryInsurance: Yup.object(),\r\n  secondaryInsurance: Yup.object(),\r\n  secondaryInsuranceNo: Yup.string(),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  dob: moment().subtract(18, \"years\").format(),\r\n  naspacNo: \"\",\r\n  phoneNumber: \"\",\r\n  countryCode: \"+1\",\r\n  primaryInsurance: \"\",\r\n  primaryInsuranceNo: \"\",\r\n  secondaryInsurance: \"\",\r\n  secondaryInsuranceNo: \"\",\r\n};\r\n\r\nconst AddEditPatient = () => {\r\n  const savedHospitalId = localStorage.getItem(\"selectedHospitalId\");\r\n\r\n  const [companyOptions, setCompanyOptionos] = useState([]);\r\n  const user = useSelector((state) => state.auth.user);\r\n\r\n  console.log(\"companyOptionshdbfhrbf\", companyOptions);\r\n\r\n  const { id } = useParams();\r\n  const [editdata, setEditData] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // if (user?.companyId) {\r\n    //   getApi(APIS.LIST_DATA, {\r\n    //     companyIds: JSON.stringify(user.companyId),\r\n    //     type: LIST_DATA_API_TYPE.COMPANY,\r\n    //   })\r\n    //     .then((res) => {\r\n    //       const response = res?.data?.data;\r\n          \r\n    //       if (Array.isArray(response)) {\r\n    //         const companyOptions = response.map((company) => ({\r\n    //           label: company.name,\r\n    //           value: company._id,\r\n    //         }));\r\n    //         setCompanyOptionos(companyOptions);\r\n    //       }\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       // Handle any errors from the additional API call\r\n    //       console.error(\"Error calling additional API:\", error);\r\n    //     });\r\n    // } else {\r\n    //   getApi(APIS.LIST_DATA, { type: LIST_DATA_API_TYPE.COMPANY })\r\n    //     .then((res) => {\r\n    //       if (res && res.data && Array.isArray(res.data.data)) {\r\n    //         const locations = res.data.data.map((location) => ({\r\n    //           label: location.name,\r\n    //           value: location._id,\r\n    //         }));\r\n    //         setCompanyOptionos(locations);\r\n    //       } else {\r\n    //         toast.push(<Notification type=\"error\">No Companies found!</Notification>);\r\n    //       }\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       console.error(\"Error fetching Companies:\", error);\r\n    //       toast.push(<Notification type=\"error\">Failed to load Companies</Notification>);\r\n    //     });\r\n    // }\r\n    if (id) {\r\n      getApi(APIS.LIST_DATA, {\r\n        type: LIST_DATA_API_TYPE.PATIENTS,\r\n        id,\r\n      })\r\n        .then((res) => {\r\n          const data = res?.data?.data;\r\n          setEditData({\r\n            firstName: data?.firstName,\r\n            lastName: data?.lastName,\r\n            dob: data?.dob,\r\n            countryCode: data?.countryCode !== null ? data?.countryCode : \"+1\",\r\n            phoneNumber: data?.countryCode + data?.phoneNumber,\r\n            naspacNo: data?.naspacNo,\r\n            primaryInsurance: { label: data?.primaryInsurance?.name, value: data?.primaryInsurance?._id },\r\n            secondaryInsurance: { label: data?.secondaryInsurance?.name, value: data?.secondaryInsurance?._id },\r\n            primaryInsuranceNo: data?.primaryInsuranceNo,\r\n            secondaryInsuranceNo: data?.secondaryInsuranceNo,\r\n          });\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [id]);\r\n\r\n  const onSubmit = (payload) => {\r\n    if (id) {\r\n      payload.id = id;\r\n    }\r\n\r\n    // Remove Country code from phone number\r\n    payload.phoneNumber = payload?.phoneNumber?.replace(\r\n      payload?.countryCode,\r\n      \"\"\r\n    );\r\n\r\n    //Check for Empty Phone number\r\n    if (payload.phoneNumber === \"\") {\r\n      delete payload.phoneNumber;\r\n    }\r\n\r\n    if (payload.primaryInsurance) {\r\n      payload.primaryInsurance = payload?.primaryInsurance?.value;\r\n    }\r\n    if (payload.secondaryInsurance) {\r\n      payload.secondaryInsurance = payload?.secondaryInsurance?.value;\r\n    }\r\n\r\n    if (payload.primaryInsuranceNo === '') delete payload.primaryInsuranceNo\r\n    if (payload.secondaryInsuranceNo === '') delete payload.secondaryInsuranceNo\r\n\r\n    if (payload.primaryInsurance === '') delete payload.primaryInsurance\r\n    if (payload.secondaryInsurance === '') delete payload.secondaryInsurance\r\n\r\n    ///setup the + sign with country code if it was not there\r\n    if (!payload?.countryCode?.includes(\"+\")) {\r\n      payload.countryCode = `+${payload.countryCode}`;\r\n    }\r\n    payload.companyId = savedHospitalId\r\n\r\n    postApi(APIS.ADD_EDIT_PATIENT, { ...payload }).then((res) => {\r\n      toast.push(\r\n        <Notification type=\"success\">\r\n          {id ? UPDATE_TOAST : ADDED_TOAST}\r\n        </Notification>\r\n      );\r\n      navigate(-1);\r\n    });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: id ? editdata : initialValues,\r\n    enableReinitialize: true,\r\n    validationSchema: patientSchema,\r\n    onSubmit: onSubmit,\r\n  });\r\n\r\n  const {\r\n    errors,\r\n    touched,\r\n    values,\r\n    handleSubmit,\r\n    getFieldProps,\r\n    setFieldValue,\r\n    isSubmitting,\r\n  } = formik;\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form\r\n        className=\"p-1\"\r\n        onSubmit={handleSubmit}\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <div className=\"flex mb-3 justify-between w-3/4\">\r\n          <h3>{id ? \"Edit Patient\" : \"Add Patient\"}</h3>\r\n          <div className=\"flex\">\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"solid\"\r\n              onClick={() => navigate(-1)}\r\n              type=\"button\"\r\n            >\r\n              Back / Cancel\r\n            </Button>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"solid\"\r\n              style={{ marginLeft: \"5px\" }}\r\n              loading={isSubmitting}\r\n              type=\"submit\"\r\n            >\r\n              {id ? \"Update\" : \"Save\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {loading && (\r\n            <div className=\"flex justify-center\">\r\n              <Spinner size=\"3.25rem\" />\r\n            </div>\r\n          )}\r\n          {!loading && (\r\n            <>\r\n              <Card className=\"mt-2.5 w-3/4 \">\r\n                <FormContainer className=\" md:w-full lg:w-1/2\">\r\n                  <h5 className=\"mb-4\">Personal Information</h5>\r\n                  {/* <ImageField {...{ touched, errors, values, setFieldValue }} /> */}\r\n                  {/* <FormItem label=\"Company\" invalid={errors.company && touched.company} errorMessage={errors.company}>\r\n                    <Select\r\n                      name=\"companyId\"\r\n                      options={companyOptions}\r\n                      placeholder=\"Select Company\"\r\n                      value={companyOptions.find((option) => option.value === values.companyId) || null}\r\n                      onChange={(selectedOption) => setFieldValue(\"companyId\", selectedOption.value)}\r\n                    />\r\n                  </FormItem> */}\r\n                  {PATIENT_FIELD_CONSTANT.map((field, index, array) => {\r\n                    return (\r\n                      <>\r\n                        {/* {field?.title && (\r\n                          <h6 className=\"my-3\">{field?.title}</h6>\r\n                        )} */}\r\n\r\n\r\n                        <FormItem\r\n                          key={index}\r\n                          label={\r\n                            field.component === \"password\" && id\r\n                              ? null\r\n                              : field?.label\r\n                          }\r\n                          className=\"ml-3 \"\r\n                          invalid={\r\n                            errors?.[field?.name] && touched?.[field?.name]\r\n                          }\r\n                          errorMessage={errors?.[field?.name]}\r\n                        >\r\n\r\n                          {field.isBasic ? (\r\n                            <Field\r\n                              textArea={field?.textArea ? true : false}\r\n                              type={field?.type}\r\n                              autoComplete=\"off\"\r\n                              name={field?.name}\r\n                              placeholder={field?.placeholder}\r\n                              component={field?.component}\r\n                            />\r\n                          ) : (\r\n                            <MixComponent\r\n                              id={id}\r\n                              errors={errors}\r\n                              field={field}\r\n                              setFieldValue={setFieldValue}\r\n                              values={values}\r\n                            />\r\n                          )}\r\n                        </FormItem>\r\n                      </>\r\n                    );\r\n                  })}\r\n\r\n                </FormContainer>\r\n              </Card>\r\n              <Card className=\"mt-4 w-3/4 \">\r\n                <FormContainer className=\" md:w-full lg:w-1/2\">\r\n                  <h5 className=\"mb-4\">Insurance Information</h5>\r\n                  {INSURANCE_FIELD_CONSTANT.map((field, index, array) => {\r\n                    return (\r\n                      <>\r\n                        {/* {field?.title && (\r\n                          <h6 className=\"my-3\">{field?.title}</h6>\r\n                        )} */}\r\n\r\n                        <FormItem\r\n                          key={index}\r\n                          label={field?.label}\r\n                          className=\"ml-3\"\r\n                          invalid={\r\n                            errors?.[field?.name] && touched?.[field?.name]\r\n                          }\r\n                          errorMessage={errors?.[field?.name]}\r\n                        >\r\n                          {field.isBasic ? (\r\n                            <Field\r\n                              textArea={field?.textArea ? true : false}\r\n                              type={field?.type}\r\n                              autoComplete=\"off\"\r\n                              name={field?.name}\r\n                              placeholder={field?.placeholder}\r\n                              component={field?.component}\r\n                            />\r\n                          ) : (\r\n                            <MixComponent\r\n                              id={id}\r\n                              errors={errors}\r\n                              field={field}\r\n                              setFieldValue={setFieldValue}\r\n                              values={values}\r\n                            />\r\n                          )}\r\n                        </FormItem>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </FormContainer>\r\n              </Card>\r\n            </>\r\n          )}\r\n        </div>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n};\r\n\r\nexport default AddEditPatient;\r\n","import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\nimport _slicedToArray from '@babel/runtime/helpers/esm/slicedToArray';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport { useRef, useState, useEffect, useCallback } from 'react';\nimport { L as handleInputChange } from './index-827f44ad.esm.js';\n\nvar _excluded = [\"defaultOptions\", \"cacheOptions\", \"loadOptions\", \"options\", \"isLoading\", \"onInputChange\", \"filterOption\"];\nfunction useAsync(_ref) {\n  var _ref$defaultOptions = _ref.defaultOptions,\n    propsDefaultOptions = _ref$defaultOptions === void 0 ? false : _ref$defaultOptions,\n    _ref$cacheOptions = _ref.cacheOptions,\n    cacheOptions = _ref$cacheOptions === void 0 ? false : _ref$cacheOptions,\n    propsLoadOptions = _ref.loadOptions;\n    _ref.options;\n    var _ref$isLoading = _ref.isLoading,\n    propsIsLoading = _ref$isLoading === void 0 ? false : _ref$isLoading,\n    propsOnInputChange = _ref.onInputChange,\n    _ref$filterOption = _ref.filterOption,\n    filterOption = _ref$filterOption === void 0 ? null : _ref$filterOption,\n    restSelectProps = _objectWithoutProperties(_ref, _excluded);\n  var propsInputValue = restSelectProps.inputValue;\n  var lastRequest = useRef(undefined);\n  var mounted = useRef(false);\n  var _useState = useState(Array.isArray(propsDefaultOptions) ? propsDefaultOptions : undefined),\n    _useState2 = _slicedToArray(_useState, 2),\n    defaultOptions = _useState2[0],\n    setDefaultOptions = _useState2[1];\n  var _useState3 = useState(typeof propsInputValue !== 'undefined' ? propsInputValue : ''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    stateInputValue = _useState4[0],\n    setStateInputValue = _useState4[1];\n  var _useState5 = useState(propsDefaultOptions === true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var _useState7 = useState(undefined),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loadedInputValue = _useState8[0],\n    setLoadedInputValue = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    loadedOptions = _useState10[0],\n    setLoadedOptions = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    passEmptyOptions = _useState12[0],\n    setPassEmptyOptions = _useState12[1];\n  var _useState13 = useState({}),\n    _useState14 = _slicedToArray(_useState13, 2),\n    optionsCache = _useState14[0],\n    setOptionsCache = _useState14[1];\n  var _useState15 = useState(undefined),\n    _useState16 = _slicedToArray(_useState15, 2),\n    prevDefaultOptions = _useState16[0],\n    setPrevDefaultOptions = _useState16[1];\n  var _useState17 = useState(undefined),\n    _useState18 = _slicedToArray(_useState17, 2),\n    prevCacheOptions = _useState18[0],\n    setPrevCacheOptions = _useState18[1];\n  if (cacheOptions !== prevCacheOptions) {\n    setOptionsCache({});\n    setPrevCacheOptions(cacheOptions);\n  }\n  if (propsDefaultOptions !== prevDefaultOptions) {\n    setDefaultOptions(Array.isArray(propsDefaultOptions) ? propsDefaultOptions : undefined);\n    setPrevDefaultOptions(propsDefaultOptions);\n  }\n  useEffect(function () {\n    mounted.current = true;\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  var loadOptions = useCallback(function (inputValue, callback) {\n    if (!propsLoadOptions) return callback();\n    var loader = propsLoadOptions(inputValue, callback);\n    if (loader && typeof loader.then === 'function') {\n      loader.then(callback, function () {\n        return callback();\n      });\n    }\n  }, [propsLoadOptions]);\n  useEffect(function () {\n    if (propsDefaultOptions === true) {\n      loadOptions(stateInputValue, function (options) {\n        if (!mounted.current) return;\n        setDefaultOptions(options || []);\n        setIsLoading(!!lastRequest.current);\n      });\n    }\n    // NOTE: this effect is designed to only run when the component mounts,\n    // so we don't want to include any hook dependencies\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var onInputChange = useCallback(function (newValue, actionMeta) {\n    var inputValue = handleInputChange(newValue, actionMeta, propsOnInputChange);\n    if (!inputValue) {\n      lastRequest.current = undefined;\n      setStateInputValue('');\n      setLoadedInputValue('');\n      setLoadedOptions([]);\n      setIsLoading(false);\n      setPassEmptyOptions(false);\n      return;\n    }\n    if (cacheOptions && optionsCache[inputValue]) {\n      setStateInputValue(inputValue);\n      setLoadedInputValue(inputValue);\n      setLoadedOptions(optionsCache[inputValue]);\n      setIsLoading(false);\n      setPassEmptyOptions(false);\n    } else {\n      var request = lastRequest.current = {};\n      setStateInputValue(inputValue);\n      setIsLoading(true);\n      setPassEmptyOptions(!loadedInputValue);\n      loadOptions(inputValue, function (options) {\n        if (!mounted) return;\n        if (request !== lastRequest.current) return;\n        lastRequest.current = undefined;\n        setIsLoading(false);\n        setLoadedInputValue(inputValue);\n        setLoadedOptions(options || []);\n        setPassEmptyOptions(false);\n        setOptionsCache(options ? _objectSpread(_objectSpread({}, optionsCache), {}, _defineProperty({}, inputValue, options)) : optionsCache);\n      });\n    }\n  }, [cacheOptions, loadOptions, loadedInputValue, optionsCache, propsOnInputChange]);\n  var options = passEmptyOptions ? [] : stateInputValue && loadedInputValue ? loadedOptions : defaultOptions || [];\n  return _objectSpread(_objectSpread({}, restSelectProps), {}, {\n    options: options,\n    isLoading: isLoading || propsIsLoading,\n    onInputChange: onInputChange,\n    filterOption: filterOption\n  });\n}\n\nexport { useAsync as u };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { forwardRef } from 'react';\nimport { S as Select } from '../../dist/Select-2497890d.esm.js';\nimport { u as useStateManager } from '../../dist/useStateManager-7e1e8489.esm.js';\nimport { u as useAsync } from '../../dist/useAsync-1488b48a.esm.js';\nexport { u as useAsync } from '../../dist/useAsync-1488b48a.esm.js';\nimport '@babel/runtime/helpers/objectSpread2';\nimport '@babel/runtime/helpers/classCallCheck';\nimport '@babel/runtime/helpers/createClass';\nimport '@babel/runtime/helpers/inherits';\nimport '@babel/runtime/helpers/createSuper';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '../../dist/index-827f44ad.esm.js';\nimport '@emotion/react';\nimport '@babel/runtime/helpers/taggedTemplateLiteral';\nimport '@babel/runtime/helpers/objectWithoutProperties';\nimport '@babel/runtime/helpers/slicedToArray';\nimport '@babel/runtime/helpers/typeof';\nimport '@babel/runtime/helpers/defineProperty';\nimport 'react-dom';\nimport '@floating-ui/dom';\nimport 'use-isomorphic-layout-effect';\nimport 'memoize-one';\n\nvar AsyncSelect = /*#__PURE__*/forwardRef(function (props, ref) {\n  var stateManagedProps = useAsync(props);\n  var selectProps = useStateManager(stateManagedProps);\n  return /*#__PURE__*/React.createElement(Select, _extends({\n    ref: ref\n  }, selectProps));\n});\n\nexport default AsyncSelect;\n"],"names":["getApi","endpoint","params","BaseService","then","res","data","postApi","payload","apiGetSearchResult","ApiService","url","method","PATIENT_FIELD_CONSTANT","name","label","type","component","Input","placeholder","isBasic","countryCode","INSURANCE_FIELD_CONSTANT","apiType","FORM_GENDER_CONSANT","value","IS_PATINET","id","field","setFieldValue","values","savedHospitalId","errors","touched","localStorage","getItem","loadoptions","debounce","inputValue","resolve","APIS","search","result","filter","map","item","_id","LIST_DATA_API_TYPE","companyId","inputtable","selected","Date","inputFormat","DATE_FORMAT","defaultValue","onChange","date","g","i","className","checked","inputStyle","width","padding","enableSearch","country","countryCodeEditable","phone","dialCode","uploadLimit","showList","accept","imgs","FormData","length","append","files","original","closeMenuOnSelect","Select","autoComplete","defaultOptions","cacheOptions","loadOptions","componentAs","AsyncSelect","event","PasswordInput","maxlength","e","formatAsSSN","target","console","log","patientSchema","Yup","shape","firstName","required","lastName","dob","naspacNo","phoneNumber","primaryInsuranceNo","primaryInsurance","secondaryInsurance","secondaryInsuranceNo","initialValues","moment","subtract","format","useState","companyOptions","useSelector","state","auth","user","useParams","editdata","setEditData","loading","setLoading","navigate","useNavigate","useEffect","finally","formik","useFormik","enableReinitialize","validationSchema","onSubmit","replace","includes","toast","UPDATE_TOAST","ADDED_TOAST","handleSubmit","getFieldProps","isSubmitting","noValidate","size","variant","onClick","style","marginLeft","index","array","invalid","errorMessage","textArea","_excluded","forwardRef","props","ref","stateManagedProps","_ref","_ref$defaultOptions","propsDefaultOptions","_ref$cacheOptions","propsLoadOptions","options","_ref$isLoading","isLoading","propsIsLoading","propsOnInputChange","onInputChange","_ref$filterOption","filterOption","restSelectProps","_objectWithoutProperties","propsInputValue","lastRequest","useRef","undefined","mounted","_useState","Array","isArray","_useState2","_slicedToArray","setDefaultOptions","_useState3","_useState4","stateInputValue","setStateInputValue","_useState5","_useState6","setIsLoading","_useState7","_useState8","loadedInputValue","setLoadedInputValue","_useState9","_useState10","loadedOptions","setLoadedOptions","_useState11","_useState12","passEmptyOptions","setPassEmptyOptions","_useState13","_useState14","optionsCache","setOptionsCache","_useState15","_useState16","prevDefaultOptions","setPrevDefaultOptions","_useState17","_useState18","prevCacheOptions","setPrevCacheOptions","current","useCallback","callback","loader","newValue","actionMeta","handleInputChange","request","_objectSpread","_defineProperty","useAsync","selectProps","useStateManager","React","_extends"],"sourceRoot":""}
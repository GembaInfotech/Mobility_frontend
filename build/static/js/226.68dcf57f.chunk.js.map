{"version":3,"file":"static/js/226.68dcf57f.chunk.js","mappings":"iLAgEA,IArDsB,SAAH,GAAwD,IAAlDA,EAAI,EAAJA,KAAMC,EAAa,EAAbA,cAAeC,EAAM,EAANA,OAAQC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAsB1D,OACE,SAAC,KAAM,CACLF,OAAQA,EACRG,QAASJ,EACTK,eAAgBL,EAChBM,iBAAiB,2BAA0B,UAE3C,iBAAKC,UAAU,MAAK,WAClB,cAAGA,UAAU,0BAAyB,2DACtC,gBAAKA,UAAU,kBAAiB,UAS9B,SAAC,KAAM,CACLC,QAAQ,QACRT,KAAK,SACLU,QA1CO,WACf,IAAMC,GAAO,QAAKX,KAAAA,GAASI,GAEvBD,IACFQ,EAAQC,OAAa,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMU,MAGzBC,EAAAA,EAAAA,IAAQC,EAAAA,GAAAA,YAAkBJ,GAASK,MAAK,SAACC,GAAS,IAAD,EAC/CC,EAAAA,GAAAA,MAAW,SAAC,KAAY,CAAClB,KAAK,UAAS,oCACvC,IAAMmB,EAAeC,SAASC,cAAc,KAC5CF,EAAaG,KAAOC,EAAAA,EAAAA,cAA4B,OAAHN,QAAG,IAAHA,GAAS,QAAN,EAAHA,EAAKO,YAAI,WAAN,EAAH,EAAWC,UACxDN,EAAaO,SAAW,iBACxBN,SAASO,KAAKC,YAAYT,GAC1BA,EAAaU,QACbT,SAASO,KAAKG,YAAYX,GAC1BlB,GACF,IAAG8B,OAAM,SAAAC,GACPd,EAAAA,GAAAA,MAAW,UAAC,KAAY,CAAClB,KAAK,QAAO,4BAAiBgC,EAAMC,WAC9D,GACF,EAuB4B,wCAQ9B,C,4HC9CMC,EAAa,CACjB,CAAEC,MAAO,WAAYC,WAAY,YACjC,CAAED,MAAO,mBAAoBC,WAAY,oBAGrCC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,SAAUF,EAAAA,KACPG,SAAS,2BACTC,IAAI,EAAG,4CACVC,gBAAiBL,EAAAA,KACdM,MAAM,CAACN,EAAAA,GAAQ,YAAa,MAAO,+BACnCG,SAAS,mCAGRI,EAAgB,CACpBL,SAAU,GACVG,gBAAiB,IAqFnB,IAlF4B,SAAH,GAKlB,IAJLG,EAAU,EAAVA,WACA7C,EAAa,EAAbA,cACAC,EAAM,EAANA,OACA6C,EAAU,EAAVA,WAYA,OACE,SAAC,KAAM,CACL7C,OAAQA,EACRG,QAASJ,EACTK,eAAgBL,EAChBM,iBAAiB,2BAA0B,UAE3C,iBAAKC,UAAU,YAAW,WACxB,eAAIA,UAAU,OAAM,6BAEpB,SAAC,KAAM,CACLqC,cAAeA,EACfR,iBAAkBA,EAClBW,SAvBS,SAACrC,IAChBG,EAAAA,EAAAA,IAAQC,EAAAA,GAAAA,oBAA0B,CAChCkC,GAAIH,EACJN,SAAiB,OAAP7B,QAAO,IAAPA,OAAO,EAAPA,EAAS6B,WAClBxB,MAAK,SAACC,GACPC,EAAAA,GAAAA,MAAW,SAAC,KAAY,CAAClB,KAAK,UAAS,SAAEkD,EAAAA,MACzCH,GAAW,SAACI,GAAC,OAAMA,CAAC,IACpBlD,GACF,GACF,EAc2B,SAElB,gBAAGmD,EAAO,EAAPA,QAASC,EAAM,EAANA,OAAQC,EAAY,EAAZA,aAAY,OAC/B,SAAC,KAAI,WACH,SAAC,KAAa,WACZ,gCACGpB,EAAWqB,KAAI,SAACC,EAAOC,GACtB,OACE,SAAC,KAAQ,CAEPtB,MAAOqB,EAAMrB,MACbuB,SACQ,OAANL,QAAM,IAANA,OAAM,EAANA,EAASG,EAAMpB,eACR,OAAPgB,QAAO,IAAPA,OAAO,EAAPA,EAAUI,EAAMpB,aAElBuB,aAAoB,OAANN,QAAM,IAANA,OAAM,EAANA,EAASG,EAAMpB,YAAY,UAEzC,SAAC,KAAK,CACJwB,aAAa,MACbC,KAAML,EAAMpB,WACZ0B,YAAaN,EAAMrB,MACnB4B,UAAWC,EAAAA,MACX,UAbMR,EAAMpB,WAAU,YAAIqB,GAgBlC,KACA,iBAAKjD,UAAU,kBAAiB,WAC9B,SAAC,KAAM,CACLA,UAAU,oBACVC,QAAQ,QACRC,QAAST,EAAc,qBAIzB,SAAC,KAAM,CACLO,UAAU,oBACVyD,QAASX,EACT7C,QAAQ,QACRT,KAAK,SAAQ,SAEZsD,EAAe,cAAgB,mBAKnC,QAMnB,C,2HC9GaY,EAAgB,aAEvBC,EAAO,SAACC,GAWRA,EATFpE,KASEoE,EARFC,KAFF,IAGEC,EAOEF,EAPFE,OACA9D,EAME4D,EANF5D,UACA+D,EAKEH,EALFG,SACAC,EAIEJ,EAJFI,MACAC,EAGEL,EAHFK,UAAU,EAGRL,EAFFM,UAAAA,OAAS,MAAG,IAAG,IAEbN,EADFO,SAAAA,OAAQ,MAAG,IAAG,EAGhB,OACE,gBACEnE,UAAWoE,IAAW,OAAQpE,EAAW8D,GACzCE,OAAK,kBACAA,GACA,CAAEK,MAAOJ,IACZ,UAEF,gBACEjE,UAAW+D,EACXO,IAAG,UAAKZ,EAAa,iBACrBa,IAAG,UAAKC,EAAAA,GAAQ,SAChBR,MAAO,CAAEK,MAAOF,EAAUM,OAAQP,MAI1C,EAEAP,EAAKe,aAAe,CAClBb,KAAM,QACNrE,KAAM,OACNyE,UAAW,QAWb,K,wSCnBMU,EAAgB,CACpB,CAAEhD,MAAO,UAAWiD,MAAO,GAC3B,CAAEjD,MAAO,kBAAmBiD,MAAO,GACnC,CAAEjD,MAAO,MAAOiD,MAAO,GACvB,CAAEjD,MAAO,eAAgBiD,MAAO,GAChC,CAAEjD,MAAO,QAASiD,MAAO,GACzB,CAAEjD,MAAO,OAAQiD,MAAO,GACxB,CAAEjD,MAAO,QAASiD,MAAO,IAGrBC,EAAkB,CACtB,CAAElD,MAAO,OAAQmD,IAAKC,EAAAA,GAAAA,MACtB,CACEpD,OAAO,SAAC,MAAK,CAACqC,MAAO,CAAEgB,SAAU,YACjCF,IAAKC,EAAAA,GAAAA,gBACLE,QAAS,mBAEX,CACEtD,OAAO,SAAC,MAAY,CAACqC,MAAO,CAAEgB,SAAU,YACxCF,IAAKC,EAAAA,GAAAA,OACLE,QAAS,WAIPC,EAAc,CAClBC,OAAQC,EAAAA,GAAAA,OACRC,IAAKD,EAAAA,GAAAA,OACLE,QAASF,EAAAA,GAAAA,QACTG,YAAa,UAGTC,EAAkB,CACtB,CACE7D,MAAO,eACPmD,IAAKC,EAAAA,GAAAA,IACLU,MAAM,SAAC,MAAmB,KAE5B,CACE9D,MAAO,eACPmD,IAAKC,EAAAA,GAAAA,OACLU,MAAM,SAAC,MAAa,MAIlBC,EAAkB,CACtB,CACEnC,UAAW,SACXoC,QAASC,EAAAA,GACT5F,UAAW,cACXsD,YAAa,SACbuC,UAAW,UAEb,CACEtC,UAAW,cACX5B,MAAO,QACP8D,MAAM,SAAC,MAAY,IACnBzF,UAAW,OACX6F,UAAW,CAAEC,OAAQ,MAInBC,EAAa,SAAH,GAAiB,IAAD,IAAVC,EAAG,EAAHA,IACpB,OACE,iBAAKhG,UAAU,oBAAmB,UACJ,QAAxB,OAAHgG,QAAG,IAAHA,OAAG,EAAHA,EAAKC,oBAAiC,OAAHD,QAAG,IAAHA,GAAAA,EAAKC,mBACvC,SAAC,KAAM,CACLC,KAAM,GACNnE,MAAM,SACN/B,UAAU,OACVsE,IAAG,UAAKvD,EAAAA,EAAAA,cAAsB,OAAM,OAAHiF,QAAG,IAAHA,OAAG,EAAHA,EAAKC,sBAGxC,SAAC,KAAM,CAACC,KAAM,GAAInE,MAAM,SAAS/B,UAAU,OAAM,SAC3C,OAAHgG,QAAG,IAAHA,GAAc,QAAX,EAAHA,EAAKG,iBAAS,OAAK,QAAL,EAAd,EAAiB,UAAE,WAAhB,EAAH,EAAqBC,iBAI1B,gBAAKpG,UAAU,OAAM,mBAChB,OAAHgG,QAAG,IAAHA,GAAAA,EAAKG,WAAgB,OAAHH,QAAG,IAAHA,GAAAA,EAAKK,SAAQ,UACrB,OAAHL,QAAG,IAAHA,GAAAA,EAAKG,UAAe,OAAHH,QAAG,IAAHA,OAAG,EAAHA,EAAKG,UAAY,GAAE,YAAO,OAAHH,QAAG,IAAHA,GAAAA,EAAKK,SAAc,OAAHL,QAAG,IAAHA,OAAG,EAAHA,EAAKK,SAAW,IAC3E,SAIZ,EAsPA,UApP2B,WACzB,OAA8BC,EAAAA,EAAAA,WAAS,GAAK,eAArC7C,EAAO,KAAE8C,EAAU,KAC1B,GAAwBD,EAAAA,EAAAA,UAAS,IAAG,eAA7BE,EAAI,KAAEC,EAAO,KACpB,GAA4BH,EAAAA,EAAAA,UAAS,IAAG,eAAjCI,EAAM,KAAEC,EAAS,KACxB,GAA8BL,EAAAA,EAAAA,WAAS,GAAM,eAAtCM,EAAO,KAAErE,EAAU,KAC1B,GAAwB+D,EAAAA,EAAAA,UAAS,GAAE,eAA5BO,EAAI,KAAEC,EAAO,KACpB,GAAoCR,EAAAA,EAAAA,UAAS,GAAE,eAAxCS,EAAU,KAAEC,EAAa,KAChC,GAA0BV,EAAAA,EAAAA,UAAS,IAAG,eAA/BW,EAAK,KAAEC,EAAQ,KACtB,GAAwCZ,EAAAA,EAAAA,UAAS,IAAG,eAA7Ca,GAAY,KAAEC,GAAe,KACpC,IAAkCd,EAAAA,EAAAA,WAAS,GAAM,iBAA1Ce,GAAS,MAAEC,GAAY,MAC9B,IAA0ChB,EAAAA,EAAAA,WAAS,GAAM,iBAAlDiB,GAAa,MAAEC,GAAgB,MACtC,IAAkDlB,EAAAA,EAAAA,UAAS,IAAG,iBAAvDmB,GAAiB,MAAEC,GAAoB,MAC9C,IAA8CpB,EAAAA,EAAAA,WAAS,GAAM,iBAAtDqB,GAAe,MAAEC,GAAkB,MAC1C,IAAsCtB,EAAAA,EAAAA,UAAS,CAE7CR,OAAQ,KACR,iBAHK+B,GAAW,MAAEC,GAAc,MAI5BC,IAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WAAO,IAAD,GACdC,EAAAA,EAAAA,IAAO3H,EAAAA,GAAAA,UAAgB,CACrB0G,MAAAA,EACAP,OAAAA,EACAyB,SAAU,EACVrC,OAAmB,OAAX+B,SAAW,IAAXA,IAAAA,GAAa/B,OAAoB,OAAX+B,SAAW,IAAXA,IAAmB,QAAR,EAAXA,GAAa/B,cAAM,WAAR,EAAX,EAAqBlB,MAAQ,KAC3DwD,KAAMnB,GAASJ,EAAO,KAErBrG,MAAK,SAACC,GAAS,IAAD,IACbgG,EAAW,OAAHhG,QAAG,IAAHA,GAAS,QAAN,EAAHA,EAAKO,YAAI,WAAN,EAAH,EAAWA,MACnBgG,EAAiB,OAAHvG,QAAG,IAAHA,GAAS,QAAN,EAAHA,EAAKO,YAAI,WAAN,EAAH,EAAWqH,MAC3B,IACCC,SAAQ,kBAAM/B,GAAW,EAAM,GACpC,GAAG,CAACG,EAAQG,EAAMI,EAAOL,EAASiB,KAElC,IAAMU,GAAiB,SAACC,EAAG1D,EAAKkB,GAC1BlB,IAAQC,EAAAA,GAAAA,SACVqC,GAAgB,CACd3E,GAAO,OAAHuD,QAAG,IAAHA,OAAG,EAAHA,EAAKvD,KAEX6E,IAAa,IAEXxC,IAAQC,EAAAA,GAAAA,MACVgD,GAAS,sBAAD,OAA0B,OAAH/B,QAAG,IAAHA,OAAG,EAAHA,EAAKvD,KAElCqC,IAAQC,EAAAA,GAAAA,iBACV2C,GAAwB,OAAH1B,QAAG,IAAHA,OAAG,EAAHA,EAAKvD,GAE9B,EAEMgG,GAAe,WACnBrB,GAAgB,IAChBE,IAAa,GACbE,IAAiB,GACjBE,GAAqB,IACrBE,IAAmB,EACrB,EAWMc,GAAU,CACd,CACEC,OAAQ,UACRlG,GAAI,SACJmG,SAAU,SAAC5C,GAAG,OAAKA,CAAG,EACtB6C,KAAM,SAACjF,GAAK,OACV,SAAC,IAAY,CACXoC,IAAKpC,EAAMoC,IAAI8C,SACfP,eAAgBA,GAChBQ,aAAaC,EAAAA,EAAAA,IAAeC,EAAAA,GAAAA,SAAiBpE,IAC7C,GAGN,CACE8D,OAAQ,SACRE,KAAM,SAACjF,GACL,OACE,SAAC,IAAsB,CACrBsF,QAAStF,EACTwD,gBAAiBA,GACjBI,iBAAkBA,GAClBF,aAAcA,IAGpB,GAEF,CACEqB,OAAQ,mBACRE,KAAM,SAACjF,GACL,IAAMoC,EAAMpC,EAAMoC,IAAI8C,SACtB,OAAO,SAAC/C,EAAU,CAACC,IAAKA,GAC1B,GAEF,CACE2C,OAAQ,MACRE,KAAM,SAACjF,GACL,IAAMoC,EAAMpC,EAAMoC,IAAI8C,SACtB,OAAO,gBAAK9I,UAAU,qBAAoB,SAAEmJ,IAAS,OAAHnD,QAAG,IAAHA,OAAG,EAAHA,EAAKoD,KAAKC,OAAOC,EAAAA,KACrE,GAEF,CACEX,OAAQ,gBACRE,KAAM,SAACjF,GACL,IAAMsF,EAAUvE,EAAc4E,MAC5B,SAACC,EAAMC,GAAC,eAAKD,EAAK5E,SAAe,OAALhB,QAAK,IAALA,GAAU,QAAL,EAALA,EAAOoC,WAAG,OAAU,QAAV,EAAV,EAAY8C,gBAAQ,WAAf,EAAL,EAAsBY,YAAW,IAE/D,OAAc,OAAPR,QAAO,IAAPA,GAAAA,EAASvH,MAAe,OAAPuH,QAAO,IAAPA,OAAO,EAAPA,EAASvH,MAAQ,GAC3C,GAEF,CACEgH,OAAQ,cACRE,KAAM,SAACjF,GACL,IAAMoC,EAAMpC,EAAMoC,IAAI8C,SACtB,OAA0B,QAAhB,OAAH9C,QAAG,IAAHA,OAAG,EAAHA,EAAK2D,WAAqB,IAAS,OAAH3D,QAAG,IAAHA,OAAG,EAAHA,EAAK2D,SAC9C,GAGF,CACEhB,OAAQ,QACRE,KAAM,SAACjF,GACL,IAAMoC,EAAMpC,EAAMoC,IAAI8C,SAChBI,EAAa,OAAHlD,QAAG,IAAHA,OAAG,EAAHA,EAAK4D,cACrB,OACE,iBAAK5J,UAAU,sCAAqC,WAClD,yBAAO,OAAHgG,QAAG,IAAHA,OAAG,EAAHA,EAAK6D,MAAK,OACD,IAAZX,IACC,gBACElJ,UAAU,eACVsE,IAAG,UAAKZ,EAAAA,EAAa,gBACrBa,IAAG,UAAKC,EAAAA,GAAQ,aAK1B,GAEF,CACEmE,OAAQ,QACRE,KAAM,SAACjF,GACL,IAAMoC,EAAMpC,EAAMoC,IAAI8C,SAChBI,EAAa,OAAHlD,QAAG,IAAHA,OAAG,EAAHA,EAAK8D,cACrB,OACE,iBAAK9J,UAAU,sCAAqC,WAClD,iCAAU,OAAHgG,QAAG,IAAHA,OAAG,EAAHA,EAAK+D,YAAW,aAAIC,EAAAA,EAAAA,IAAwB,OAAHhE,QAAG,IAAHA,OAAG,EAAHA,EAAKiE,gBACxC,IAAZf,IACC,gBACElJ,UAAU,eACVsE,IAAG,UAAKZ,EAAAA,EAAa,gBACrBa,IAAG,UAAKC,EAAAA,GAAQ,aAK1B,GAEF,CACEmE,OAAQ,gBACRE,KAAM,SAACjF,GACL,IAAMoC,EAAMpC,EAAMoC,IAAI8C,SACtB,OACE,gBAAK9I,UAAU,qBAAoB,SAAEmJ,IAAS,OAAHnD,QAAG,IAAHA,OAAG,EAAHA,EAAKkE,WAAWb,OAAOc,EAAAA,KAEtE,IAuBJ,OACE,iCACE,SAAC,IAAM,CACLC,YACEC,EAAAA,EAAAA,IAAapB,EAAAA,GAAAA,SAAiBqB,EAAAA,GAAAA,OAAgB9E,EAAkB,CAAgB,OAAfA,QAAe,IAAfA,OAAe,EAAfA,EAAkB,IAErF+E,WAAY7E,EACZiB,UAAWA,EACX6D,YA9IsB,SAAChC,EAAG1D,GAC1BA,IAAQC,EAAAA,GAAAA,KACVgD,GAAS,qBAEPjD,IAAQC,EAAAA,GAAAA,QACV6C,IAAmB,EAEvB,EAwIME,eAAgBA,GAChBD,YAAaA,GACb4C,kBAAkB,qCAGpB,SAAC,KAAa,CAACzK,UAAU,SAAS0K,UAAU,SAAQ,UAClD,SAAC,KAAS,CACRC,UAAU,EACVjC,SAASkC,EAAAA,EAAAA,IAAWlC,GAASO,EAAAA,GAAAA,UAC7BjI,KAAMwF,EACN/C,QAASA,EACToH,sBAAuB,CAAC,GACxBC,oBAAqB,CAAEzG,MAAO,GAAII,OAAQ,IAC1CsG,WAAY,CAAEC,UAAWnE,EAAMoE,SAAUhE,EAAOiE,MAAOnE,GACvDoE,mBAAoB,SAACC,GAAK,OAAKtE,EAAQsE,EAAM,EAC7CC,eAAgB,SAACC,GAAM,OAAKpE,EAASoE,EAAO,OAIhD,SAAC,IAAmB,CAClB5L,OAAQ2H,GACRkE,eAjDiB,WACjBhE,IACFjH,EAAAA,EAAAA,IAAQC,EAAAA,GAAAA,cAAoB,CAC1BkC,GAAgB,OAAZ0E,SAAY,IAAZA,QAAY,EAAZA,GAAc1E,GAClB+I,SAAqB,OAAZrE,SAAY,IAAZA,QAAY,EAAZA,GAAcqE,UACtBhL,MAAK,SAACC,GACPC,EAAAA,GAAAA,MAAW,SAAC,KAAY,CAAClB,KAAK,UAAS,SAAEkD,EAAAA,MACzCH,GAAW,SAACI,GAAC,OAAMA,CAAC,IACpB8F,IACF,KAEAnI,EAAAA,EAAAA,IAAQC,EAAAA,GAAAA,YAAkB,CAAEkC,GAAgB,OAAZ0E,SAAY,IAAZA,QAAY,EAAZA,GAAc1E,GAAIjD,KAAM,IAAKgB,MAAK,SAACC,GACjEC,EAAAA,GAAAA,MAAW,SAAC,KAAY,CAAClB,KAAK,UAAS,SAAEiM,EAAAA,MACzClJ,GAAW,SAACI,GAAC,OAAMA,CAAC,IACpB8F,IACF,GAEJ,EAiCMtD,OAAQD,EAAYC,OACpBE,IAAKkC,GAAqD,OAArCmE,EAAAA,SAAqC,IAArCA,EAAAA,QAAqC,EAArCA,EAAAA,GAAAA,IAA6CxG,EAAYG,IAC9E5F,cAAegJ,GACfkD,WAAYpE,IAAiBrC,EAAYI,QACzCC,YACEgC,GACyC,OAArCmE,EAAAA,SAAqC,IAArCA,EAAAA,QAAqC,EAArCA,EAAAA,GAAAA,YACAxG,EAAYK,eAGpB,SAAC,IAAmB,CAClB7F,SAAU+H,GACVhI,cAAegJ,GACfnG,WAAYmF,GACZlF,WAAYA,KAEd,SAAC,IAAa,CAAC/C,KAAK,IAAIE,OAAQiI,GAAiBlI,cAAegJ,OAGtE,C","sources":["components/custom/exportContent/index.js","components/custom/userPasswordConfirm/index.js","components/template/Logo.js","views/userManagement/provider/index.js"],"sourcesContent":["import {\r\n  Button,\r\n  Dialog,\r\n  Notification,\r\n  toast,\r\n} from 'components/ui';\r\nimport appConfig from 'configs/app.config';\r\nimport { APIS } from 'constants/api.constant';\r\nimport React from 'react';\r\nimport { postApi } from 'services/CommonService';\r\n\r\nconst ExportContent = ({ type, onDialogClose, isOpen, user, Payload }) => {\r\n  const onSubmit = () => {\r\n    const payload = { type, ...Payload };\r\n    \r\n    if (user) {\r\n      payload.userId = user?._id;\r\n    }\r\n\r\n    postApi(APIS.EXPORT_DATA, payload).then((res) => {\r\n      toast.push(<Notification type=\"success\">Exported successfully</Notification>);\r\n      const downloadLink = document.createElement('a');\r\n      downloadLink.href = appConfig.imageBaseUrl + res?.data?.fileName; \r\n      downloadLink.download = 'file_name.xlsx';\r\n      document.body.appendChild(downloadLink);\r\n      downloadLink.click();\r\n      document.body.removeChild(downloadLink);\r\n      onDialogClose();\r\n    }).catch(error => {\r\n      toast.push(<Notification type=\"error\">Export failed: {error.message}</Notification>);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      isOpen={isOpen}\r\n      onClose={onDialogClose}\r\n      onRequestClose={onDialogClose}\r\n      contentClassName=\"pb-0 px-0 mt-36 min-w-36\"\r\n    >\r\n      <div className=\"p-6\">\r\n        <p className=\"text-md mb-6 font-bold \">Please download the Excel file for the data.</p>\r\n        <div className=\"text-right mt-6\">\r\n          {/* <Button\r\n            className=\"ltr:mr-2 rtl:ml-2\"\r\n            variant=\"plain\"\r\n            onClick={onDialogClose}\r\n            type=\"button\"\r\n          >\r\n            Cancel\r\n          </Button> */}\r\n          <Button \r\n            variant=\"solid\" \r\n            type=\"button\" \r\n            onClick={onSubmit}\r\n          >\r\n            Export/Download File\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExportContent;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  FormContainer,\r\n  FormItem,\r\n  toast,\r\n  Notification,\r\n} from \"components/ui\";\r\nimport * as Yup from \"yup\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { PasswordInput } from \"components/shared\";\r\nimport { postApi } from \"services/CommonService\";\r\nimport { APIS } from \"constants/api.constant\";\r\nimport { UPDATE_TOAST } from \"constants/app.constant\";\r\n\r\nconst FORM_FIELD = [\r\n  { label: \"Password\", identifier: \"password\" },\r\n  { label: \"Confirm Password\", identifier: \"confirmPassword\" },\r\n];\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .required(\"Please enter a password\")\r\n    .min(8, \"Password must have at least 8 characters\"),\r\n  confirmPassword: Yup.string()\r\n    .oneOf([Yup.ref(\"password\"), null], \"Your passwords do not match\")\r\n    .required(\"Please enter confirm password\"),\r\n});\r\n\r\nconst initialValues = {\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\nconst UserPasswordConfirm = ({\r\n  selectedId,\r\n  onDialogClose,\r\n  isOpen,\r\n  setRefresh,\r\n}) => {\r\n  const onSubmit = (payload) => {\r\n    postApi(APIS.USER_PASSWORD_RESET, {\r\n      id: selectedId,\r\n      password: payload?.password,\r\n    }).then((res) => {\r\n      toast.push(<Notification type=\"success\">{UPDATE_TOAST}</Notification>);\r\n      setRefresh((s) => !s);\r\n      onDialogClose();\r\n    });\r\n  };\r\n  return (\r\n    <Dialog\r\n      isOpen={isOpen}\r\n      onClose={onDialogClose}\r\n      onRequestClose={onDialogClose}\r\n      contentClassName=\"pb-0 px-0 mt-36 min-w-36\"\r\n    >\r\n      <div className=\"px-5 pb-5\">\r\n        <h5 className=\"mb-4\">Reset Password</h5>\r\n        {/* <p>{des}</p> */}\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({ touched, errors, isSubmitting }) => (\r\n            <Form>\r\n              <FormContainer>\r\n                <>\r\n                  {FORM_FIELD.map((field, index) => {\r\n                    return (\r\n                      <FormItem\r\n                        key={`${field.identifier}-${index}`}\r\n                        label={field.label}\r\n                        invalid={\r\n                          errors?.[field.identifier] &&\r\n                          touched?.[field.identifier]\r\n                        }\r\n                        errorMessage={errors?.[field.identifier]}\r\n                      >\r\n                        <Field\r\n                          autoComplete=\"off\"\r\n                          name={field.identifier}\r\n                          placeholder={field.label}\r\n                          component={PasswordInput}\r\n                        />\r\n                      </FormItem>\r\n                    );\r\n                  })}\r\n                  <div className=\"text-right mt-6\">\r\n                    <Button\r\n                      className=\"ltr:mr-2 rtl:ml-2\"\r\n                      variant=\"plain\"\r\n                      onClick={onDialogClose}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      className=\"ltr:mr-2 rtl:ml-2\"\r\n                      loading={isSubmitting}\r\n                      variant=\"solid\"\r\n                      type=\"submit\"\r\n                    >\r\n                      {isSubmitting ? \"Reseting...\" : \"Reset\"}\r\n                    </Button>\r\n                  </div>\r\n                </>\r\n              </FormContainer>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UserPasswordConfirm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { APP_NAME } from \"constants/app.constant\";\r\n\r\nexport const LOGO_SRC_PATH = \"/img/logo/\";\r\n\r\nconst Logo = (props) => {\r\n  const {\r\n    type,\r\n    mode,\r\n    gutter,\r\n    className,\r\n    imgClass,\r\n    style,\r\n    logoWidth,\r\n    imgHeight = 100,\r\n    imgWidth = 100,\r\n  } = props;\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\"logo\", className, gutter)}\r\n      style={{\r\n        ...style,\r\n        ...{ width: logoWidth },\r\n      }}\r\n    >\r\n      <img\r\n        className={imgClass}\r\n        src={`${LOGO_SRC_PATH}app-logo2.png`}\r\n        alt={`${APP_NAME} logo`}\r\n        style={{ width: imgWidth, height: imgHeight}}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nLogo.defaultProps = {\r\n  mode: \"light\",\r\n  type: \"full\",\r\n  logoWidth: \"auto\",\r\n};\r\n\r\nLogo.propTypes = {\r\n  mode: PropTypes.oneOf([\"light\", \"dark\"]),\r\n  type: PropTypes.oneOf([\"full\", \"streamline\"]),\r\n  gutter: PropTypes.string,\r\n  imgClass: PropTypes.string,\r\n  logoWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nexport default Logo;\r\n","import { AdaptableCard } from 'components/shared';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { DataTable } from 'components/shared';\r\nimport dayjs from 'dayjs';\r\nimport { getApi, postApi } from 'services/CommonService';\r\nimport { APIS } from 'constants/api.constant';\r\nimport { toast, Notification, Avatar } from 'components/ui';\r\nimport ActionColumn from 'components/custom/actionColumn';\r\nimport { AiFillDelete, AiOutlineFile } from 'react-icons/ai';\r\nimport ConfirmationContent from 'components/custom/ConfirmationContent';\r\nimport Header from 'components/custom/header';\r\nimport {\r\n  TABLE_ACTION_KEYS,\r\n  CONFIRMATION_OBJ,\r\n  DELETE_TOAST,\r\n  UPDATE_TOAST,\r\n  ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM,\r\n  DATE_FORMAT,\r\n  DATE_TIME_FORMAT,\r\n  APP_NAME,\r\n  ACTIVE_STATUS_OPTONS,\r\n} from 'constants/app.constant';\r\nimport appConfig from 'configs/app.config';\r\nimport ActiveInActiveCheckbox from 'components/custom/activeCheckbox';\r\nimport { FaKey } from 'react-icons/fa';\r\nimport UserPasswordConfirm from 'components/custom/userPasswordConfirm';\r\nimport { LOGO_SRC_PATH } from 'components/template/Logo';\r\nimport { HiOutlinePlusCircle } from 'react-icons/hi';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ExportContent from 'components/custom/exportContent';\r\nimport { GrPowerReset } from 'react-icons/gr';\r\nimport hasPermisson, { ACCESS, MODULE, getFormattedPhoneNum, userActionMenu, userColumn } from 'utils/hasPermission';\r\n\r\nconst PROVIDER_TYPE = [\r\n  { label: 'SNF_ALF', value: 1 },\r\n  { label: 'MEDICAL_CENTERS', value: 2 },\r\n  { label: 'HMO', value: 3 },\r\n  { label: 'WORKERS_COMP', value: 4 },\r\n  { label: 'UNION', value: 5 },\r\n  { label: 'SELF', value: 6 },\r\n  { label: 'ADMIN', value: 7 },\r\n];\r\n\r\nconst ACTION_CONSTANT = [\r\n  { label: 'Edit', key: TABLE_ACTION_KEYS.EDIT },\r\n  {\r\n    label: <FaKey style={{ fontSize: '1.2rem' }} />,\r\n    key: TABLE_ACTION_KEYS.CHANGE_PASSWORD,\r\n    toolTip: 'Change Password',\r\n  },\r\n  {\r\n    label: <AiFillDelete style={{ fontSize: '1.2rem' }} />,\r\n    key: TABLE_ACTION_KEYS.DELETE,\r\n    toolTip: 'Delete',\r\n  },\r\n];\r\n\r\nconst DEL_CONFIRM = {\r\n  header: CONFIRMATION_OBJ.HEADER,\r\n  des: CONFIRMATION_OBJ.DELETE,\r\n  warning: CONFIRMATION_OBJ.WARNING,\r\n  buttonLabel: 'Delete',\r\n};\r\n\r\nconst BUTTON_CONSTANT = [\r\n  {\r\n    label: 'Add Provider',\r\n    key: TABLE_ACTION_KEYS.ADD,\r\n    icon: <HiOutlinePlusCircle />,\r\n  },\r\n  {\r\n    label: 'Export Excel',\r\n    key: TABLE_ACTION_KEYS.EXPORT,\r\n    icon: <AiOutlineFile />,\r\n  },\r\n];\r\n\r\nconst FILTER_CONSTANT = [\r\n  {\r\n    component: 'select',\r\n    options: ACTIVE_STATUS_OPTONS,\r\n    className: 'mb-4 w-40\t',\r\n    placeholder: 'Status',\r\n    filterKey: 'status',\r\n  },\r\n  {\r\n    component: 'resetButton',\r\n    label: 'Reset',\r\n    icon: <GrPowerReset />,\r\n    className: 'mb-4',\r\n    filterKey: { status: '' },\r\n  },\r\n];\r\n\r\nconst NameColumn = ({ row }) => {\r\n  return (\r\n    <div className=\"flex items-center\">\r\n      {row?.imageUrlThumbnail !== null && row?.imageUrlThumbnail ? (\r\n        <Avatar\r\n          size={28}\r\n          shape=\"circle\"\r\n          className=\"mr-2\"\r\n          src={`${appConfig.imageBaseUrl}${row?.imageUrlThumbnail}`}\r\n        />\r\n      ) : (\r\n        <Avatar size={28} shape=\"circle\" className=\"mr-2\">\r\n          {row?.firstName?.[0]?.toUpperCase()}\r\n        </Avatar>\r\n      )}\r\n\r\n      <div className=\"w-40\">{`${\r\n        row?.firstName || row?.lastName\r\n          ? `${row?.firstName ? row?.firstName : ''} ${row?.lastName ? row?.lastName : ''}`\r\n          : '-'\r\n      }`}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProviderManagement = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [tags, setTags] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [selectedData, setSelectedData] = useState('');\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [activeConfirm, setActiveConfirm] = useState(false);\r\n  const [openPasswordModal, setOpenPasswordModal] = useState('');\r\n  const [openExportModal, setOpenExportModal] = useState(false);\r\n  const [filterValue, setFilterValue] = useState({\r\n    // requestType: '',\r\n    status: '',\r\n  });\r\n  const navigate = useNavigate();\r\n  ////// GET LIST ADMINS FROM API///////////\r\n\r\n  useEffect(() => {\r\n    getApi(APIS.GET_USERS, {\r\n      limit,\r\n      search,\r\n      userType: 1,\r\n      status: filterValue?.status ? filterValue?.status?.value : null,\r\n      skip: limit * (page - 1),\r\n    })\r\n      .then((res) => {\r\n        setTags(res?.data?.data);\r\n        setTotalCount(res?.data?.count);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [search, page, limit, refresh, filterValue]);\r\n\r\n  const onActionHandle = (e, key, row) => {\r\n    if (key === TABLE_ACTION_KEYS.DELETE) {\r\n      setSelectedData({\r\n        id: row?.id,\r\n      });\r\n      setOpenModal(true);\r\n    }\r\n    if (key === TABLE_ACTION_KEYS.EDIT) {\r\n      navigate(`/app/provider/edit/${row?.id}`);\r\n    }\r\n    if (key === TABLE_ACTION_KEYS.CHANGE_PASSWORD) {\r\n      setOpenPasswordModal(row?.id);\r\n    }\r\n  };\r\n\r\n  const onModalClose = () => {\r\n    setSelectedData('');\r\n    setOpenModal(false);\r\n    setActiveConfirm(false);\r\n    setOpenPasswordModal('');\r\n    setOpenExportModal(false);\r\n  };\r\n\r\n  const onHeaderButtonClick = (e, key) => {\r\n    if (key === TABLE_ACTION_KEYS.ADD) {\r\n      navigate('/app/provider/add');\r\n    }\r\n    if (key === TABLE_ACTION_KEYS.EXPORT) {\r\n      setOpenExportModal(true);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      Header: 'Actions',\r\n      id: 'action',\r\n      accessor: (row) => row,\r\n      Cell: (props) => (\r\n        <ActionColumn\r\n          row={props.row.original}\r\n          onActionHandle={onActionHandle}\r\n          actionsMenu={userActionMenu(MODULE.PROVIDER, ACTION_CONSTANT)}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: 'Active',\r\n      Cell: (props) => {\r\n        return (\r\n          <ActiveInActiveCheckbox\r\n            dataObj={props}\r\n            setSelectedData={setSelectedData}\r\n            setActiveConfirm={setActiveConfirm}\r\n            setOpenModal={setOpenModal}\r\n          />\r\n        );\r\n      },\r\n    },\r\n    {\r\n      Header: 'Provider Details',\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return <NameColumn row={row} />;\r\n      },\r\n    },\r\n    {\r\n      Header: 'DOB',\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return <div className=\"flex items-center \">{dayjs(row?.dob).format(DATE_FORMAT)}</div>;\r\n      },\r\n    },\r\n    {\r\n      Header: 'Provider Type',\r\n      Cell: (props) => {\r\n        const dataObj = PROVIDER_TYPE.find(\r\n          (item, i) => item.value === props?.row?.original?.userSubType\r\n        );\r\n        return dataObj?.label ? dataObj?.label : '-';\r\n      },\r\n    },\r\n    {\r\n      Header: 'Provider ID',\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return row?.patientNo === null ? '-' : row?.patientNo;\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: 'Email',\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        const dataObj = row?.isEmailVerify;\r\n        return (\r\n          <div className=\"flex items-center whitespace-nowrap\">\r\n            <p>{row?.email} </p>\r\n            {dataObj === 1 && (\r\n              <img\r\n                className=\"ml-1 h-5 w-5\"\r\n                src={`${LOGO_SRC_PATH}verified.png`}\r\n                alt={`${APP_NAME} logo`}\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      Header: 'Phone',\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        const dataObj = row?.isPhoneVerify;\r\n        return (\r\n          <div className=\"flex items-center whitespace-nowrap\">\r\n            <p>{`${row?.countryCode} ${getFormattedPhoneNum(row?.phoneNumber)}`}</p>\r\n            {dataObj === 1 && (\r\n              <img\r\n                className=\"ml-1 h-5 w-5\"\r\n                src={`${LOGO_SRC_PATH}verified.png`}\r\n                alt={`${APP_NAME} logo`}\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      Header: 'Registered On',\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return (\r\n          <div className=\"flex items-center \">{dayjs(row?.createdAt).format(DATE_TIME_FORMAT)}</div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const onConfirmClick = () => {\r\n    if (activeConfirm) {\r\n      postApi(APIS.UPDATE_STATUS, {\r\n        id: selectedData?.id,\r\n        action: +selectedData?.action,\r\n      }).then((res) => {\r\n        toast.push(<Notification type=\"success\">{UPDATE_TOAST}</Notification>);\r\n        setRefresh((s) => !s);\r\n        onModalClose();\r\n      });\r\n    } else {\r\n      postApi(APIS.DELETE_DATA, { id: selectedData?.id, type: 2 }).then((res) => {\r\n        toast.push(<Notification type=\"success\">{DELETE_TOAST}</Notification>);\r\n        setRefresh((s) => !s);\r\n        onModalClose();\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        buttonMenu={\r\n          hasPermisson(MODULE.PROVIDER, ACCESS.WRITE) ? BUTTON_CONSTANT : [BUTTON_CONSTANT?.[1]]\r\n        }\r\n        FilterMenu={FILTER_CONSTANT}\r\n        setSearch={setSearch}\r\n        buttonClick={onHeaderButtonClick}\r\n        setFilterValue={setFilterValue}\r\n        filterValue={filterValue}\r\n        searchPlaceholder=\"Search with Name, Email, Mobile\"\r\n      />\r\n\r\n      <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\r\n        <DataTable\r\n          isCursor={false}\r\n          columns={userColumn(columns, MODULE.PROVIDER)}\r\n          data={tags}\r\n          loading={loading}\r\n          skeletonAvatarColumns={[0]}\r\n          skeletonAvatarProps={{ width: 28, height: 28 }}\r\n          pagingData={{ pageIndex: page, pageSize: limit, total: totalCount }}\r\n          onPaginationChange={(pages) => setPage(pages)}\r\n          onSelectChange={(limits) => setLimit(limits)}\r\n        />\r\n      </AdaptableCard>\r\n\r\n      <ConfirmationContent\r\n        isOpen={openModal}\r\n        onConfirmClick={onConfirmClick}\r\n        header={DEL_CONFIRM.header}\r\n        des={activeConfirm ? ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM?.des : DEL_CONFIRM.des}\r\n        onDialogClose={onModalClose}\r\n        isWarning={!activeConfirm && DEL_CONFIRM.warning}\r\n        buttonLabel={\r\n          activeConfirm\r\n            ? ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM?.buttonLabel\r\n            : DEL_CONFIRM.buttonLabel\r\n        }\r\n      />\r\n      <UserPasswordConfirm\r\n        isOpen={!!openPasswordModal}\r\n        onDialogClose={onModalClose}\r\n        selectedId={openPasswordModal}\r\n        setRefresh={setRefresh}\r\n      />\r\n      <ExportContent type=\"1\" isOpen={openExportModal} onDialogClose={onModalClose} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProviderManagement;\r\n"],"names":["type","onDialogClose","isOpen","user","Payload","onClose","onRequestClose","contentClassName","className","variant","onClick","payload","userId","_id","postApi","APIS","then","res","toast","downloadLink","document","createElement","href","appConfig","data","fileName","download","body","appendChild","click","removeChild","catch","error","message","FORM_FIELD","label","identifier","validationSchema","Yup","shape","password","required","min","confirmPassword","oneOf","initialValues","selectedId","setRefresh","onSubmit","id","UPDATE_TOAST","s","touched","errors","isSubmitting","map","field","index","invalid","errorMessage","autoComplete","name","placeholder","component","PasswordInput","loading","LOGO_SRC_PATH","Logo","props","mode","gutter","imgClass","style","logoWidth","imgHeight","imgWidth","classNames","width","src","alt","APP_NAME","height","defaultProps","PROVIDER_TYPE","value","ACTION_CONSTANT","key","TABLE_ACTION_KEYS","fontSize","toolTip","DEL_CONFIRM","header","CONFIRMATION_OBJ","des","warning","buttonLabel","BUTTON_CONSTANT","icon","FILTER_CONSTANT","options","ACTIVE_STATUS_OPTONS","filterKey","status","NameColumn","row","imageUrlThumbnail","size","firstName","toUpperCase","lastName","useState","setLoading","tags","setTags","search","setSearch","refresh","page","setPage","totalCount","setTotalCount","limit","setLimit","selectedData","setSelectedData","openModal","setOpenModal","activeConfirm","setActiveConfirm","openPasswordModal","setOpenPasswordModal","openExportModal","setOpenExportModal","filterValue","setFilterValue","navigate","useNavigate","useEffect","getApi","userType","skip","count","finally","onActionHandle","e","onModalClose","columns","Header","accessor","Cell","original","actionsMenu","userActionMenu","MODULE","dataObj","dayjs","dob","format","DATE_FORMAT","find","item","i","userSubType","patientNo","isEmailVerify","email","isPhoneVerify","countryCode","getFormattedPhoneNum","phoneNumber","createdAt","DATE_TIME_FORMAT","buttonMenu","hasPermisson","ACCESS","FilterMenu","buttonClick","searchPlaceholder","bodyClass","isCursor","userColumn","skeletonAvatarColumns","skeletonAvatarProps","pagingData","pageIndex","pageSize","total","onPaginationChange","pages","onSelectChange","limits","onConfirmClick","action","DELETE_TOAST","ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM","isWarning"],"sourceRoot":""}
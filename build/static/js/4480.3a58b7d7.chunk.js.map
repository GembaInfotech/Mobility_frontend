{"version":3,"file":"static/js/4480.3a58b7d7.chunk.js","mappings":"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","sources":["components/template/HorizontalNav.js","components/layout/SimpleLayout.js","components/template/HeaderLogo.js","components/template/HorizontalMenuContent/HorizontalMenuNavLink.js","components/template/HorizontalMenuContent/HorizontalMenuItem.js","components/template/HorizontalMenuContent/HorizontalMenuDropdownItem.js","components/template/HorizontalMenuContent/index.js"],"sourcesContent":["import React from 'react'\r\nimport HorizontalMenuContent from './HorizontalMenuContent'\r\nimport useResponsive from 'utils/hooks/useResponsive'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst HorizontalNav = () => {\r\n\t\r\n\tconst mode = useSelector(state => state.theme.mode)\r\n\tconst userAuthority = useSelector((state) => state.auth.user.authority)\r\n\r\n\tconst { larger } = useResponsive()\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\tlarger.md && (\r\n\t\t\t\t\t<HorizontalMenuContent \r\n\t\t\t\t\t\tmanuVariant={mode} \r\n\t\t\t\t\t\tuserAuthority={userAuthority}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default HorizontalNav","import React from 'react'\r\nimport Header from 'components/template/Header'\r\nimport SidePanel from 'components/template/SidePanel'\r\nimport UserDropdown from 'components/template/UserDropdown'\r\nimport LanguageSelector from 'components/template/LanguageSelector'\r\nimport Notification from 'components/template/Notification'\r\nimport HeaderLogo from 'components/template/HeaderLogo'\r\nimport Search from 'components/template/Search'\r\nimport MobileNav from 'components/template/MobileNav'\r\nimport HorizontalNav from 'components/template/HorizontalNav'\r\nimport View from 'views'\r\n\r\nconst HeaderActionsStart = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HeaderLogo />\r\n\t\t\t<MobileNav />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst HeaderActionsEnd = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Search />\r\n\t\t\t<LanguageSelector />\r\n\t\t\t<Notification />\r\n\t\t\t<SidePanel />\r\n\t\t\t<UserDropdown hoverable={false} />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst SimpleLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"app-layout-simple flex flex-auto flex-col min-h-screen\">\r\n\t\t\t<div className=\"flex flex-auto min-w-0\">\r\n\t\t\t\t<div className=\"flex flex-col flex-auto min-h-screen min-w-0 relative w-full\">\r\n\t\t\t\t\t<Header\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\tclassName=\"shadow dark:shadow-2xl\"\r\n\t\t\t\t\t\theaderStart={<HeaderActionsStart />}\r\n\t\t\t\t\t\theaderMiddle={<HorizontalNav />}\r\n\t\t\t\t\t\theaderEnd={<HeaderActionsEnd />} \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<View pageContainerType=\"contained\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SimpleLayout\r\n","import React from 'react'\r\nimport Logo from 'components/template/Logo'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst HeaderLogo = () => {\r\n\r\n\tconst mode = useSelector(state => state.theme.mode)\r\n\r\n\treturn (\r\n\t\t<Logo mode={mode} className=\"hidden md:block\" />\r\n\t)\r\n}\r\n\r\nexport default HeaderLogo","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst HorizontalMenuNavLink = ({path, children}) => {\r\n\treturn (\r\n\t\t<Link className=\"h-full w-full flex items-center\" to={path}>\r\n\t\t\t<span>{children}</span>\r\n\t\t</Link>\r\n\t)\r\n}\r\n\r\nexport default HorizontalMenuNavLink","import React from 'react'\r\nimport navigationIcon from 'configs/navigation-icon.config'\r\nimport { MenuItem } from 'components/ui'\r\nimport HorizontalMenuNavLink from './HorizontalMenuNavLink'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst HorizontalMenuItem = ({nav, isLink, manuVariant}) => {\r\n\r\n\tconst { title, translateKey, icon, path } = nav\r\n\r\n\tconst { t } = useTranslation()\r\n\r\n\tconst itemTitle = t(translateKey, title)\r\n\t\r\n\treturn (\r\n\t\t<MenuItem variant={manuVariant}>\r\n\t\t\t{icon && (\r\n\t\t\t\t<span className=\"text-2xl\">\r\n\t\t\t\t\t{navigationIcon[icon]}\r\n\t\t\t\t</span>\r\n\t\t\t)}\r\n\t\t\t{(path && isLink)\r\n\t\t\t\t?\r\n\t\t\t\t<HorizontalMenuNavLink path={path}>\r\n\t\t\t\t\t{itemTitle}\r\n\t\t\t\t</HorizontalMenuNavLink>\r\n\t\t\t\t: \r\n\t\t\t\t<span>{itemTitle}</span>\r\n\t\t\t}\r\n\t\t</MenuItem>\r\n\t)\r\n}\r\n\r\nexport default HorizontalMenuItem","import React from 'react'\r\nimport { Dropdown } from 'components/ui'\r\nimport HorizontalMenuNavLink from './HorizontalMenuNavLink'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst HorizontalMenuDropdownItem = ({nav}) => {\r\n\tconst { title, translateKey, path, key } = nav\r\n\r\n\tconst { t } = useTranslation()\r\n\r\n\tconst itemTitle = t(translateKey, title)\r\n\r\n\treturn (\r\n\t\t<Dropdown.Item eventKey={key} > \r\n\t\t\t{path \r\n\t\t\t\t? \r\n\t\t\t\t<HorizontalMenuNavLink path={path}>\r\n\t\t\t\t\t{itemTitle}\r\n\t\t\t\t</HorizontalMenuNavLink>\r\n\t\t\t\t: \r\n\t\t\t\t<span>{itemTitle}</span>\r\n\t\t\t}\r\n\t\t</Dropdown.Item>\r\n\t)\r\n}\r\n\r\nexport default HorizontalMenuDropdownItem","import React from \"react\";\r\nimport navigationConfig from \"configs/navigation.config\";\r\nimport { Dropdown } from \"components/ui\";\r\nimport { AuthorityCheck } from \"components/shared\";\r\nimport HorizontalMenuItem from \"./HorizontalMenuItem\";\r\nimport HorizontalMenuDropdownItem from \"./HorizontalMenuDropdownItem\";\r\nimport {\r\n  NAV_ITEM_TYPE_TITLE,\r\n  NAV_ITEM_TYPE_COLLAPSE,\r\n  NAV_ITEM_TYPE_ITEM,\r\n} from \"constants/navigation.constant\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst HorizontalMenuContent = ({ manuVariant, userAuthority = [] }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <span className=\"flex items-center\">\r\n      {navigationConfig.map((nav) => {\r\n        if (\r\n          nav.type === NAV_ITEM_TYPE_TITLE ||\r\n          nav.type === NAV_ITEM_TYPE_COLLAPSE\r\n        ) {\r\n          return (\r\n            <AuthorityCheck\r\n              authority={nav.authority}\r\n              userAuthority={userAuthority}\r\n              key={nav.key}\r\n            >\r\n              <Dropdown\r\n                trigger=\"hover\"\r\n                renderTitle={\r\n                  <HorizontalMenuItem manuVariant={manuVariant} nav={nav} />\r\n                }\r\n              >\r\n                {nav.subMenu.map((secondarySubNav) => (\r\n                  <AuthorityCheck\r\n                    authority={secondarySubNav.authority}\r\n                    userAuthority={userAuthority}\r\n                    key={secondarySubNav.key}\r\n                  >\r\n                    {secondarySubNav.subMenu.length > 0 ? (\r\n                      <Dropdown.Menu\r\n                        title={t(\r\n                          secondarySubNav.translateKey,\r\n                          secondarySubNav.title\r\n                        )}\r\n                      >\r\n                        {secondarySubNav.subMenu.map((tertiarySubNav) => (\r\n                          <AuthorityCheck\r\n                            authority={tertiarySubNav.authority}\r\n                            userAuthority={userAuthority}\r\n                            key={tertiarySubNav.key}\r\n                          >\r\n                            <HorizontalMenuDropdownItem nav={tertiarySubNav} />\r\n                          </AuthorityCheck>\r\n                        ))}\r\n                      </Dropdown.Menu>\r\n                    ) : (\r\n                      <HorizontalMenuDropdownItem\r\n                        nav={secondarySubNav}\r\n                        key={secondarySubNav.key}\r\n                      />\r\n                    )}\r\n                  </AuthorityCheck>\r\n                ))}\r\n              </Dropdown>\r\n            </AuthorityCheck>\r\n          );\r\n        }\r\n        if (nav.type === NAV_ITEM_TYPE_ITEM) {\r\n          return (\r\n            <AuthorityCheck\r\n              authority={nav.authority}\r\n              userAuthority={userAuthority}\r\n              key={nav.key}\r\n            >\r\n              <HorizontalMenuItem isLink nav={nav} manuVariant={manuVariant} />\r\n            </AuthorityCheck>\r\n          );\r\n        }\r\n        return <></>;\r\n      })}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default HorizontalMenuContent;\r\n"],"names":["mode","useSelector","state","theme","userAuthority","auth","user","authority","larger","useResponsive","md","HorizontalMenuContent","manuVariant","HeaderActionsStart","HeaderLogo","MobileNav","HeaderActionsEnd","Search","LanguageSelector","Notification","SidePanel","UserDropdown","hoverable","className","Header","container","headerStart","headerMiddle","headerEnd","pageContainerType","path","children","to","nav","isLink","title","translateKey","icon","itemTitle","t","useTranslation","variant","navigationIcon","key","eventKey","navigationConfig","type","NAV_ITEM_TYPE_TITLE","NAV_ITEM_TYPE_COLLAPSE","trigger","renderTitle","subMenu","map","secondarySubNav","length","tertiarySubNav","NAV_ITEM_TYPE_ITEM"],"sourceRoot":""}
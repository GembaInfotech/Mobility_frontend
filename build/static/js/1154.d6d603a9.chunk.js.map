{"version":3,"file":"static/js/1154.d6d603a9.chunk.js","mappings":"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","sources":["assets/icon.js","components/custom/exportContent/index.js","utils/isLastChild.js","components/template/Notification.js","utils/hoc/withHeaderItem.js","utils/hooks/useResponsive.js","views/orderManagement/serviceOrder/header/index.js","views/orderManagement/serviceOrder/confirmation/calendorSection/index.js","views/orderManagement/serviceOrder/confirmation/downloadSection/index.js","views/orderManagement/serviceOrder/confirmation/insuranceSection/index.js","views/orderManagement/serviceOrder/confirmation/statusChange/index.js","views/orderManagement/serviceOrder/confirmation/index.js","views/orderManagement/serviceOrder/index.js","views/orderManagement/serviceOrder/serviceConstant/index.js"],"sourcesContent":["export const IMAGES = {\r\n  VIEW_IMAGE: \"/img/prescription.png\",\r\n  REPLY: \"/img/reply.png\",\r\n  STATUS: \"/img/status.png\",\r\n  EXPORT: \"/img/fileExport.svg\",\r\n  RECEIPT: \"/img/receipt.svg\",\r\n  DOWNLOAD_PDF: \"/img/download.png\",\r\n};\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  Notification,\r\n  toast,\r\n} from 'components/ui';\r\nimport appConfig from 'configs/app.config';\r\nimport { APIS } from 'constants/api.constant';\r\nimport React from 'react';\r\nimport { postApi } from 'services/CommonService';\r\n\r\nconst ExportContent = ({ type, onDialogClose, isOpen, user, Payload }) => {\r\n  const onSubmit = () => {\r\n    const payload = { type, ...Payload };\r\n    \r\n    if (user) {\r\n      payload.userId = user?._id;\r\n    }\r\n\r\n    postApi(APIS.EXPORT_DATA, payload).then((res) => {\r\n      toast.push(<Notification type=\"success\">Exported successfully</Notification>);\r\n      const downloadLink = document.createElement('a');\r\n      downloadLink.href = appConfig.imageBaseUrl + res?.data?.fileName; \r\n      downloadLink.download = 'file_name.xlsx';\r\n      document.body.appendChild(downloadLink);\r\n      downloadLink.click();\r\n      document.body.removeChild(downloadLink);\r\n      onDialogClose();\r\n    }).catch(error => {\r\n      toast.push(<Notification type=\"error\">Export failed: {error.message}</Notification>);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      isOpen={isOpen}\r\n      onClose={onDialogClose}\r\n      onRequestClose={onDialogClose}\r\n      contentClassName=\"pb-0 px-0 mt-36 min-w-36\"\r\n    >\r\n      <div className=\"p-6\">\r\n        <p className=\"text-md mb-6 font-bold \">Please download the Excel file for the data.</p>\r\n        <div className=\"text-right mt-6\">\r\n          {/* <Button\r\n            className=\"ltr:mr-2 rtl:ml-2\"\r\n            variant=\"plain\"\r\n            onClick={onDialogClose}\r\n            type=\"button\"\r\n          >\r\n            Cancel\r\n          </Button> */}\r\n          <Button \r\n            variant=\"solid\" \r\n            type=\"button\" \r\n            onClick={onSubmit}\r\n          >\r\n            Export/Download File\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExportContent;\r\n","export default function isLastChild (arr, index) {\r\n    return arr.length === (index + 1)\r\n}","import React, { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport withHeaderItem from \"utils/hoc/withHeaderItem\";\r\nimport {\r\n  Avatar,\r\n  Dropdown,\r\n  ScrollBar,\r\n  Spinner,\r\n  Badge,\r\n  Button,\r\n  Tooltip,\r\n} from \"components/ui\";\r\nimport {\r\n  HiOutlineBell,\r\n  HiOutlineCalendar,\r\n  HiOutlineClipboardCheck,\r\n  HiOutlineBan,\r\n  HiOutlineMailOpen,\r\n} from \"react-icons/hi\";\r\nimport {\r\n  apiGetNotificationList,\r\n  apiGetNotificationCount,\r\n  getApi,\r\n  postApi,\r\n} from \"services/CommonService\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport isLastChild from \"utils/isLastChild\";\r\nimport useTwColorByName from \"utils/hooks/useTwColorByName\";\r\nimport useThemeClass from \"utils/hooks/useThemeClass\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useResponsive from \"utils/hooks/useResponsive\";\r\nimport acronym from \"utils/acronym\";\r\nimport { APIS } from \"constants/api.constant\";\r\nimport dayjs from \"dayjs\";\r\nimport { DATE_TIME_FORMAT } from \"constants/app.constant\";\r\n\r\nconst notificationHeight = \"h-72\";\r\nconst imagePath = \"/img/avatars/\";\r\n\r\nconst GeneratedAvatar = ({ target }) => {\r\n  const color = useTwColorByName();\r\n  return (\r\n    <Avatar shape=\"circle\" className={`${color(target)}`}>\r\n      {acronym(target)}\r\n    </Avatar>\r\n  );\r\n};\r\n\r\nconst notificationTypeAvatar = (data) => {\r\n  const { type, target, image, status } = data;\r\n  switch (type) {\r\n    case 0:\r\n      if (image) {\r\n        return <Avatar shape=\"circle\" src={`${imagePath}${image}`} />;\r\n      } else {\r\n        return <GeneratedAvatar target={target} />;\r\n      }\r\n    case 1:\r\n      return (\r\n        <Avatar\r\n          shape=\"circle\"\r\n          className=\"bg-blue-100 text-blue-600 dark:bg-blue-500/20 dark:text-blue-100\"\r\n          icon={<HiOutlineCalendar />}\r\n        />\r\n      );\r\n    case 2:\r\n      const statusSucceed = status === \"succeed\";\r\n      const statusColor = statusSucceed\r\n        ? \"bg-emerald-100 text-emerald-600 dark:bg-emerald-500/20 dark:text-emerald-100\"\r\n        : \"bg-red-100 text-red-600 dark:bg-red-500/20 dark:text-red-100\";\r\n      const statusIcon = statusSucceed ? (\r\n        <HiOutlineClipboardCheck />\r\n      ) : (\r\n        <HiOutlineBan />\r\n      );\r\n      return (\r\n        <Avatar shape=\"circle\" className={statusColor} icon={statusIcon} />\r\n      );\r\n    default:\r\n      return <Avatar />;\r\n  }\r\n};\r\nconst ADMIN_NOTIFICATION_TYPE = {\r\n  ECOM_ORDER: 1,\r\n  SERVICE_ORDER: 2,\r\n  CANCEL_REQUEST: 3,\r\n  PATIENT_ADD: 4,\r\n  PROVIDER_ADD: 5,\r\n  STAFF_ADD: 6,\r\n  FEEDBACK_ADD: 7,\r\n  CUSTOMER_QUERY_ADD: 8,\r\n  PRODUCT_QUANTITY_LESS: 9,\r\n};\r\n\r\nconst NotificationToggle = ({ className, content }) => {\r\n  return (\r\n    <div className={classNames(\"text-2xl\", className)}>\r\n      {content ? (\r\n        <Badge badgeStyle={{ top: \"3px\", right: \"6px\" }} content={content}>\r\n          <HiOutlineBell />\r\n        </Badge>\r\n      ) : (\r\n        <HiOutlineBell />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Notification = ({ className }) => {\r\n  const [notificationList, setNotificationList] = useState([]);\r\n  const listInnerRef = useRef();\r\n  const [currPage, setCurrPage] = useState(0);\r\n  const [prevPage, setPrevPage] = useState(0);\r\n  const [lastList, setLastList] = useState(false);\r\n  const [count, setCount] = useState();\r\n  const [noResult, setNoResult] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const { bgTheme } = useThemeClass();\r\n\r\n  const { larger } = useResponsive();\r\n\r\n  const direction = useSelector((state) => state.theme.direction);\r\n\r\n  const navigationHandler = (type, id) => {\r\n    switch (type) {\r\n      case ADMIN_NOTIFICATION_TYPE.ECOM_ORDER:\r\n        navigate(`/app/orderManagement/ecom-order/view/${id}`);\r\n        break;\r\n      case ADMIN_NOTIFICATION_TYPE.SERVICE_ORDER:\r\n        navigate(`/app/service-order/view/${id}`);\r\n        break;\r\n      case ADMIN_NOTIFICATION_TYPE.CANCEL_REQUEST:\r\n        navigate(`/app/order-management/cancel-request/order-reply/${id}`);\r\n        break;\r\n      case ADMIN_NOTIFICATION_TYPE.PATIENT_ADD:\r\n        navigate(`/app/patient/edit/${id}`);\r\n        break;\r\n      case ADMIN_NOTIFICATION_TYPE.PROVIDER_ADD:\r\n        navigate(`/app/provider/edit/${id}`);\r\n        break;\r\n      case ADMIN_NOTIFICATION_TYPE.STAFF_ADD:\r\n        navigate(`/app/staff/edit/${id}`);\r\n        break;\r\n      case ADMIN_NOTIFICATION_TYPE.FEEDBACK_ADD:\r\n        navigate(`/app/users-feedback`);\r\n        break;\r\n      case ADMIN_NOTIFICATION_TYPE.CUSTOMER_QUERY_ADD:\r\n        navigate(`/app/contact-queries`);\r\n        break;\r\n      case ADMIN_NOTIFICATION_TYPE.PRODUCT_QUANTITY_LESS:\r\n        navigate(`/app/products/edit/${id}`);\r\n        break;\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  const fetchNotifications = () => {\r\n    // setLoading(true);\r\n    // getApi(APIS.GET_NOTIFICATION, { limit: 10, skip: currPage * 10 }) // Pass limit and skip as parameters\r\n    //   .then((res) => {\r\n    //     setLoading(false);\r\n    //     setNoResult(false);\r\n    //     setCount(res?.data?.unread);\r\n    //     setNotificationList((prevList) => [...prevList, ...res?.data?.data]);\r\n    //     if (res?.data?.count === 0) {\r\n    //       setNoResult(true);\r\n    //     }\r\n    //     if (!res.data.data.length) {\r\n    //       setLastList(true);\r\n    //       return;\r\n    //     }\r\n    //     setPrevPage(currPage);\r\n    //   })\r\n    //   .finally(() => {\r\n    //     setLoading(false);\r\n    //   });\r\n  };\r\n  useEffect(() => {\r\n    fetchNotifications();\r\n    const intervalId = setInterval(fetchNotifications, 60000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!lastList && prevPage !== currPage) {\r\n      fetchNotifications();\r\n    }\r\n  }, [currPage, lastList, prevPage]);\r\n  const onScroll = () => {\r\n    if (listInnerRef.current) {\r\n      const { scrollTop, scrollHeight, clientHeight } = listInnerRef.current;\r\n      if (scrollTop + clientHeight === scrollHeight) {\r\n        setCurrPage(currPage + 1);\r\n      }\r\n    }\r\n  };\r\n  // const onMarkAllAsRead = useCallback(() => {\r\n  //   const list = notificationList.map((item) => {\r\n  //     if (!item.readed) {\r\n  //       item.readed = true;\r\n  //     }\r\n  //     return item;\r\n  //   });\r\n  //   setNotificationList(list);\r\n  //   setUnreadNotification(false);\r\n  // }, [notificationList]);\r\n\r\n  const onMarkAsRead = (id) => {\r\n    const list = notificationList.map((item) => {\r\n      if (item.id === id) {\r\n        console.log();\r\n        postApi(APIS.UNREAD_NOTIFICATION, { id });\r\n        navigationHandler(item?.type, item?.recordId);\r\n      }\r\n      return item;\r\n    });\r\n    setNotificationList(list);\r\n  };\r\n\r\n  return (\r\n    <Dropdown\r\n      renderTitle={<NotificationToggle content={count} className={className} />}\r\n      menuClass=\"p-0 min-w-[280px] md:min-w-[540px]\"\r\n      placement={larger.md ? \"bottom-end\" : \"bottom-center\"}\r\n      onOpen={fetchNotifications}\r\n    >\r\n      <Dropdown.Item variant=\"header\">\r\n        <div className=\"border-b border-gray-200 dark:border-gray-600 px-4 py-2 flex items-center justify-between\">\r\n          <h6>Notifications</h6>\r\n          <Tooltip title=\"Mark all as read\">\r\n            {/* <Button\r\n              variant=\"plain\"\r\n              shape=\"circle\"\r\n              size=\"sm\"\r\n              icon={<HiOutlineMailOpen className=\"text-xl\" />}\r\n              // onClick={onMarkAllAsRead}\r\n            /> */}\r\n          </Tooltip>\r\n        </div>\r\n      </Dropdown.Item>\r\n      <div\r\n        ref={listInnerRef}\r\n        onScroll={onScroll}\r\n        className={classNames(\"overflow-y-auto\", notificationHeight)}\r\n      >\r\n        {/* <ScrollBar direction={direction}> */}\r\n        {notificationList.length > 0 &&\r\n          notificationList.map((item, index) => (\r\n            <Dropdown.Item\r\n              key={item.id}\r\n              className={` relative flex px-4 py-4 cursor-pointer hover:bg-gray-50 active:bg-gray-100 dark:hover:bg-black dark:hover:bg-opacity-20  ${\r\n                !isLastChild(notificationList, index)\r\n                  ? \"border-b border-gray-200 dark:border-gray-600\"\r\n                  : \"\"\r\n              }`}\r\n              onClick={() => onMarkAsRead(item.id)}\r\n            >\r\n              {/* <div>{notificationTypeAvatar(item)}</div> */}\r\n              <div className=\"ltr:ml-3 rtl:mr-3 \">\r\n                <div>\r\n                  {item.title && (\r\n                    <div className=\"font-semibold heading-text\">\r\n                      {item.title}{\" \"}\r\n                    </div>\r\n                  )}\r\n                  <p>{item.body}</p>\r\n                </div>\r\n                <div className=\"text-xs\">\r\n                  {dayjs(item.createdAt).format(DATE_TIME_FORMAT)}\r\n                </div>\r\n              </div>\r\n              <Badge\r\n                className=\"absolute top-4 ltr:right-4 rtl:left-4 mt-1.5\"\r\n                innerClass={`${item.isRead === 1 ? \"bg-gray-300\" : bgTheme} `}\r\n              />\r\n            </Dropdown.Item>\r\n          ))}\r\n        {loading && (\r\n          <div\r\n            className={classNames(\r\n              \"flex items-center justify-center\",\r\n              notificationHeight\r\n            )}\r\n          >\r\n            <Spinner size={40} />\r\n          </div>\r\n        )}\r\n        {noResult && (\r\n          <div\r\n            className={classNames(\r\n              \"flex items-center justify-center\",\r\n              notificationHeight\r\n            )}\r\n          >\r\n            <div className=\"text-center\">\r\n              <img\r\n                className=\"mx-auto mb-2 max-w-[150px]\"\r\n                src=\"/img/others/no-notification.png\"\r\n                alt=\"no-notification\"\r\n              />\r\n              <h6 className=\"font-semibold\">No notifications!</h6>\r\n              <p className=\"mt-1\">Please Try again later</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {/* </ScrollBar> */}\r\n      </div>\r\n      {/* <Dropdown.Item variant=\"header\">\r\n        <div className=\"flex justify-center border-t border-gray-200 dark:border-gray-600 px-4 py-2\">\r\n          <Link\r\n            to=\"/app/account/activity-log\"\r\n            className=\"font-semibold cursor-pointer p-2 px-3 text-gray-600 hover:text-gray-900 dark:text-gray-200 dark:hover:text-white\"\r\n          >\r\n            View All Activity\r\n          </Link>\r\n        </div>\r\n      </Dropdown.Item> */}\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default withHeaderItem(Notification);\r\n","import React from 'react'\r\nimport classNames from 'classnames'\r\n\r\nconst withHeaderItem = Component => props => {\r\n\r\n\tconst { className, hoverable = true } = props\r\n\r\n\treturn (\r\n\t\t<Component \r\n\t\t\t{...props} \r\n\t\t\tclassName={\r\n\t\t\t\tclassNames(\r\n\t\t\t\t\t'header-action-item',\r\n\t\t\t\t\thoverable && 'header-action-item-hoverable',\r\n\t\t\t\t\tclassName\r\n\t\t\t\t)}  \r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default withHeaderItem\r\n","import { useEffect, useState } from 'react'\r\nimport { theme } from 'twin.macro'\r\n\r\nconst twBreakpoint = theme`screens`\r\n\r\nconst breakpointInt = (str = '') => {\r\n\treturn parseInt(str.replace('px',''))\r\n}\r\n\r\nconst breakpoint = {\r\n\t'2xl': breakpointInt(twBreakpoint['2xl']),  // 1536\r\n\txl: breakpointInt(twBreakpoint.xl), // 1280\r\n\tlg: breakpointInt(twBreakpoint.lg), // 1024\r\n\tmd: breakpointInt(twBreakpoint.md), // 768\r\n\tsm: breakpointInt(twBreakpoint.sm), // 640\r\n\txs: breakpointInt(twBreakpoint.xs), // 576\r\n}\r\n\r\nconst useResponsive = () => {\r\n\r\n\tconst getAllSizes = (comparator = 'smaller') => {\r\n\t\tconst currentWindowWidth = window.innerWidth\r\n\t\treturn Object.fromEntries(\r\n\t\t\tObject.entries(breakpoint).map(\r\n\t\t\t\t([key, value]) => [key, comparator === 'larger' ? (currentWindowWidth > value) : (currentWindowWidth < value)]\r\n\t\t\t)\r\n\t\t)\r\n\t}\r\n\r\n\tconst getResponsiveState = () => {\r\n\t\tconst currentWindowWidth = window.innerWidth\r\n\t\treturn { \r\n\t\t\twindowWidth: currentWindowWidth,\r\n\t\t\tlarger: getAllSizes('larger'),\r\n\t\t\tsmaller: getAllSizes('smaller')\r\n\t\t}\r\n\t}\r\n\r\n\tconst [responsive, setResponsive] = useState(getResponsiveState())\r\n\r\n\tconst resizeHandler = () => {\r\n\t\tconst responsiveState = getResponsiveState()\r\n\t\tsetResponsive(responsiveState)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('resize', resizeHandler)\r\n\t\treturn () => window.removeEventListener('resize', resizeHandler)\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [responsive.windowWidth])\r\n\r\n\treturn responsive\r\n}\r\n\r\nexport default useResponsive","import React from \"react\";\r\nimport { Button, DatePicker, Select } from \"components/ui\";\r\nimport { GrPowerReset } from \"react-icons/gr\";\r\nimport TableSearchBar from \"components/ui/TableSearchBar\";\r\nimport { getApi } from \"services/CommonService\";\r\nimport { APIS, LIST_DATA_API_TYPE } from \"constants/api.constant\";\r\nimport { debounce } from \"lodash\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport { DATE_FORMAT } from \"constants/app.constant\";\r\nimport moment from \"moment\";\r\nimport { SERVICE_ORDER_STATUS } from \"../serviceConstant\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst FilterSection = ({\r\n  setSearch,\r\n  filtervalue,\r\n  setFilterValue,\r\n  setFilterPatientId,\r\n  filterPatientId,\r\n  setFilterNalId,\r\n  filterNalId,\r\n  setFilterPhysicianId,\r\n  filterPhysicianId,\r\n  filterLcodeId,\r\n  setFilterLcodeId,\r\n  filterInsuranceId,\r\n  setFilterInsuranceId,\r\n  selectedDate,\r\n  setSelectedDate,\r\n  filterPatientDob,\r\n  setFilterPatientDob,\r\n  filterNad,\r\n  setFilterNad,\r\n}) => {\r\n\r\n  const savedHospitalId = localStorage.getItem(\"selectedHospitalId\");\r\n  const loadPatientsOption = (inputValue, resolve) => {\r\n    getApi(APIS.LIST_DATA, {\r\n      type: LIST_DATA_API_TYPE.PATIENTS,\r\n      companyId:savedHospitalId,\r\n      search: inputValue,\r\n    }).then((result) => {\r\n      resolve(result?.data?.data);\r\n    });\r\n  };\r\n\r\n  const loadNalOption = (inputValue, resolve) => {\r\n    getApi(APIS.LIST_DATA, {\r\n      type: LIST_DATA_API_TYPE.LOCATIONS,\r\n      companyId:savedHospitalId,\r\n      search: inputValue,\r\n    }).then((res) => {\r\n      // console.log(res); // Log the response to see available NAL options\r\n      resolve(res?.data?.data);\r\n    });\r\n  };\r\n\r\n  const loadPhysicianOption = (inputValue, resolve) => {\r\n    getApi(APIS.LIST_DATA, {\r\n      type: LIST_DATA_API_TYPE.PHYSICIANS,\r\n      companyId:savedHospitalId,\r\n      search: inputValue,\r\n    }).then((res) => {\r\n      console.log(\"nal\", res?.data); // Log the response to see available NAL options\r\n      resolve(res?.data?.data);\r\n    });\r\n  };\r\n\r\n  const loadLcodeOption = (inputValue, resolve) => {\r\n    getApi(APIS.LIST_DATA, {\r\n      type: LIST_DATA_API_TYPE.CODES,\r\n      companyId:savedHospitalId,\r\n      search: inputValue,\r\n    }).then((res) => {\r\n      console.log(\"lcode\", res.data.data);\r\n\r\n      const filteredData = res?.data?.data?.filter(item => item.type === 1);\r\n      // console.log(\"lcode\", filteredData);\r\n      resolve(filteredData);\r\n    });\r\n  };\r\n\r\n  const InsuranceOtpion = (inputValue, resolve) => {\r\n    getApi(APIS.LIST_DATA, {\r\n      type: LIST_DATA_API_TYPE.INSURANCES,\r\n      companyId:savedHospitalId,\r\n      search: inputValue\r\n    }).then((res) => {\r\n      console.log(res.data.data, \"result for insurance\")\r\n      const insuranceData = res?.data?.data\r\n      resolve(insuranceData)\r\n    })\r\n  }\r\n\r\n  const loadLcode = debounce(loadLcodeOption, 300);\r\n  const Insurance = debounce(InsuranceOtpion, 300);\r\n\r\n  const loadPhysician = debounce(loadPhysicianOption, 300);\r\n  const loadNal = debounce(loadNalOption, 300);\r\n  const loadStays = debounce(loadPatientsOption, 300);\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-3 gap-4 mb-5\">\r\n      {/* <TableSearchBar onChange={(query) => setSearch(query)} /> */}\r\n      <Select\r\n        autoComplete=\"off\"\r\n        placeholder=\"Filter by Insurance\"\r\n        defaultOptions\r\n        cacheOptions\r\n        size=\"sm\"\r\n        className=\"mb-4\"\r\n        value={filterInsuranceId}\r\n        loadOptions={Insurance}\r\n        componentAs={AsyncSelect}\r\n        getOptionLabel={(v) => `${v?.name || \"\"}`}\r\n        getOptionValue={(v) => v?._id}\r\n        onChange={(selectedInsurance) => {\r\n          setFilterInsuranceId(selectedInsurance || \"\");\r\n        }}\r\n      />\r\n      <Select\r\n        autoComplete=\"off\"\r\n        size=\"sm\"\r\n        className=\"mb-4 w-30\"\r\n        placeholder=\"Filter by Order Status\"\r\n        options={SERVICE_ORDER_STATUS}\r\n        value={filtervalue}\r\n        onChange={(selectedValue) => {\r\n          setFilterValue(selectedValue);\r\n        }}\r\n      />\r\n\r\n      <Select\r\n        autoComplete=\"off\"\r\n        placeholder=\"Filter by Patient (Name, Phone, ID)\"\r\n        defaultOptions\r\n        cacheOptions\r\n        size=\"sm\"\r\n        className=\"mb-4\"\r\n        value={filterPatientId}\r\n        loadOptions={loadStays}\r\n        componentAs={AsyncSelect}\r\n        getOptionLabel={(v) =>\r\n          `${v?.firstName} ${v?.lastName ? v?.lastName : \"\"} ${v?.patientNo ? `(${v?.patientNo})` : \"\"\r\n          } ${v?.dob ? `(${moment(v?.dob).format(DATE_FORMAT)})` : \"\"}`\r\n        }\r\n        getOptionValue={(v) => v?._id}\r\n        onChange={(event) => {\r\n          setFilterPatientId(event);\r\n        }}\r\n      />\r\n\r\n      <Select\r\n        autoComplete=\"off\"\r\n        placeholder=\"Filter by NAL\"\r\n        defaultOptions\r\n        cacheOptions\r\n        size=\"sm\"\r\n        className=\"mb-4\"\r\n        value={filterNalId}\r\n        loadOptions={loadNal}\r\n        componentAs={AsyncSelect}\r\n        getOptionLabel={(v) => `${v?.name || \"\"}`}\r\n        getOptionValue={(v) => v?._id}\r\n        onChange={(selectedNal) => {\r\n          setFilterNalId(selectedNal);\r\n        }}\r\n      />\r\n\r\n      <Select\r\n        autoComplete=\"off\"\r\n        placeholder=\"Filter by Referring Physician\"\r\n        defaultOptions\r\n        cacheOptions\r\n        size=\"sm\"\r\n        className=\"mb-4\"\r\n        value={filterPhysicianId}\r\n        loadOptions={loadPhysician}\r\n        componentAs={AsyncSelect}\r\n        getOptionLabel={(v) => `${v?.name || \"\"}`}\r\n        getOptionValue={(v) => v?._id}\r\n        onChange={(selectedPhysician) => {\r\n          setFilterPhysicianId(selectedPhysician);\r\n        }}\r\n      />\r\n\r\n      <Select\r\n        autoComplete=\"off\"\r\n        placeholder=\"Filter by LCode\"\r\n        defaultOptions\r\n        cacheOptions\r\n        size=\"sm\"\r\n        className=\"mb-4\"\r\n        value={filterLcodeId}\r\n        loadOptions={loadLcode}\r\n        componentAs={AsyncSelect}\r\n        getOptionLabel={(v) => `${v?.code || \"\"}`}\r\n        getOptionValue={(v) => v?._id}\r\n        onChange={(selectedLcode) => {\r\n          setFilterLcodeId(selectedLcode || \"\");\r\n        }}\r\n      />\r\n\r\n      <DatePicker\r\n        inputtable\r\n        clearable={false}\r\n        className=\"\"\r\n        placeholder={`Filter by Patient DOB ${DATE_FORMAT}`}\r\n        size=\"sm\"\r\n        name=\"patientDob\"\r\n        inputFormat={DATE_FORMAT}\r\n        maxDate={new Date()}\r\n        value={filterPatientDob}\r\n        onChange={(date) =>\r\n          setFilterPatientDob(moment(date).format(DATE_FORMAT))\r\n        }\r\n      />\r\n\r\n      <DatePicker\r\n        clearable={false}\r\n        className=\"\"\r\n        placeholder=\"Order Start Date\"\r\n        size=\"sm\"\r\n        name=\"startDate\"\r\n        inputFormat={DATE_FORMAT}\r\n        maxDate={\r\n          selectedDate?.endDate ? new Date(selectedDate?.endDate) : new Date()\r\n        }\r\n        value={selectedDate?.startDate}\r\n        onChange={(date) =>\r\n          setSelectedDate({\r\n            ...selectedDate,\r\n            startDate: moment(date).format(DATE_FORMAT),\r\n          })\r\n        }\r\n      />\r\n      <DatePicker\r\n        clearable={false}\r\n        name=\"endDate\"\r\n        className=\"\"\r\n        placeholder=\"Order End Date\"\r\n        size=\"sm\"\r\n        inputFormat={DATE_FORMAT}\r\n        minDate={\r\n          selectedDate?.startDate ? new Date(selectedDate?.startDate) : null\r\n        }\r\n        maxDate={new Date()}\r\n        value={selectedDate?.endDate}\r\n        onChange={(date) =>\r\n          setSelectedDate({\r\n            ...selectedDate,\r\n            endDate: moment(date).format(DATE_FORMAT),\r\n          })\r\n        }\r\n      />\r\n      <DatePicker\r\n        inputtable\r\n        clearable={false}\r\n        className=\"\"\r\n        placeholder=\"Filter By NAD\"\r\n        size=\"sm\"\r\n        name=\"nad\"\r\n        inputFormat={DATE_FORMAT}\r\n        value={filterNad}\r\n        onChange={(date) => setFilterNad(moment(date).format(DATE_FORMAT))}\r\n      />\r\n      <Button\r\n        size=\"sm\"\r\n        onClick={() => {\r\n          setFilterPatientDob(null);\r\n          setFilterValue(\"\");\r\n          setFilterPatientId(\"\");\r\n          setSelectedDate({ startDate: null, endDate: null });\r\n          setFilterNad(null);\r\n          setFilterNalId(\"\");\r\n          setFilterPhysicianId(\"\");\r\n          setFilterLcodeId(\"\");\r\n          setFilterInsuranceId(\"\");\r\n          navigate(\"/app/orderManagement/service-order\");\r\n        }}\r\n        icon={<GrPowerReset />}\r\n      >\r\n        Reset\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Header = ({\r\n  setSearch,\r\n  buttonMenu,\r\n  buttonClick,\r\n  filtervalue,\r\n  setFilterValue,\r\n  setFilterPatientId,\r\n  filterPatientId,\r\n  selectedDate,\r\n  setSelectedDate,\r\n  filterPatientDob,\r\n  setFilterPatientDob,\r\n  filterNad,\r\n  setFilterNad,\r\n  filterNalId,\r\n  setFilterNalId,\r\n  setFilterPhysicianId,\r\n  filterPhysicianId,\r\n  filterLcodeId,\r\n  setFilterLcodeId,\r\n  filterInsuranceId,\r\n  setFilterInsuranceId,\r\n}) => {\r\n  const ButtonSection = ({ buttonClick, buttonMenu }) => {\r\n    return (\r\n      <div className=\"mb-4 \">\r\n        {buttonMenu?.map((btn, i) => (\r\n          <Button\r\n            key={i}\r\n            size=\"sm\"\r\n            variant=\"solid\"\r\n            onClick={(e) => buttonClick(e, btn.key)}\r\n            style={{ marginLeft: \"5px\" }} z\r\n            icon={btn.icon}\r\n          >\r\n            {btn.label}\r\n          </Button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"md:flex items-center justify-end\">\r\n        <ButtonSection buttonMenu={buttonMenu} buttonClick={buttonClick} />\r\n      </div>\r\n      <div className=\"items-center lg:flex\">\r\n        <FilterSection\r\n          selectedDate={selectedDate}\r\n          setSelectedDate={setSelectedDate}\r\n          setFilterPatientDob={setFilterPatientDob}\r\n          filterPatientDob={filterPatientDob}\r\n          setSearch={setSearch}\r\n          setFilterValue={setFilterValue}\r\n          filtervalue={filtervalue}\r\n          setFilterPatientId={setFilterPatientId}\r\n          filterPatientId={filterPatientId}\r\n          setFilterNad={setFilterNad}\r\n          filterNad={filterNad}\r\n          setFilterNalId={setFilterNalId}\r\n          filterNalId={filterNalId}\r\n          filterPhysicianId={filterPhysicianId}\r\n          setFilterPhysicianId={setFilterPhysicianId}\r\n          filterLcodeId={filterLcodeId}\r\n          filterInsuranceId={filterInsuranceId}\r\n          setFilterLcodeId={setFilterLcodeId}\r\n          setFilterInsuranceId={setFilterInsuranceId}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { DatePicker } from \"components/ui\";\r\nimport { FormItem, Input, TimeInput } from \"components/ui\";\r\nimport { Field } from \"formik\";\r\nimport { StickyFooter } from \"components/shared\";\r\nimport { Button, FormContainer } from \"components/ui\";\r\nimport { AiOutlineSave } from \"react-icons/ai\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Datetime from \"react-datetime\";\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport { DATE_FORMAT } from \"constants/app.constant\";\r\n\r\n////// YUP VALIDATION //////\r\n\r\nconst AppoinmentSchema = Yup.object().shape({\r\n  appointmentDate: Yup.string().required(\"Required\"),\r\n  appointmentTime: Yup.string().required(\"Required\"),\r\n  appointmentAddress: Yup.string().required(\"Required\"),\r\n});\r\n\r\n///// INITIAL VALUES //////\r\n\r\nconst CalendorSection = ({ onSubmit, selectedData }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        appointmentDate:\r\n          selectedData?.appointmentDate !== null\r\n            ? new Date(selectedData?.appointmentDate)\r\n            : \"\",\r\n        appointmentTime:\r\n          selectedData?.appointmentTime !== null\r\n            ? new Date(selectedData?.appointmentTime)\r\n            : \"\",\r\n        appointmentAddress:\r\n          selectedData?.appointmentAddress !== null\r\n            ? selectedData?.appointmentAddress\r\n            : \"\",\r\n      }}\r\n      validationSchema={AppoinmentSchema}\r\n      onSubmit={onSubmit}\r\n      enableReinitialize\r\n    >\r\n      {({ errors, touched, values, isSubmitting, setFieldValue }) => (\r\n        <Form className=\"p-5\">\r\n          <FormContainer>\r\n            <FormItem\r\n              label=\"Appointment Date\"\r\n              invalid={errors?.appointmentDate && touched?.appointmentDate}\r\n              errorMessage={errors?.appointmentDate}\r\n            >\r\n              <DatePicker\r\n                value={values?.appointmentDate}\r\n                inputFormat={DATE_FORMAT}\r\n                name=\"appointmentDate\"\r\n                placeholder=\"Select appointment date\"\r\n                onChange={(date) => {\r\n                  setFieldValue(\"appointmentDate\", date);\r\n                }}\r\n              />\r\n            </FormItem>\r\n            <FormItem\r\n              label=\"Appointment Time\"\r\n              invalid={errors?.appointmentTime && touched?.appointmentTime}\r\n              errorMessage={errors?.appointmentTime}\r\n            >\r\n              <Datetime\r\n                onChange={(currentDate) => {\r\n                  if (!currentDate._isValid) {\r\n                  } else {\r\n                    setFieldValue(\"appointmentTime\", currentDate);\r\n                  }\r\n                }}\r\n                value={new Date(values?.appointmentTime)}\r\n                dateFormat={false}\r\n                timeFormat={\"hh:mm  A\"}\r\n                inputProps={{\r\n                  placeholder: \"Enter time\",\r\n                  style: {\r\n                    width: \"100%\",\r\n                    borderWidth: \"1px\",\r\n                    height: \"2.75rem\",\r\n                    borderRadius: \"0.375rem\",\r\n                    padding: \"0.5rem 0.75rem\",\r\n                  },\r\n                }}\r\n              />\r\n            </FormItem>\r\n            <FormItem\r\n              label=\"Appointment Address\"\r\n              invalid={\r\n                errors?.appointmentAddress && touched?.appointmentAddress\r\n              }\r\n              errorMessage={errors?.appointmentAddress}\r\n            >\r\n              <Field\r\n                textArea={true}\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                name=\"appointmentAddress\"\r\n                placeholder=\"Enter appointment address\"\r\n                component={Input}\r\n              />\r\n            </FormItem>\r\n\r\n            <StickyFooter\r\n              className=\"-mx-8 px-8 flex items-center justify-between py-4\"\r\n              stickyClass=\"border-t bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\"\r\n            >\r\n              <div></div>\r\n              <div className=\"md:flex items-center\">\r\n                <Button\r\n                  size=\"sm\"\r\n                  variant=\"solid\"\r\n                  loading={isSubmitting}\r\n                  type=\"submit\"\r\n                  icon={<AiOutlineSave />}\r\n                >\r\n                  Set Appoinment\r\n                </Button>\r\n              </div>\r\n            </StickyFooter>\r\n          </FormContainer>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default CalendorSection;\r\n","import React from \"react\";\r\nimport { IMAGES } from \"../../../../../assets/icon\";\r\nimport { Tooltip } from \"components/ui\";\r\n\r\nconst DOCUMENT_CONSTANT = [\r\n  { label: \"Prescription\", value: 1 },\r\n  { label: \"Letter of Medical Necessity\", value: 2 },\r\n  { label: \"Insurance verification\", value: 3 },\r\n  { label: \"Insurance authorization\", value: 4 },\r\n  { label: \"Delivery Receipt\", value: 5 },\r\n];\r\n\r\nconst DownloadSection = ({ onSubmit, selectedData }) => {\r\n  return (\r\n    <div className=\"px-5 py-2.5\">\r\n      <div className=\"text-base font-bold mb-4\">\r\n        Selected Patient:{\" \"}\r\n        <span className=\"text-blue-900\">{`${selectedData?.patientId?.firstName} ${selectedData?.patientId?.lastName} (${selectedData?.patientId?.patientNo})`}</span>\r\n      </div>\r\n      {DOCUMENT_CONSTANT.map((item, i) => {\r\n        return (\r\n          <div\r\n            key={i}\r\n            className=\"my-2.5 w-7/12 flex justify-between font-bold text-blue-900 text-base\"\r\n          >\r\n            <div>\r\n              {i + 1}. {\"  \"}\r\n              {item?.label}\r\n            </div>\r\n            <Tooltip key={i} title={\"Download\"} visible={true}>\r\n              <img\r\n                src={IMAGES.DOWNLOAD_PDF}\r\n                alt=\"donwload Icon\"\r\n                style={{ maxWidth: \"20px\" }}\r\n                className=\"cursor-pointer mx-0.5\"\r\n                onClick={() => onSubmit(\"onDownload\")}\r\n              />\r\n            </Tooltip>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownloadSection;\r\n","import React from \"react\";\r\nimport { DatePicker } from \"components/ui\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport { Select, FormItem, Input } from \"components/ui\";\r\nimport { Field } from \"formik\";\r\nimport { AdaptableCard, StickyFooter } from \"components/shared\";\r\nimport { Button, FormContainer, toast, Notification } from \"components/ui\";\r\nimport { AiOutlineSave, AiOutlineCloseCircle } from \"react-icons/ai\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { STATUS_OPTIONS } from \"constants/app.constant\";\r\n\r\n////// YUP VALIDATION //////\r\n\r\nconst InsuranceSectionSchema = Yup.object().shape({\r\n  insuranceStatus: Yup.object().required(\"Required\"),\r\n  insuranceAmount: Yup.number().required(\"Required\"),\r\n  insuranceNotes: Yup.string().required(\"Required\"),\r\n});\r\n\r\nconst InsuranceSection = ({ onSubmit, selectedData }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        insuranceStatus:\r\n          selectedData?.insuranceStatus !== null\r\n            ? STATUS_OPTIONS.find(\r\n                (obj, i) => obj.value === selectedData?.insuranceStatus\r\n              )\r\n            : \"\",\r\n        insuranceAmount:\r\n          selectedData?.insuranceAmount !== null\r\n            ? selectedData?.insuranceAmount\r\n            : \"\",\r\n        insuranceNotes:\r\n          selectedData?.insuranceNotes !== null\r\n            ? selectedData?.insuranceNotes\r\n            : \"\",\r\n      }}\r\n      validationSchema={InsuranceSectionSchema}\r\n      onSubmit={onSubmit}\r\n      enableReinitialize\r\n    >\r\n      {({ errors, touched, values, isSubmitting, setFieldValue }) => (\r\n        <Form className=\"p-5\">\r\n          <FormContainer>\r\n            <FormItem\r\n              label=\"Insurance Status\"\r\n              invalid={errors?.insuranceStatus && touched?.insuranceStatus}\r\n              errorMessage={errors?.insuranceStatus}\r\n            >\r\n              <Field\r\n                component={Select}\r\n                autoComplete=\"off\"\r\n                placeholder=\"Select Status\"\r\n                defaultOptions\r\n                cacheOptions\r\n                options={STATUS_OPTIONS}\r\n                getOptionLabel={(v) => v?.label}\r\n                getOptionValue={(v) => v?.value}\r\n                onChange={(event) => setFieldValue(\"insuranceStatus\", event)}\r\n                name=\"insuranceStatus\"\r\n                value={values?.insuranceStatus}\r\n              />\r\n            </FormItem>\r\n            <FormItem\r\n              label=\"Insurance Amount in ($) (If Approved)\"\r\n              invalid={errors?.insuranceAmount && touched?.insuranceAmount}\r\n              errorMessage={errors?.insuranceAmount}\r\n            >\r\n              <Field\r\n                textArea={false}\r\n                type=\"number\"\r\n                autoComplete=\"off\"\r\n                name=\"insuranceAmount\"\r\n                placeholder=\"Enter Amount\"\r\n                component={Input}\r\n              />\r\n            </FormItem>\r\n            <FormItem\r\n              label=\"Remarks\"\r\n              invalid={errors?.insuranceNotes && touched?.insuranceNotes}\r\n              errorMessage={errors?.insuranceNotes}\r\n            >\r\n              <Field\r\n                textArea={true}\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                name=\"insuranceNotes\"\r\n                placeholder=\"Enter Remarks\"\r\n                component={Input}\r\n              />\r\n            </FormItem>\r\n\r\n            <StickyFooter\r\n              className=\"-mx-8 px-8 flex items-center justify-between py-4\"\r\n              stickyClass=\"border-t bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\"\r\n            >\r\n              <div></div>\r\n              <div className=\"md:flex items-center\">\r\n                <Button\r\n                  size=\"sm\"\r\n                  variant=\"solid\"\r\n                  loading={isSubmitting}\r\n                  icon={<AiOutlineSave />}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </StickyFooter>\r\n          </FormContainer>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default InsuranceSection;\r\n","import React, { useState } from \"react\";\r\nimport { Select, FormItem, Input,} from \"components/ui\";\r\nimport { Field } from \"formik\";\r\nimport { StickyFooter } from \"components/shared\";\r\nimport { Button, FormContainer } from \"components/ui\";\r\nimport { AiOutlineSave } from \"react-icons/ai\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { SERVICE_ORDER_STATUS, loadLocations } from \"../../serviceConstant\";\r\nimport AsyncSelect from \"react-select/async\";\r\n\r\n///// INITIAL VALUES //////\r\n\r\nconst StatusChange = ({ onSubmit, selectedData }) => {\r\n  const [showLocation, setShowLocation] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          orderStatus: selectedData?.orderStatus,\r\n          id: selectedData?.id,\r\n          name: \"\",\r\n          location: selectedData?.location || \"\"\r\n        }}\r\n        onSubmit={onSubmit}\r\n        enableReinitialize\r\n      >\r\n        {({ errors, touched, values, isSubmitting, setFieldValue }) => (\r\n          <Form className=\"p-5\">\r\n            <FormContainer>\r\n              <FormItem label=\"Order Status\">\r\n                <Field\r\n                  component={Select}\r\n                  autoComplete=\"off\"\r\n                  name=\"orderStatus\"\r\n                  value={SERVICE_ORDER_STATUS.find(\r\n                    (obj, i) => obj.value === values?.orderStatus\r\n                  )}\r\n                  placeholder=\"Select Status\"\r\n                  options={SERVICE_ORDER_STATUS}\r\n                  defaultOptions\r\n                  onChange={(selectedValue) => {\r\n                    setFieldValue(\"orderStatus\", selectedValue);\r\n                    if(selectedValue.value==12){\r\n                      setShowLocation(true);\r\n                    }\r\n                    else{\r\n                      setShowLocation(false);\r\n                    }\r\n                  }}\r\n                  cacheOptions\r\n                />\r\n              </FormItem>\r\n              \r\n              \r\n              <FormItem\r\n                  label=\"Add Comment\"\r\n                  invalid={errors?.name && touched?.name}\r\n                  errorMessage={errors?.name}\r\n                >\r\n                  <Field\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    component={Input}\r\n                  />\r\n              </FormItem>\r\n              \r\n              {showLocation && (\r\n                <FormItem\r\n                  label=\"Location\"\r\n                  invalid={errors?.location && touched?.location}\r\n                  errorMessage={errors?.location}\r\n                >\r\n                  <Field name=\"location\">\r\n                    {({ field, form }) => (\r\n                      <AsyncSelect\r\n                        cacheOptions\r\n                        defaultOptions\r\n                        loadOptions={loadLocations}\r\n                        placeholder=\"Select Location\"\r\n                        value={field.value}\r\n                        onChange={(selectedOption) => form.setFieldValue(\"location\", selectedOption)}\r\n                        getOptionLabel={option => option.label}\r\n                        getOptionValue={option => option.value}\r\n                      />\r\n                    )}\r\n                  </Field>\r\n                </FormItem>\r\n              )}\r\n              \r\n              <StickyFooter\r\n                className=\"-mx-8 px-8 flex items-center justify-between py-4\"\r\n                stickyClass=\"border-t bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\"\r\n              >\r\n                <div></div>\r\n                <div className=\"md:flex items-center\">\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"solid\"\r\n                    loading={isSubmitting}\r\n                    icon={<AiOutlineSave />}\r\n                    type=\"submit\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </StickyFooter>\r\n            </FormContainer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StatusChange;\r\n","import React, { useEffect, useState } from \"react\";\nimport CalendorSection from \"./calendorSection\";\nimport DownloadSection from \"./downloadSection\";\nimport InsuranceSection from \"./insuranceSection\";\nimport StatusChange from \"./statusChange\";\nimport { PAGE_KEY, MODAL_HEADER } from \"../serviceConstant\";\nimport { postApi } from \"services/CommonService\";\nimport { APIS } from \"constants/api.constant\";\nimport { Notification, toast } from \"components/ui\";\nimport { UPDATE_TOAST } from \"constants/app.constant\";\n\nconst Confirmation = ({ selectedKey, selectedData, closeDialog }) => {\n  const [dialogHeader, setDialogHeader] = useState();\n  const onSubmit = (payload) => {\n    if (selectedKey === PAGE_KEY.STATUS_CHANGE) {\n      console.log(\"Payload checkiinggg\",payload)\n      payload.orderStatus = payload?.orderStatus?.value;\n\n      const formData = new FormData();\n\n      const lcodeQuantities = [];\n      const lcodeIds = [];\n\n      selectedData.prescriptions.forEach((prescription) => {\n        lcodeQuantities.push(prescription.quantity);\n        lcodeIds.push(prescription.lCode._id);\n      });\n\n      formData.append(\"lcodeQuantity\", JSON.stringify(lcodeQuantities));\n      formData.append(\"lcodeId\", JSON.stringify(lcodeIds));\n\n      formData.append(\"id\", selectedData?._id);\n      formData.append(\"orderStatus\", payload?.orderStatus);\n      formData.append(\"NALId\", selectedData?.appointmentLocationId?._id)\n      formData.append(\"addComment\", payload?.name);\n      postApi(APIS.ADD_EDIT_PRESCRIPTION, formData).then((res) => {\n        toast.push(<Notification type=\"success\">{UPDATE_TOAST}</Notification>);\n        closeDialog();\n      });\n    }\n    if (selectedKey === PAGE_KEY.CALENDOR) {\n      postApi(APIS.ADD_EDIT_SERVICE_ORDER, {\n        ...payload,\n        id: selectedData?._id,\n      }).then((res) => {\n        toast.push(<Notification type=\"success\">{UPDATE_TOAST}</Notification>);\n        closeDialog();\n      });\n    }\n    if (selectedKey === PAGE_KEY.INSURANCE) {\n      payload.insuranceStatus = payload?.insuranceStatus?.value;\n      postApi(APIS.ADD_EDIT_SERVICE_ORDER, {\n        ...payload,\n        id: selectedData?.id,\n      }).then((res) => {\n        toast.push(<Notification type=\"success\">{UPDATE_TOAST}</Notification>);\n        closeDialog();\n      });\n    }\n  };\n\n  useEffect(() => {\n    setDialogHeader(MODAL_HEADER[selectedKey]);\n  }, [selectedKey]);\n\n  \n\n  return (\n\n    <div style={{ minHeight: \"250px\" }}>\n      <div className=\"text-base font-bold pl-5\">{dialogHeader}</div>\n      {selectedKey === PAGE_KEY.CALENDOR && (\n        <CalendorSection onSubmit={onSubmit} selectedData={selectedData} />\n      )}\n      {selectedKey === PAGE_KEY.DOWNLOAD && (\n        <DownloadSection onSubmit={onSubmit} selectedData={selectedData} />\n      )}\n      {selectedKey === PAGE_KEY.INSURANCE && (\n        <InsuranceSection onSubmit={onSubmit} selectedData={selectedData} />\n      )}\n      {selectedKey === PAGE_KEY.STATUS_CHANGE && (\n        <StatusChange onSubmit={onSubmit} selectedData={selectedData} />\n      )}\n\n    </div>\n\n\n  );\n};\nexport default Confirmation;\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./header\";\r\nimport appConfig from \"configs/app.config\";\r\nimport { AdaptableCard, DataTable } from \"components/shared\";\r\n\r\n// import useThemeClass from \"utils/hooks/useThemeClass\";\r\n\r\nimport { getApi, postApi } from \"services/CommonService\";\r\nimport { APIS, LIST_DATA_API_TYPE } from \"constants/api.constant\";\r\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\r\nimport { Dialog, Tag, toast } from \"components/ui\";\r\nimport Confirmation from \"./confirmation\";\r\nimport {\r\n  PAGE_KEY,\r\n  SERVICE_ORDER_STATUS,\r\n  SEGMENT_CONSTANT,\r\n} from \"./serviceConstant\";\r\nimport dayjs from \"dayjs\";\r\nimport utc from \"dayjs/plugin/utc\";\r\nimport timezone from \"dayjs/plugin/timezone\";\r\nimport { FaPen, FaDownload, FaEye } from \"react-icons/fa\";\r\n// import { Tooltip } from \"components/ui\";\r\nimport {\r\n  CONFIRMATION_OBJ,\r\n  DATE_FORMAT,\r\n  DATE_TIME_FORMAT,\r\n  DELETE_TOAST,\r\n  TABLE_ACTION_KEYS,\r\n} from \"constants/app.constant\";\r\nimport ExportContent from \"components/custom/exportContent\";\r\nimport { IMAGES } from \"assets/icon\";\r\nimport ActionColumn from \"components/custom/actionColumn\";\r\nimport hasPermisson, {\r\n  ACCESS,\r\n  MODULE,\r\n} from \"utils/hasPermission\";\r\nimport { AiOutlineFile, AiFillFileAdd, AiFillDelete } from \"react-icons/ai\";\r\nimport ConfirmationContent from \"components/custom/ConfirmationContent\";\r\nimport Notification from \"components/template/Notification\";\r\n\r\nconst ACTION_CONSTANT = [\r\n  { label: <FaPen />, key: PAGE_KEY.VIEW, toolTip: \"View/Edit\", show: () => hasPermisson(MODULE.SERVICEORDER, ACCESS.WRITE) },\r\n  // { label: <FaDownload />, key: PAGE_KEY.DOWNLOAD, toolTip: \"Download Forms\", show: () => hasPermisson(MODULE.SERVICEORDER, ACCESS.READ) },\r\n  {\r\n    label: IMAGES.EXPORT,\r\n    key: PAGE_KEY.MEDICAL_NECESSITY,\r\n    isImage: true,\r\n    toolTip: \"Medical Necessity\",\r\n    show: () => hasPermisson(MODULE.SERVICEORDER, ACCESS.READ),\r\n  },\r\n  {\r\n    label: IMAGES.RECEIPT,\r\n    key: PAGE_KEY.DELIVERY_RECEIPT,\r\n    isImage: true,\r\n    toolTip: \"Delivery Receipt\",\r\n    show: () => hasPermisson(MODULE.SERVICEORDER, ACCESS.READ),\r\n    \r\n  },\r\n  {\r\n    label: <AiFillDelete style={{ fontSize: \"1rem\" }} />,\r\n    key: PAGE_KEY.DELETE,\r\n    toolTip: \"Delete\",\r\n    show: () => hasPermisson(MODULE.SERVICEORDER, ACCESS.DELETE),\r\n  },\r\n];\r\n\r\nconst STATUS_ACTION = [\r\n  { label: <FaEye />, key: PAGE_KEY.STATUS_VIEW, toolTip: \"View\", show: () => hasPermisson(MODULE.SERVICEORDER, ACCESS.READ) },\r\n]\r\n\r\nconst BUTTON_CONSTANT = [\r\n  {\r\n    label: \"Export Excel\",\r\n    key: TABLE_ACTION_KEYS.EXPORT,\r\n    icon: <AiOutlineFile />,\r\n    show: () => hasPermisson(MODULE.SERVICEORDER, ACCESS.READ),\r\n  },\r\n  {\r\n    label: \"Update Excel\",\r\n    key: TABLE_ACTION_KEYS.IMPORT,\r\n    icon: <AiOutlineFile />,\r\n    show: () => hasPermisson(MODULE.SERVICEORDER, ACCESS.READ),\r\n  },\r\n  {\r\n    label: \"Add Prescription\",\r\n    key: TABLE_ACTION_KEYS.ADD,\r\n    icon: <AiFillFileAdd />,\r\n    // show: () => hasPermisson(MODULE.SERVICEORDER, ACCESS.WRITE),\r\n  },\r\n];\r\n\r\nconst ServiceOrder = () => {\r\n  const savedHospitalId = localStorage.getItem(\"selectedHospitalId\");\r\n  const location = useLocation();\r\n\r\n  const { id } = useParams();\r\n  const [tabledata, setTableData] = useState([]);\r\n  //const [filterParams, setFilterParams] = useState(initialFilters);\r\n  const [loading, setLoading] = useState(true);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [selectedKey, setSelectedKey] = useState(\"\");\r\n  const [filtervalue, setFilterValue] = useState(\"\");\r\n  const [selectedDate, setSelectedDate] = useState({\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n  \r\n  const [filterPatientId, setFilterPatientId] = useState(\"\");\r\n\r\n  const [filterPatientDob, setFilterPatientDob] = useState(\"\");\r\n  const [filterNad, setFilterNad] = useState(\"\");\r\n  const [filterNalId, setFilterNalId] = useState(\"\");\r\n  const [filterCompanyId, setFilterCompanyId] = useState(\"\");\r\n  const [filterPhysicianId, setFilterPhysicianId] = useState(\"\");\r\n  const [filterLcodeId, setFilterLcodeId] = useState(\"\");\r\n  const [filterInsuranceId, setFilterInsuranceId] = useState(\"\");\r\n  const [selectedData, setSelectedData] = useState(\"\");\r\n  const [payload, setPayload] = useState(\"\");\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [openExportModal, setOpenExportModal] = useState(false);\r\n  const [openImportModal, setOpenImportModal] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null); // State to store the selected file\r\n  const navigate = useNavigate();\r\n  \r\n\r\n  dayjs.extend(utc);\r\n  dayjs.extend(timezone);\r\n  \r\n  useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    console.log(\"params\",window.location.search);\r\n    const physicianId = JSON.parse(params.get(\"physicianId\"));\r\n    const insuranceId = JSON.parse(params.get(\"insuranceId\"));\r\n    const lcodeId = JSON.parse(params.get(\"lcodeId\"));\r\n    const patientDob = params.get(\"patientDob\");\r\n    const nal = JSON.parse(params.get(\"nal\"));\r\n    const orderStatus = JSON.parse(params.get(\"orderStatus\"));\r\n    const nad = params.get(\"nad\");\r\n    const PatientId = JSON.parse(params.get(\"PatientId\"));\r\n    console.log(orderStatus);\r\n    setFilterPhysicianId(physicianId);\r\n    setFilterPatientDob(patientDob);\r\n    setFilterLcodeId(lcodeId);\r\n    setFilterInsuranceId(insuranceId);\r\n    setFilterNalId(nal);\r\n    setFilterValue(orderStatus);\r\n    setFilterNad(nad);\r\n    setFilterPatientId(PatientId);\r\n  }, [location.search]);\r\n  console.log(\"filterPatientId\",filterPatientId);\r\n  useEffect(() => {\r\n    if (id) {\r\n      console.log(\"getting id from params \", id);\r\n\r\n      getApi(APIS.LIST_DATA, { type: LIST_DATA_API_TYPE.PATIENTS, id, companyId:savedHospitalId }).then(\r\n        (result) => {\r\n          console.log(\"get order status\", result)\r\n          setFilterPatientId(result?.data?.data);\r\n        }\r\n      );\r\n    }\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   var companyId;\r\n  //   if (filterCompanyId && filterCompanyId._id) {\r\n  //     companyId = filterCompanyId._id;\r\n  //   } else {\r\n  //     companyId = savedHospitalId;\r\n  //   }\r\n  // },[filterCompanyId])\r\n\r\n  useEffect(() => {\r\n    const payload = {\r\n      limit,\r\n      search,\r\n      // companyId: typeof filterCompanyId === \"object\" && filterCompanyId !== null \r\n      // ? filterCompanyId._id \r\n      // : savedHospitalId,\r\n      companyId: filterCompanyId?._id ?? savedHospitalId,\r\n      nalId: filterNalId?._id,\r\n      // companyId: filterCompanyId._id,\r\n      patientId:filterPatientId?._id,\r\n      physicianId: filterPhysicianId?._id,\r\n      lcodeId: filterLcodeId?._id,\r\n      insuranceId: filterInsuranceId?._id,\r\n      skip: limit * (page - 1),\r\n    };\r\n    console.log(payload)\r\n    setPayload(payload);\r\n    \r\n    if (filterPatientDob && filterPatientDob !== \"\") payload.patientDob = filterPatientDob\r\n\r\n    if (filtervalue && filtervalue?.value) payload.status = filtervalue?.value;\r\n\r\n    if (selectedDate?.startDate && selectedDate?.endDate) {\r\n      payload.startDate = selectedDate?.startDate;\r\n      payload.endDate = selectedDate?.endDate;\r\n    }\r\n\r\n    if (filterNad && filterNad !== \"\") payload.nad = filterNad\r\n\r\n    getApi(APIS.GET_SERVICE_ORDER, payload)\r\n      .then((res) => {\r\n        console.log(\"orderStatus get\", res)\r\n        setTableData(res?.data?.data);\r\n        setTotalCount(res?.data?.count);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [\r\n    search,\r\n    page,\r\n    limit,\r\n    filtervalue,\r\n    filterPatientId,\r\n    filterNalId,\r\n    filterCompanyId,\r\n    filterPhysicianId,\r\n    filterLcodeId,\r\n    filterInsuranceId,\r\n    refresh,\r\n    selectedDate,\r\n    filterPatientDob,\r\n    filterNad\r\n  ]);\r\n\r\n  console.log(\"SelectedDate\",selectedDate);\r\n  const onActionHandle = (e, value, row) => {\r\n    e.preventDefault();\r\n    if (value === PAGE_KEY.VIEW) {\r\n      const queryParams = new URLSearchParams({\r\n        physicianId: JSON.stringify(filterPhysicianId) || \"\",\r\n        patientDob: filterPatientDob || \"\",\r\n        lcodeId: JSON.stringify(filterLcodeId) || \"\",\r\n        insuranceId: JSON.stringify(filterInsuranceId) || \"\",\r\n        nal: JSON.stringify(filterNalId) || \"\",\r\n        orderStatus: JSON.stringify(filtervalue) || \"\",\r\n        nad: filterNad || \"\",   \r\n        PatientId: JSON.stringify(filterPatientId) || \"\"  \r\n      }).toString();\r\n      navigate(`/app/service-order/edit/${row?._id}?${queryParams}`);\r\n    } else if (value === PAGE_KEY.DELIVERY_RECEIPT) {\r\n       window.open(`/app/orderManagement/delivery-receipt/${row?._id}`, '_blank', 'noopener,noreferrer');\r\n    } else if (value === PAGE_KEY.MEDICAL_NECESSITY) {\r\n      window.open(`/app/orderManagement/medical-necessity/${row?._id}`,'_blank','noopener,noreferrer');\r\n    } else {\r\n      setOpenModal(true);\r\n      setSelectedKey(value);\r\n      setSelectedData(row);\r\n    }\r\n  };\r\n\r\n  const onDialogClose = () => {\r\n    setSelectedKey(\"\");\r\n    setOpenModal(false);\r\n    setRefresh(!refresh);\r\n    setSelectedData(\"\");\r\n    setOpenExportModal(false);\r\n  };\r\n\r\n  const TagSection = ({ status, selectedRow }) => {\r\n    const valueobj = SERVICE_ORDER_STATUS.find(\r\n      (option) => option?.value === status\r\n    );\r\n    return (\r\n      <div\r\n        className=\"flex justify-center\"\r\n        onClick={() => {\r\n          setSelectedKey(PAGE_KEY.STATUS_CHANGE);\r\n          setOpenModal(true);\r\n          setSelectedData(selectedRow);\r\n        }}\r\n      >\r\n        <Tag\r\n          className={`bg-${[\r\n            valueobj?.color,\r\n          ]}-100 text-gray-600 rounded border-0 cursor-pointer`}\r\n        >\r\n          {valueobj?.label}\r\n        </Tag>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const onHeaderButtonClick = (e, key) => {\r\n    if (key === TABLE_ACTION_KEYS.ADD) {\r\n      const path = \"/app/service-order/add\"\r\n      if (id && filterPatientId)\r\n        navigate(path, { state: { patientData: filterPatientId } });\r\n      else navigate(path);\r\n    }\r\n    if (key === TABLE_ACTION_KEYS.EXPORT) {\r\n      setOpenExportModal(true);\r\n    }\r\n    if (key === TABLE_ACTION_KEYS.IMPORT) {\r\n      setOpenImportModal(true);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setSelectedFile(file.name);\r\n\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n\r\n      for (const pair of formData.entries()) {\r\n        console.log(`${pair[0]}: ${pair[1] instanceof File ? pair[1].name : pair[1]}`);\r\n      }\r\n\r\n      postApi(APIS.UPDATE_EXCEL_DATA, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      })\r\n        .then((res) => {\r\n\r\n          console.log(\"update excell\", res);\r\n\r\n          const downloadLink = document.createElement('a');\r\n          downloadLink.href = appConfig.imageBaseUrl + res?.filePath;\r\n          downloadLink.download = 'file_name.xlsx';\r\n\r\n          // Trigger a click event on the download link\r\n          document.body.appendChild(downloadLink);\r\n          downloadLink.click();\r\n          document.body.removeChild(downloadLink);\r\n\r\n          console.log(\"API Response:\", res);\r\n          toast.push(<Notification type=\"success\">File uploaded and updated successfully!</Notification>);\r\n        })\r\n        .catch((error) => {\r\n          toast.push(\r\n            <Notification type=\"error\">\r\n              Error uploading file: {error?.res?.message || \"Unknown error\"}\r\n            </Notification>\r\n          );\r\n        });\r\n\r\n      e.target.value = null;\r\n    }\r\n  };\r\n\r\n\r\n  const onDeleteSubmit = () => {\r\n    postApi(APIS.BLOCK_DELETE_DATA, {\r\n      id: selectedData?._id,\r\n      type: LIST_DATA_API_TYPE.PRESCRIPTIONS,\r\n      status: 0,\r\n    })\r\n      .then((res) => {\r\n        toast.push(<Notification type=\"success\">{DELETE_TOAST}</Notification>);\r\n        onDialogClose();\r\n      })\r\n      .catch((err) => {\r\n        toast.push(\r\n          <Notification type=\"error\">\r\n            {err?.response?.data?.message}\r\n          </Notification>\r\n        );\r\n      });\r\n  };\r\n\r\n  const Caselabel = savedHospitalId === \"67c3ec77851f03d96270ca85\"\r\n  ? \"NASPAC Case No.\"\r\n  : savedHospitalId === \"67c3fb8308a4d79e36ebf939\"\r\n  ? \"PPS Case No.\"\r\n  : \"Case No.\";\r\n  const columns = [\r\n    {\r\n      Header: \"Presc. Date\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return (\r\n          <div className=\"flex items-center w-35\">\r\n            {dayjs.utc(row?.createdAt).tz(\"America/New_York\").format(DATE_TIME_FORMAT)}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      Header: \"Patient Details\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return (\r\n          <div className=\"w-40\">\r\n            <p>{`${row?.patientId?.lastName}, ${row?.patientId?.firstName}`}</p>\r\n            <span className=\"text-gray-600 text-xs font-semibold\">\r\n              {row?.patientId?.patientNo}\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      Header:`${Caselabel}`,\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return (\r\n          <div className=\"w-40\">\r\n            <span className=\"text-gray-600 text-xs font-semibold\">\r\n              {row?.patientId?.naspacNo}\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      Header: \"NAD\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return `${dayjs(row?.nextAppointmentDate).format(DATE_FORMAT) || \"-\"}`;\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: \"NAL\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return `${row?.appointmentLocationId?.name || \"-\"}`;\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: \"LCodes\",\r\n      accessor: \"\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return (\r\n          row?.prescriptions?.map((item, index) => <div className=\"w-40\" key={index}>\r\n            {\r\n              `${item?.lCode?.code} - ${item?.quantity} qty. - ${item?.lCode?.description}`\r\n            }\r\n          </div>\r\n          )\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: \"Orientation\",\r\n      accessor: \"\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n    \r\n        return (\r\n          row?.prescriptions?.map((item, index) => {\r\n            const segmentLabel = SEGMENT_CONSTANT.find(seg => seg.value === item?.segment)?.label || \"-\";\r\n    \r\n            return (\r\n              <div className=\"w-40\" key={index}>\r\n                {segmentLabel}\r\n              </div>\r\n            );\r\n          })\r\n        );\r\n      },\r\n    },\r\n    \r\n    {\r\n      Header: \"Referring Physician\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return `${row?.physicianId?.name ? row?.physicianId?.name : \"\"}`;\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: \"Insurance\",\r\n      accessor: \"\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return (\r\n          <div className=\"flex items-center\">\r\n            {\r\n              row?.patientId?.primaryInsurance?.name || 'Self Pay'\r\n            }\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n\r\n    // {\r\n    //   Header: \"Presc. Doc\",\r\n    //   accessor: \"\",\r\n    //   Cell: (props) => {\r\n    //     const row = props.row.original;\r\n    //     if(row?.prescriptionDocument && row?.prescriptionDocument?.original){\r\n    //       return (\r\n    //         <Tooltip title={\"Download\"} visible={true}>\r\n    //           <img\r\n    //             src={IMAGES.DOWNLOAD_PDF}\r\n    //             alt=\"donwload Icon\"\r\n    //             style={{ maxWidth: \"20px\", height: \"24px\" }}\r\n    //             className=\"cursor-pointer mx-0.5\"\r\n    //             onClick={() => window.open(`${appConfig.imageBaseUrl}${row?.prescriptionDocument?.original}`, \"_blank\")}\r\n    //           />\r\n    //         </Tooltip>\r\n    //       );\r\n    //     }\r\n    //     else {\r\n    //       return ( <div className=\"flex items-center\">-</div>)\r\n    //     }\r\n\r\n    //   },\r\n    // },\r\n\r\n    {\r\n      Header: \"Presc. Status\",\r\n      accessor: \"\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        console.log(\"ROW\",row.orderStatus);\r\n        return (\r\n          <div style={{ display: \"flex\", alignItems: \"center\", gap: \"8px\" }}>\r\n            <TagSection status={row?.orderStatus} selectedRow={row} />\r\n            <ActionColumn\r\n              row={row}\r\n              onActionHandle={onActionHandle}\r\n              actionsMenu={STATUS_ACTION}\r\n            />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: \"Actions\",\r\n      id: \"action\",\r\n      accessor: (row) => row,\r\n      Cell: (props) => (\r\n        <ActionColumn\r\n          row={props.row.original}\r\n          onActionHandle={onActionHandle}\r\n          actionsMenu={ACTION_CONSTANT}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // Define the Location column\r\n  const locationColumn = {\r\n    Header: \"Location\",\r\n    Cell: (props) => {\r\n      const row = props.row.original;\r\n      return row.locationId?.name || \"-\";\r\n    },\r\n  };\r\n\r\n  // Find if any row has Dropship in Process status (orderStatus === 12)\r\n  const hasDropshipInProcess = tabledata.some(row => row.orderStatus === 12);\r\n\r\n  // Find the index of the NAL column\r\n  const nalIndex = columns.findIndex(col => col.Header === \"NAL\");\r\n\r\n  // Conditionally insert the Location column after NAL\r\n  let displayColumns = columns;\r\n  if (hasDropshipInProcess && nalIndex !== -1) {\r\n    displayColumns = [\r\n      ...columns.slice(0, nalIndex + 1),\r\n      locationColumn,\r\n      ...columns.slice(nalIndex + 1)\r\n    ];\r\n  }\r\n\r\n  const ImportModal = ({ isOpen, onClose }) => {\r\n    const handleClose = () => {\r\n      setSelectedFile(null);\r\n      onClose();\r\n    };\r\n    return (\r\n      <Dialog isOpen={isOpen} onClose={handleClose}>\r\n        <h3>Import Excel File</h3>\r\n        <input\r\n          type=\"file\"\r\n          accept=\".xls,.xlsx\"\r\n          onChange={handleFileUpload}\r\n          style={{ display: \"none\" }} // Hide the default file input\r\n          id=\"file-upload\" // Assign an ID for the label\r\n        />\r\n        <label htmlFor=\"file-upload\">\r\n          <strong>Choose file</strong>\r\n        </label>\r\n        {selectedFile && <p>Chosen file: {selectedFile}</p>}{\" \"}\r\n        {/* Display chosen file name */}\r\n      </Dialog>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {id && filterPatientId && (\r\n        <h3>\r\n          Of {filterPatientId?.firstName} {filterPatientId?.lastName}\r\n        </h3>\r\n      )}\r\n      <Header\r\n        buttonMenu={\r\n          hasPermisson(MODULE.SERVICEORDER, ACCESS.WRITE)\r\n            ? BUTTON_CONSTANT\r\n            : BUTTON_CONSTANT.slice(0, BUTTON_CONSTANT.length - 1)\r\n        }\r\n        buttonClick={onHeaderButtonClick}\r\n        setSearch={setSearch}\r\n        filtervalue={filtervalue}\r\n        setFilterValue={setFilterValue}\r\n        setFilterPatientId={setFilterPatientId}\r\n        setFilterNalId={setFilterNalId}\r\n        setFilterCompanyId={setFilterCompanyId}\r\n        setFilterPhysicianId={setFilterPhysicianId}\r\n        setFilterLcodeId={setFilterLcodeId}\r\n        setFilterInsuranceId={setFilterInsuranceId}\r\n        filterPatientId={filterPatientId}\r\n        filterPhysicianId={filterPhysicianId}\r\n        filterLcodeId={filterLcodeId}\r\n        filterInsuranceId = {filterInsuranceId}\r\n        filterNalId={filterNalId}\r\n        filterCompanyId={filterCompanyId}\r\n\r\n        selectedDate={selectedDate}\r\n        setSelectedDate={setSelectedDate}\r\n        setFilterPatientDob={setFilterPatientDob}\r\n        filterPatientDob={filterPatientDob}\r\n        setFilterNad={setFilterNad}\r\n        filterNad={filterNad}\r\n      />\r\n      <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\r\n        <DataTable\r\n          isCursor={false}\r\n          columns={displayColumns}\r\n          data={tabledata}\r\n          loading={loading}\r\n          skeletonAvatarColumns={[0]}\r\n          skeletonAvatarProps={{ width: 28, height: 28 }}\r\n          pagingData={{ pageIndex: page, pageSize: limit, total: totalCount }}\r\n          onPaginationChange={(limitpage) => setPage(limitpage)}\r\n          onSelectChange={(limitPage) => setLimit(limitPage)}\r\n        />\r\n      </AdaptableCard>\r\n      {selectedKey === PAGE_KEY.DELETE && (\r\n        <ConfirmationContent\r\n          isOpen={openModal}\r\n          onConfirmClick={onDeleteSubmit}\r\n          header={CONFIRMATION_OBJ.HEADER}\r\n          des={CONFIRMATION_OBJ.DELETE}\r\n          onDialogClose={onDialogClose}\r\n          isWarning={CONFIRMATION_OBJ.WARNING}\r\n          buttonLabel={\"Delete\"}\r\n        />\r\n      )}\r\n\r\n      {selectedKey === PAGE_KEY.STATUS_VIEW && (\r\n        <Dialog\r\n          isOpen={openModal}\r\n          onClose={onDialogClose}\r\n          onRequestClose={onDialogClose}\r\n          contentClassName=\"py-10 pl-20 pr-40 mt-60 min-w-36\"\r\n        >\r\n        <div>\r\n         {tabledata && (\r\n        <>\r\n          <p className=\"font-bold text-md mb-2 text-blue-900\">Comments:</p>\r\n          {Array.isArray(tabledata[0]?.comments) && tabledata[0].comments.length > 0 ? (\r\n            tabledata[0].comments.map((comment, index) => (\r\n              <p key={index} className=\"ml-4 mb-1\">\r\n                {typeof comment === \"string\"\r\n                  ? comment\r\n                  : <>\r\n                      {comment.comment || JSON.stringify(comment)}\r\n                      {comment.commentAddedBy?.email && (\r\n                        <span style={{ color: \"#2563eb\", marginLeft: 8, fontSize: \"0.9em\" }}>\r\n                          ({comment.commentAddedBy.email})\r\n                        </span>\r\n                      )}\r\n                    </>\r\n                }\r\n              </p>\r\n            ))\r\n          ) : (\r\n            <p className=\"ml-4\">No comments available</p>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n        </Dialog>\r\n\r\n      )}\r\n\r\n      {(selectedKey !== PAGE_KEY.DELETE && selectedKey !== PAGE_KEY.STATUS_VIEW) && (\r\n        <Dialog\r\n          isOpen={openModal}\r\n          onClose={onDialogClose}\r\n          onRequestClose={onDialogClose}\r\n          contentClassName=\"pb-0 px-0 mt-30 min-w-36\"\r\n        >\r\n          <Confirmation\r\n            selectedKey={selectedKey}\r\n            selectedData={selectedData}\r\n            closeDialog={onDialogClose}\r\n          />\r\n        </Dialog>\r\n      )}\r\n      <ImportModal\r\n        isOpen={openImportModal}\r\n        onClose={() => setOpenImportModal(false)}\r\n        setSelectedFile={setSelectedFile}\r\n      />\r\n      <ExportContent\r\n        Payload={payload}\r\n        user={filterPatientId}\r\n        type=\"1\"\r\n        isOpen={openExportModal}\r\n        onDialogClose={onDialogClose}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiceOrder;\r\n\r\n","import { Input } from \"components/ui\";\r\nimport * as Yup from \"yup\";\r\nimport { getApi } from \"services/CommonService\";\r\nimport debounce from \"lodash/debounce\";\r\nimport { APIS, LIST_DATA_API_TYPE } from \"constants/api.constant\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport { CODE_TYPE, DATE_FORMAT } from 'constants/app.constant';\r\nimport dayjs from \"dayjs\";\r\n\r\nconst savedHospitalId = localStorage.getItem(\"selectedHospitalId\");\r\n\r\nconst loadPhysicianOption = (inputValue, resolve) => {\r\n  getApi(APIS.LIST_DATA, {\r\n    type: LIST_DATA_API_TYPE.PHYSICIANS,\r\n    companyId:savedHospitalId,\r\n    search: inputValue,\r\n  }).then((result) => {\r\n    const filter = result?.data?.data.map((item) => {\r\n      let option = {\r\n        label: `${item?.name}`,\r\n        value: item?._id,\r\n      };\r\n      return option;\r\n    });\r\n    resolve(filter);\r\n  });\r\n};\r\nconst loadLocationOption = (inputValue, resolve) => {\r\n  getApi(APIS.LIST_DATA, {\r\n    type: LIST_DATA_API_TYPE.LOCATIONS,\r\n    companyId:savedHospitalId,\r\n    search: inputValue,\r\n  }).then((result) => {\r\n    const filter = result?.data?.data.map((item) => {\r\n      let option = {\r\n        label: `${item?.name}`,\r\n        value: item?._id,\r\n      };\r\n      return option;\r\n    });\r\n    resolve(filter);\r\n  });\r\n};\r\n\r\nconst loadPatientOption = (inputValue, resolve) => {\r\n  getApi(APIS.LIST_DATA, {\r\n    type: LIST_DATA_API_TYPE.PATIENTS,\r\n    companyId:savedHospitalId,\r\n    search: inputValue,\r\n  }).then((result) => {\r\n    const filter = result?.data?.data.map((item) => {\r\n      let option = {\r\n        label: `${item?.firstName} ${item?.lastName} - ${dayjs(item?.dob).format(DATE_FORMAT)} (${item?.patientNo})`,\r\n        value: item?._id,\r\n        data : item\r\n      };\r\n      return option;\r\n    });\r\n    resolve(filter);\r\n  });\r\n};\r\nconst loadlCodeOption = (inputValue, resolve) => {\r\n  getApi(APIS.LIST_DATA, {\r\n    type: LIST_DATA_API_TYPE.CODES,\r\n    companyId:savedHospitalId,\r\n    search: inputValue,\r\n    codeType: CODE_TYPE.Lcode\r\n  }).then((result) => {\r\n    const filter = result?.data?.data.map((item) => {\r\n      let option = {\r\n        label: item?.code,\r\n        value: item?._id,\r\n      };\r\n      return option;\r\n    });\r\n    resolve(filter);\r\n  });\r\n};\r\nconst loadicdCodeOption = (inputValue, resolve) => {\r\n  getApi(APIS.LIST_DATA, {\r\n    type: LIST_DATA_API_TYPE.CODES,\r\n    companyId:savedHospitalId,\r\n    search: inputValue,\r\n    codeType: CODE_TYPE.Icd\r\n  }).then((result) => {\r\n    const filter = result?.data?.data.map((item) => {\r\n      let option = {\r\n        label: item?.code,\r\n        value: item?._id,\r\n      };\r\n      return option;\r\n    });\r\n    resolve(filter);\r\n  });\r\n};\r\n\r\nconst loadDeviceTypeOption = (inputValue, resolve) => {\r\n  getApi(APIS.LIST_DATA, {\r\n    type: LIST_DATA_API_TYPE.DEVICE_TYPES,\r\n    companyId:savedHospitalId,\r\n    search: inputValue,\r\n  }).then((result) => {\r\n    const filter = result?.data?.data.map((item) => {\r\n      let option = {\r\n        label: item?.name,\r\n        value: item?._id,\r\n      };\r\n      return option;\r\n    });\r\n    resolve(filter);\r\n  });\r\n};\r\n\r\nconst loadInsuranceOption = (inputValue, resolve) => {\r\n  getApi(APIS.LIST_DATA, {\r\n    type: LIST_DATA_API_TYPE.INSURANCES,\r\n    companyId:savedHospitalId,\r\n    search: inputValue,\r\n  }).then((result) => {\r\n    const filter = result?.data?.data.map((item) => {\r\n      let option = {\r\n        label: item?.name,\r\n        value: item?._id,\r\n      };\r\n      return option;\r\n    });\r\n    resolve(filter);\r\n  });\r\n};\r\n\r\nconst loadInsuranceOption1 = (inputValue, resolve) => {\r\n  getApi(APIS.LIST_DATA, {\r\n    type: LIST_DATA_API_TYPE.INSURANCES,\r\n    companyId:savedHospitalId,\r\n    search: inputValue,\r\n  }).then((result) => {\r\n    const filter = result?.data?.data.map((item) => {\r\n      let option = {\r\n        label: item?.name,\r\n        value: item?._id,\r\n      };\r\n      return option;\r\n    });\r\n    resolve(filter);\r\n  });\r\n};\r\n\r\nconst loadPhysicians = debounce(loadPhysicianOption, 300);\r\nconst loadPhysicians1 = debounce(loadPhysicianOption, 300);\r\nconst loadlcodeoptions = debounce(loadlCodeOption, 300);\r\nconst loadicdcodeoptions = debounce(loadicdCodeOption, 300);\r\nconst loadLocations = debounce(loadLocationOption, 300);\r\nconst loadLocations1 = debounce(loadLocationOption, 300);\r\nconst loadPatients = debounce(loadPatientOption, 300);\r\nconst loadDeviceTypes = debounce(loadDeviceTypeOption, 300);\r\nconst loadInsurances = debounce(loadInsuranceOption, 300);\r\nconst loadInsurances1 = debounce(loadInsuranceOption1, 300);\r\n\r\nexport const SERVICE_ORDER_STATUS = [\r\n  { label: \"Referral Sent\", value: 1 ,color: \"red\"},\r\n  { label: \"Intake Completed\", value: 2 ,color: \"indigo\"},\r\n  { label: \"Insurance in process\", value: 13 ,color : \"emerald\" },\r\n  { label: \"Insurance Completed\", value: 3  ,color: \"blue\"},\r\n  { label: \"Order Fulfilment in Process\", value: 4, color : \"emerald\" },\r\n  { label: \"Order Fulfilment Completed\", value: 5,color : \"cyan\" },\r\n  { label: \"Delivery Ready\", value: 6 , color : \"orange\" },\r\n  { label: \"Delivery Scheduled\", value: 15 , color : \"orange\" },\r\n  { label: \"Dropship in Process\", value: 12 ,color : \"emerald\" },\r\n  { label: \"Delivered\", value: 7 , color: \"green\" },\r\n  { label: \"DR Sent to PPS\", value: 8, color: \"purple\"  },\r\n  { label: \"Billed\", value: 9 ,color : \"orange\" },\r\n  { label: \"RNR\", value: 10 ,color : \"orange\" },\r\n  { label: \"Denied\", value: 11 ,color : \"red\" },\r\n  { label: \"High Deductible\", value: 14 ,color : \"emerald\" },\r\n  {label:  \"LMN signed\", value: 16, color: \"purple\"},\r\n  {label:  \"Get LMN\", value: 17, color: \"blue\"}\r\n\r\n  // { label: \"Pending\", value: 1, color: \"red\" },\r\n  // { label: \"In-Process\", value: 2, color: \"indigo\" },\r\n  // { label: \"Completed\", value: 3, color: \"green\" },\r\n];\r\n// Reterra Sent\r\n// Intake Completed\r\n// Insurance Completed\r\n// Order Fulfilment in Process\r\n// Order Fulfilment Completed\r\n// Delivery Ready\r\n// Delivered\r\n// DR Sent to PPS\r\n// Billed\r\n// RNR\r\n// Denied\r\nexport const PROVIDER_STATUS = [\r\n  { label: \"Approved\", value: 1 },\r\n  { label: \"Rejected\", value: 2 },\r\n  { label: \"Processing\", value: 3 },\r\n];\r\n\r\nexport const INSURANCE_CONSTANT = [\r\n  { label: \"Self Pay\", value: 1 },\r\n  { label: \"Insurance\", value: 2 },\r\n];\r\nexport const PERSONAL_INFORMATION = [\r\n  {\r\n    name: \"patientId\",\r\n    label: \"Select Patient (Search with name)\",\r\n    component: \"asyncSelect\",\r\n    option: loadPatients,\r\n    placeholder: \"Select Patient\",\r\n  },\r\n  {\r\n    name: \"nextAppointmentDate\",\r\n    label: \"Next Appointment Date\",\r\n    component: \"datepicker\",\r\n  },\r\n  {\r\n    name: \"locationId\",\r\n    label: \"Select Prescription Location (Search with name)\",\r\n    component: \"asyncSelect\",\r\n    option: loadLocations,\r\n    placeholder: \"Select Location\",\r\n  },\r\n  {\r\n    name: \"appointmentLocationId\",\r\n    label: \"Next Appointment Location (Search with name)\",\r\n    component: \"asyncSelect\",\r\n    option: loadLocations1,\r\n    placeholder: \"Search/Select with Name\",\r\n  },\r\n  {\r\n    name: \"physicianId\",\r\n    label: \"Referring Physician (Search with name)\",\r\n    component: \"asyncSelect\",\r\n    option: loadPhysicians,\r\n    placeholder: \"Search Physician\",\r\n  },\r\n  {\r\n    name: \"renderingPhysicianId\",\r\n    label: \"Rendering Physician (Search with name)\",\r\n    component: \"asyncSelect\",\r\n    option: loadPhysicians1,\r\n    placeholder: \"Search/Select with Name\",\r\n  },\r\n  {\r\n    name: \"prescriptionDocument\",\r\n    label: \"Upload Prescription\",\r\n    component: \"PdfUpload\",\r\n  },\r\n  {\r\n    name: \"physicianNotes\",\r\n    label: \"Physician Notes\",\r\n    type: \"switch\",\r\n    component: \"switch\",\r\n  },\r\n];\r\n\r\nexport const INSURANCE_FIELD_CONSTANT = [\r\n  {\r\n    name: \"primaryInsurance\",\r\n    apiType: \"insurance\",\r\n    label: \"Primary Insurance\",\r\n    option: loadInsurances,\r\n    component: \"asyncSelect\",\r\n    placeholder: \"Select primary insurance\",\r\n  },\r\n  {\r\n    name: \"primaryInsuranceNo\",\r\n    label: \"Primary Insurance No.\",\r\n    type: \"text\",\r\n    component: Input,\r\n    placeholder: \"Enter primary insurance no.\",\r\n    isBasic: true,\r\n  },\r\n  {\r\n    name: \"secondaryInsurance\",\r\n    apiType: \"insurance\",\r\n    label: \"Secondary Insurance\",\r\n    option: loadInsurances1,\r\n    component: \"asyncSelect\",\r\n    placeholder: \"Select secondary insurance\",\r\n  },\r\n  {\r\n    name: \"secondaryInsuranceNo\",\r\n    label: \"Seconday Insurance No.\",\r\n    type: \"text\",\r\n    component: Input,\r\n    placeholder: \"Enter secondary insurance no.\",\r\n    isBasic: true,\r\n  },\r\n  {\r\n    name: \"insuranceDocument\",\r\n    label: \"Upload Insurance Verification\",\r\n    component: \"PdfUpload\",\r\n  },\r\n  {\r\n    name: \"notes\",\r\n    label: \"Notes\",\r\n    type: \"text\",\r\n    component: Input,\r\n    isBasic: true,\r\n    placeholder: \"Enter notes\",\r\n    textArea: true,\r\n  },\r\n];\r\n\r\nexport const FORM_FIELD_ARRAY = [\r\n  {\r\n    name: \"deviceType\",\r\n    label: \"Device Type\",\r\n    type: \"select\",\r\n    key: \"deviceType\",\r\n    option: loadDeviceTypes,\r\n    placeholder: \"Select\",\r\n    component: AsyncSelect,\r\n    isMulti : false\r\n  },\r\n  {\r\n    name: \"lCode\",\r\n    label: \"LCode\",\r\n    type: \"select\",\r\n    key: \"lCode\",\r\n    option: loadlcodeoptions,\r\n    placeholder: \"Select\",\r\n    component: AsyncSelect,\r\n    isMulti : false\r\n  },\r\n  {\r\n    name: \"icdCode\",\r\n    label: \"ICD Code\",\r\n    type: \"select\",\r\n    key: \"icdCode\",\r\n    option: loadicdcodeoptions,\r\n    placeholder: \"Select\",\r\n    component: AsyncSelect,\r\n    isMulti : true\r\n  },\r\n  {\r\n    name: \"quantity\",\r\n    label: \"LCode Quantity\",\r\n    type: \"number\",\r\n    key: \"quantity\",\r\n    placeholder: \"Enter Quantity\",\r\n    component: Input,\r\n  },\r\n];\r\n\r\nexport const PAGE_KEY = {\r\n  DELETE: \"delete\",\r\n  EXPORT: \"export\",\r\n  VIEW: \"view\",\r\n  CALENDOR: \"calendor\",\r\n  DOWNLOAD: \"download\",\r\n  INSURANCE: \"insurance\",\r\n  STATUS_CHANGE: \"statusChange\",\r\n  DELIVERY_RECEIPT: \"deliveryReceipt\",\r\n  MEDICAL_NECESSITY: \"medicalNecessity\",\r\n  STATUS_VIEW:\"statusView\"\r\n};\r\n\r\nexport const MODAL_HEADER = {\r\n  calendor: \"Appointment\",\r\n  download: \"Download Package\",\r\n  insurance: \"Insurance\",\r\n  statusChange: \"Update Order Status\",\r\n};\r\n\r\nexport const SEGMENT_CONSTANT = [\r\n  { label: \"Left\", value: 1 },\r\n  { label: \"Right\", value: 2 },\r\n  { label: \"Spine\", value: 3 },\r\n  { label: \"Bilateral\", value: 4 },\r\n];\r\n\r\nexport { loadLocations };\r\n"],"names":["IMAGES","VIEW_IMAGE","REPLY","STATUS","EXPORT","RECEIPT","DOWNLOAD_PDF","type","onDialogClose","isOpen","user","Payload","onClose","onRequestClose","contentClassName","className","variant","onClick","payload","userId","_id","postApi","APIS","then","res","toast","downloadLink","document","createElement","href","appConfig","data","fileName","download","body","appendChild","click","removeChild","catch","error","message","isLastChild","arr","index","length","notificationHeight","ADMIN_NOTIFICATION_TYPE","NotificationToggle","content","classNames","badgeStyle","top","right","withHeaderItem","useState","notificationList","setNotificationList","listInnerRef","useRef","currPage","setCurrPage","prevPage","lastList","count","noResult","loading","navigate","useNavigate","bgTheme","useThemeClass","larger","useResponsive","fetchNotifications","useSelector","state","theme","direction","useEffect","intervalId","setInterval","clearInterval","onMarkAsRead","id","list","map","item","console","log","navigationHandler","recordId","renderTitle","menuClass","placement","md","onOpen","title","ref","onScroll","current","scrollTop","scrollHeight","clientHeight","dayjs","createdAt","format","DATE_TIME_FORMAT","innerClass","isRead","size","src","alt","Component","props","hoverable","twBreakpoint","breakpointInt","str","parseInt","replace","breakpoint","xl","lg","sm","xs","getAllSizes","comparator","currentWindowWidth","window","innerWidth","Object","fromEntries","entries","key","value","getResponsiveState","windowWidth","smaller","responsive","setResponsive","resizeHandler","responsiveState","addEventListener","removeEventListener","FilterSection","setSearch","filtervalue","setFilterValue","setFilterPatientId","filterPatientId","setFilterNalId","filterNalId","setFilterPhysicianId","filterPhysicianId","filterLcodeId","setFilterLcodeId","filterInsuranceId","setFilterInsuranceId","selectedDate","setSelectedDate","filterPatientDob","setFilterPatientDob","filterNad","setFilterNad","savedHospitalId","localStorage","getItem","loadLcode","debounce","inputValue","resolve","getApi","LIST_DATA_API_TYPE","companyId","search","filteredData","filter","Insurance","insuranceData","loadPhysician","loadNal","loadStays","result","autoComplete","placeholder","defaultOptions","cacheOptions","loadOptions","componentAs","AsyncSelect","getOptionLabel","v","name","getOptionValue","onChange","selectedInsurance","options","SERVICE_ORDER_STATUS","selectedValue","firstName","lastName","patientNo","dob","moment","DATE_FORMAT","event","selectedNal","selectedPhysician","code","selectedLcode","inputtable","clearable","inputFormat","maxDate","Date","date","endDate","startDate","minDate","icon","buttonMenu","buttonClick","ButtonSection","btn","i","e","style","marginLeft","z","label","AppoinmentSchema","Yup","shape","appointmentDate","required","appointmentTime","appointmentAddress","onSubmit","selectedData","initialValues","validationSchema","enableReinitialize","errors","touched","values","isSubmitting","setFieldValue","invalid","errorMessage","currentDate","_isValid","dateFormat","timeFormat","inputProps","width","borderWidth","height","borderRadius","padding","textArea","component","Input","stickyClass","DOCUMENT_CONSTANT","patientId","visible","maxWidth","InsuranceSectionSchema","insuranceStatus","insuranceAmount","insuranceNotes","STATUS_OPTIONS","obj","Select","showLocation","setShowLocation","orderStatus","location","field","form","loadLocations","selectedOption","option","selectedKey","closeDialog","dialogHeader","setDialogHeader","PAGE_KEY","formData","FormData","lcodeQuantities","lcodeIds","prescriptions","forEach","prescription","push","quantity","lCode","append","JSON","stringify","appointmentLocationId","UPDATE_TOAST","MODAL_HEADER","minHeight","ACTION_CONSTANT","toolTip","show","hasPermisson","MODULE","ACCESS","isImage","fontSize","STATUS_ACTION","BUTTON_CONSTANT","TABLE_ACTION_KEYS","useLocation","useParams","tabledata","setTableData","setLoading","page","setPage","totalCount","setTotalCount","limit","setLimit","openModal","setOpenModal","setSelectedKey","filterCompanyId","setFilterCompanyId","setSelectedData","setPayload","refresh","setRefresh","openExportModal","setOpenExportModal","openImportModal","setOpenImportModal","selectedFile","setSelectedFile","utc","timezone","params","URLSearchParams","physicianId","parse","get","insuranceId","lcodeId","patientDob","nal","nad","PatientId","nalId","skip","status","finally","onActionHandle","row","preventDefault","queryParams","toString","open","TagSection","selectedRow","valueobj","color","handleFileUpload","file","target","files","pair","File","headers","filePath","Notification","columns","Header","Cell","original","tz","naspacNo","nextAppointmentDate","accessor","description","segmentLabel","SEGMENT_CONSTANT","seg","segment","primaryInsurance","display","alignItems","gap","actionsMenu","hasDropshipInProcess","some","nalIndex","findIndex","col","displayColumns","slice","locationId","ImportModal","accept","htmlFor","path","patientData","bodyClass","isCursor","skeletonAvatarColumns","skeletonAvatarProps","pagingData","pageIndex","pageSize","total","onPaginationChange","limitpage","onSelectChange","limitPage","ConfirmationContent","onConfirmClick","DELETE_TOAST","err","response","header","CONFIRMATION_OBJ","des","isWarning","buttonLabel","Array","isArray","comments","comment","commentAddedBy","email","loadPhysicianOption","loadLocationOption","loadPhysicians","loadPhysicians1","loadlcodeoptions","codeType","CODE_TYPE","loadicdcodeoptions","loadLocations1","loadPatients","loadDeviceTypes","loadInsurances","loadInsurances1","INSURANCE_CONSTANT","PERSONAL_INFORMATION","INSURANCE_FIELD_CONSTANT","apiType","isBasic","FORM_FIELD_ARRAY","isMulti","DELETE","VIEW","CALENDOR","DOWNLOAD","INSURANCE","STATUS_CHANGE","DELIVERY_RECEIPT","MEDICAL_NECESSITY","STATUS_VIEW","calendor","insurance","statusChange"],"sourceRoot":""}
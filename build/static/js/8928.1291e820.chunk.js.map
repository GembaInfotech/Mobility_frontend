{"version":3,"file":"static/js/8928.1291e820.chunk.js","mappings":"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","sources":["components/layout/ClassicLayout.js","components/template/SideNav.js","components/template/SideNavToggle.js"],"sourcesContent":["import React from \"react\";\nimport Header from \"components/template/Header\";\nimport SideNavToggle from \"components/template/SideNavToggle\";\nimport Search from \"components/template/Search\";\nimport LanguageSelector from \"components/template/LanguageSelector\";\nimport Notification from \"components/template/Notification\";\nimport SidePanel from \"components/template/SidePanel\";\nimport MobileNav from \"components/template/MobileNav\";\nimport UserDropdown from \"components/template/UserDropdown\";\nimport SideNav from \"components/template/SideNav\";\nimport View from \"views\";\n\nconst HeaderActionsStart = () => {\n  return (\n    <>\n      <MobileNav />\n      <SideNavToggle />\n      <Search />\n    </>\n  );\n};\n\nconst HeaderActionsEnd = () => {\n  return (\n    <>\n      <LanguageSelector />\n      <Notification />\n      <SidePanel />\n      <UserDropdown hoverable={false} />\n    </>\n  );\n};\n\nconst ClassicLayout = (props) => {\n  return (\n    <div className=\"app-layout-classic flex flex-auto flex-col\">\n      <div className=\"flex flex-auto min-w-0\">\n        <SideNav />\n        <div className=\"flex flex-col flex-auto min-h-screen min-w-0 relative w-full\">\n          <Header\n            className=\"shadow dark:shadow-2xl\"\n            headerStart={<HeaderActionsStart />}\n            headerEnd={<HeaderActionsEnd />}\n          />\n          <div className=\"h-full flex flex-auto flex-col\">\n            <View {...props} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ClassicLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { ScrollBar } from \"components/ui\";\nimport PropTypes from \"prop-types\";\nimport {\n  SIDE_NAV_WIDTH,\n  SIDE_NAV_COLLAPSED_WIDTH,\n  NAV_MODE_DARK,\n  NAV_MODE_THEMED,\n  NAV_MODE_TRANSPARENT,\n  SIDE_NAV_CONTENT_GUTTER,\n  LOGO_X_GUTTER,\n} from \"constants/theme.constant\";\nimport Logo from \"components/template/Logo\";\nimport navigationConfig from \"configs/navigation.config\";\nimport VerticalMenuContent from \"components/template/VerticalMenuContent\";\nimport useResponsive from \"utils/hooks/useResponsive\";\nimport { useSelector } from \"react-redux\";\nimport { APP_NAME } from \"constants/app.constant\";\nimport { LOGO_SRC_PATH } from \"components/template/Logo\";\nconst sideNavStyle = {\n  width: SIDE_NAV_WIDTH,\n  minWidth: SIDE_NAV_WIDTH,\n};\n\nconst sideNavCollapseStyle = {\n  width: SIDE_NAV_COLLAPSED_WIDTH,\n  minWidth: SIDE_NAV_COLLAPSED_WIDTH,\n};\n\nconst SideNav = () => {\n  const themeColor = useSelector((state) => state.theme.themeColor);\n  const primaryColorLevel = useSelector(\n    (state) => state.theme.primaryColorLevel\n  );\n  const navMode = useSelector((state) => state.theme.navMode);\n  const mode = useSelector((state) => state.theme.mode);\n  const direction = useSelector((state) => state.theme.direction);\n  const currentRouteKey = useSelector(\n    (state) => state.base.common.currentRouteKey\n  );\n  const sideNavCollapse = useSelector(\n    (state) => state.theme.layout.sideNavCollapse\n  );\n  const userAuthority = useSelector((state) => state.auth.user.authority);\n\n  const { larger } = useResponsive();\n\n  const sideNavColor = () => {\n    if (navMode === NAV_MODE_THEMED) {\n      return `bg-${themeColor}-${primaryColorLevel} side-nav-${navMode}`;\n    }\n    return `side-nav-${navMode}`;\n  };\n\n  const logoMode = () => {\n    if (navMode === NAV_MODE_THEMED) {\n      return NAV_MODE_DARK;\n    }\n\n    if (navMode === NAV_MODE_TRANSPARENT) {\n      return mode;\n    }\n\n    return navMode;\n  };\n\n  const menuContent = (\n    <VerticalMenuContent\n      navMode={navMode}\n      collapsed={sideNavCollapse}\n      navigationTree={navigationConfig}\n      routeKey={currentRouteKey}\n      userAuthority={userAuthority}\n      direction={direction}\n    />\n  );\n\n  return (\n    <>\n      {larger.md && (\n        <div\n          style={sideNavCollapse ? sideNavCollapseStyle : sideNavStyle}\n          className={classNames(\n            \"side-nav\",\n            sideNavColor(),\n            !sideNavCollapse && \"side-nav-expand\"\n          )}\n        >\n          <div className={`side-nav-header`}>\n            <div className=\"flex items-center bg-blue-900\">\n              {!sideNavCollapse && (\n                <img\n                  className=\"my-5\"\n                  src={`${LOGO_SRC_PATH}Admin-logo-white.png`}\n                  alt={`${APP_NAME} logo`}\n                />\n              )}\n              {sideNavCollapse && (\n                <Logo\n                  imgClass=\"my-2\"\n                  mode={logoMode()}\n                  type={sideNavCollapse ? \"streamline\" : \"full\"}\n                  gutter={\n                    sideNavCollapse ? SIDE_NAV_CONTENT_GUTTER : LOGO_X_GUTTER\n                  }\n                  imgHeight={45}\n                  imgWidth={50}\n                />\n              )}\n            </div>\n          </div>\n          {sideNavCollapse ? (\n            menuContent\n          ) : (\n            <div className=\"side-nav-content bg-blue-900 \">\n              <ScrollBar autoHide direction={direction}>\n                {menuContent}\n              </ScrollBar>\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nSideNav.propTypes = {\n  themed: PropTypes.bool,\n  darkMode: PropTypes.bool,\n  themeColor: PropTypes.string,\n};\n\nSideNav.defaultProps = {\n  themed: false,\n  darkMode: false,\n  themeColor: \"\",\n};\n\nexport default SideNav;\n","import React from 'react'\nimport withHeaderItem from 'utils/hoc/withHeaderItem'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setSideNavCollapse } from 'store/theme/themeSlice'\nimport useResponsive from 'utils/hooks/useResponsive'\nimport { NavToggle } from 'components/shared'\n\nexport const SideNavToggle = ({ className }) => {\n\n\tconst sideNavCollapse = useSelector((state) => state.theme.layout.sideNavCollapse)\n\tconst dispatch = useDispatch()\n\n\tconst { larger } = useResponsive()\n\n\tconst onCollapse = () => {\n\t\tdispatch(setSideNavCollapse(!sideNavCollapse))\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{larger.md && (\n\t\t\t\t<div \n\t\t\t\t\tclassName={className}\n\t\t\t\t\tonClick={onCollapse}\n\t\t\t\t>\n\t\t\t\t\t<NavToggle className=\"text-2xl\" toggled={sideNavCollapse} />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default withHeaderItem(SideNavToggle)\n"],"names":["HeaderActionsStart","HeaderActionsEnd","hoverable","props","className","headerStart","headerEnd","sideNavStyle","width","SIDE_NAV_WIDTH","minWidth","sideNavCollapseStyle","SIDE_NAV_COLLAPSED_WIDTH","SideNav","themeColor","useSelector","state","theme","primaryColorLevel","navMode","mode","direction","currentRouteKey","base","common","sideNavCollapse","layout","userAuthority","auth","user","authority","larger","useResponsive","menuContent","collapsed","navigationTree","navigationConfig","routeKey","md","style","classNames","NAV_MODE_THEMED","src","LOGO_SRC_PATH","alt","APP_NAME","imgClass","NAV_MODE_DARK","NAV_MODE_TRANSPARENT","type","gutter","SIDE_NAV_CONTENT_GUTTER","LOGO_X_GUTTER","imgHeight","imgWidth","autoHide","defaultProps","themed","darkMode","withHeaderItem","dispatch","useDispatch","onClick","setSideNavCollapse","toggled"],"sourceRoot":""}
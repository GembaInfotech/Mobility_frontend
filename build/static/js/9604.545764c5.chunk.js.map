{"version":3,"file":"static/js/9604.545764c5.chunk.js","mappings":"0MAaA,MAAMA,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAAaG,SAAS,+BAC7BC,SAAUJ,EAAAA,KAAaG,SAAS,8BAChCE,WAAYL,EAAAA,OA8Fd,EA3FoBM,IAClB,MAAM,cACJC,GAAgB,EAAK,UACrBC,EAAS,kBACTC,EAAoB,mBAAkB,UACtCC,EAAY,YACVJ,GAEE,OAAEK,IAAWC,EAAAA,EAAAA,KASnB,OACE,gBAAKJ,UAAWA,EAAU,UACxB,SAAC,KAAM,CACLK,cAAe,CACbX,MAAO,GACPE,SAAU,GACVC,YAAY,GAEdN,iBAAkBA,EAClBe,SAAU,CAACC,EAAO,KAAwB,IAAvB,cAAEC,GAAe,EAC7BT,EAGHS,GAAc,GApBPC,OAAOF,EAAQC,KAC9B,MAAM,MAAEd,EAAK,SAAEE,GAAaW,EAC5BC,GAAc,SACRL,EAAO,CAAET,QAAOE,aACtBY,GAAc,EAAM,EAcZE,CAASH,EAAQC,EAGnB,EACA,SAED,QAAC,QAAEG,EAAO,OAAEC,EAAM,aAAEC,GAAc,SACjC,SAAC,KAAI,WACH,UAAC,KAAa,YACZ,SAAC,KAAQ,CACPC,MAAM,QACNC,QAASH,EAAOlB,OAASiB,EAAQjB,MACjCsB,aAAcJ,EAAOlB,MAAM,UAE3B,SAAC,KAAK,CACJuB,KAAK,OACLC,aAAa,MACbC,KAAK,QACLC,YAAY,cACZC,UAAWC,EAAAA,QAGf,SAAC,KAAQ,CACPR,MAAM,WACNC,QAASH,EAAOhB,UAAYe,EAAQf,SACpCoB,aAAcJ,EAAOhB,SAAS,UAE9B,SAAC,KAAK,CACJsB,aAAa,MACbC,KAAK,WACLC,YAAY,WACZC,UAAWE,EAAAA,QAGf,iBAAKvB,UAAU,4BAA2B,WACxC,SAAC,KAAK,CACJA,UAAU,OACVmB,KAAK,aACLE,UAAWG,EAAAA,GACXC,SAAS,iBAEX,SAAC,KAAU,CAACC,GAAIzB,EAAkB,kCAEpC,SAAC,KAAM,CACL0B,OAAK,EACLC,QAASf,EACTgB,QAAQ,QACRZ,KAAK,SAAQ,SAEZJ,EAAe,gBAAkB,gBAOjC,KAGP,EC3FV,EAZe,KAEb,iCACC,iBAAKb,UAAU,OAAM,WACpB,eAAIA,UAAU,OAAM,4BACpB,yEAED,SAAC,EAAU,CAACD,eAAe,M","sources":["views/auth/SignIn/SignInForm.js","views/auth/SignIn/index.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Input,\r\n  Button,\r\n  Checkbox,\r\n  FormItem,\r\n  FormContainer,\r\n} from \"components/ui\";\r\nimport { PasswordInput, ActionLink } from \"components/shared\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport useAuth from \"utils/hooks/useAuth\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string().required(\"Please enter your user name\"),\r\n  password: Yup.string().required(\"Please enter your password\"),\r\n  rememberMe: Yup.bool(),\r\n});\r\n\r\nconst SignInForm = (props) => {\r\n  const {\r\n    disableSubmit = false,\r\n    className,\r\n    forgotPasswordUrl = \"/forgot-password\",\r\n    signUpUrl = \"/sign-up\",\r\n  } = props;\r\n\r\n  const { signIn } = useAuth();\r\n\r\n  const onSignIn = async (values, setSubmitting) => {\r\n    const { email, password } = values;\r\n    setSubmitting(true);\r\n    await signIn({ email, password});\r\n    setSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n          rememberMe: true,\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          if (!disableSubmit) {\r\n            onSignIn(values, setSubmitting);\r\n          } else {\r\n            setSubmitting(false);\r\n          }\r\n        }}\r\n      >\r\n        {({ touched, errors, isSubmitting }) => (\r\n          <Form>\r\n            <FormContainer>\r\n              <FormItem\r\n                label=\"Email\"\r\n                invalid={errors.email && touched.email}\r\n                errorMessage={errors.email}\r\n              >\r\n                <Field\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  name=\"email\"\r\n                  placeholder=\"Enter Email\"\r\n                  component={Input}\r\n                />\r\n              </FormItem>\r\n              <FormItem\r\n                label=\"Password\"\r\n                invalid={errors.password && touched.password}\r\n                errorMessage={errors.password}\r\n              >\r\n                <Field\r\n                  autoComplete=\"off\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  component={PasswordInput}\r\n                />\r\n              </FormItem>\r\n              <div className=\"flex justify-between mb-6\">\r\n                <Field\r\n                  className=\"mb-0\"\r\n                  name=\"rememberMe\"\r\n                  component={Checkbox}\r\n                  children=\"Remember Me\"\r\n                />\r\n                <ActionLink to={forgotPasswordUrl}>Forgot Password?</ActionLink>\r\n              </div>\r\n              <Button\r\n                block\r\n                loading={isSubmitting}\r\n                variant=\"solid\"\r\n                type=\"submit\"\r\n              >\r\n                {isSubmitting ? \"Signing in...\" : \"Sign In\"}\r\n              </Button>\r\n              {/* <div className=\"mt-4 text-center\">\r\n                <span>Don't have an account yet? </span>\r\n                <ActionLink to={signUpUrl}>Sign up</ActionLink>\r\n              </div> */}\r\n            </FormContainer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n","import React from 'react'\nimport SignInForm from './SignInForm'\n\nconst SignIn = () => {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"mb-8\">\n\t\t\t\t<h3 className=\"mb-1\">Welcome back!</h3>\n\t\t\t\t<p>Please enter your credentials to sign in!</p>\n\t\t\t</div>\n\t\t\t<SignInForm disableSubmit={false} />\n\t\t</>\n\t)\n}\n\nexport default SignIn"],"names":["validationSchema","Yup","shape","email","required","password","rememberMe","props","disableSubmit","className","forgotPasswordUrl","signUpUrl","signIn","useAuth","initialValues","onSubmit","values","setSubmitting","async","onSignIn","touched","errors","isSubmitting","label","invalid","errorMessage","type","autoComplete","name","placeholder","component","Input","PasswordInput","Checkbox","children","to","block","loading","variant"],"sourceRoot":""}
{"version":3,"file":"static/js/9550.8550e3ee.chunk.js","mappings":"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","sources":["services/CommonService.js","views/subUsers/addEdit/accessControl/index.js","views/subUsers/addEdit/index.js"],"sourcesContent":["import ApiService from \"./ApiService\"\r\nimport BaseService from \"./BaseService\";\r\n\r\nexport function getApi(endpoint, params) {\r\n  return BaseService.get(endpoint, { params }).then((res) => res?.data);\r\n}\r\n\r\nexport function postApi(endpoint, payload) {    \r\n  return BaseService.post(endpoint, payload).then((res) => res?.data);\r\n}\r\n\r\nexport async function apiGetNotificationCount () {\r\n    return ApiService.fetchData({\r\n        url: '/notification/count',\r\n        method: 'get'\r\n    })\r\n}\r\n\r\nexport async function apiGetNotificationList () {\r\n    return ApiService.fetchData({\r\n        url: '/notification/list',\r\n        method: 'get'\r\n    })\r\n}\r\n\r\nexport async function apiGetSearchResult (data) {\r\n    return ApiService.fetchData({\r\n        url: '/search/query',\r\n        method: 'post',\r\n        data\r\n    })\r\n}","import { Checkbox, Table } from \"components/ui\";\r\nimport TBody from \"components/ui/Table/TBody\";\r\nimport Td from \"components/ui/Table/Td\";\r\nimport Th from \"components/ui/Table/Th\";\r\nimport THead from \"components/ui/Table/THead\";\r\nimport Tr from \"components/ui/Table/Tr\";\r\nimport React from \"react\";\r\n\r\nexport const PERMISSIONS = [\r\n  {\r\n    label: \"Sub Admin\",\r\n    name: \"sub-user\",\r\n    read: true,\r\n    edit: false,\r\n    delete: false,\r\n  },\r\n  {\r\n    label: \"Patient Management\",\r\n    name: \"patient\",\r\n    read: true,\r\n    edit: false,\r\n    delete: false,\r\n  },\r\n  {\r\n    label: \"Physicians\",\r\n    name: \"physician\",\r\n    read: true,\r\n    edit: false,\r\n    delete: false,\r\n  },\r\n  {\r\n    label: \"Patient Prescriptions\",\r\n    name: \"service-order\",\r\n    read: true,\r\n    edit: false,\r\n    delete: false,\r\n  },\r\n  {\r\n    label: \"Insurance Companies\",\r\n    name: \"insurance\",\r\n    read: true,\r\n    edit: false,\r\n    delete: false,\r\n  },\r\n  {\r\n    label: \"Codes (LCode / ICD)\",\r\n    name: \"codes\",\r\n    read: true,\r\n    edit: false,\r\n    delete: false,\r\n  },\r\n  {\r\n    label: \"Types Of Devices\",\r\n    name: \"types-of-devices\",\r\n    read: true,\r\n    edit: false,\r\n    delete: false,\r\n  },\r\n  {\r\n    label: \"Locations\",\r\n    name: \"locations\",\r\n    read: true,\r\n    edit: false,\r\n    delete: false,\r\n  },\r\n  {\r\n    label: \"Stock Entry\",\r\n    name: \"stock-entry\",\r\n    read: true,\r\n    edit: false,\r\n    delete: false,\r\n  },\r\n  {\r\n    label: \"Company\",\r\n    name: \"Company\",\r\n    read: false,\r\n    edit: false,\r\n    delete: false,\r\n  },\r\n\r\n];\r\n\r\nconst AccessControl = ({ touched, errors, values, setFieldValue }) => {\r\n  const selectHandler = (role, value, name) => {\r\n    const newRoles = (values?.roles || []).map((x) => {\r\n      if (x?.name === name) {\r\n        if ((role === \"edit\" || role === \"delete\") && value) {\r\n          return { ...x, [role]: value, read: true };\r\n        } else {\r\n          return { ...x, [role]: value };\r\n        }\r\n      }\r\n      return x;\r\n    });\r\n    setFieldValue(\"roles\", newRoles);\r\n  };\r\n \r\n  return (\r\n    <div>\r\n      <h4 className=\"my-4\">Access Control</h4>\r\n      <Table>\r\n        <THead>\r\n          <Tr>\r\n            <Th>Menu</Th>\r\n            <Th>Read</Th>\r\n            <Th>Add/Edit</Th>\r\n            <Th>Delete</Th>\r\n          </Tr>\r\n        </THead>\r\n        <TBody>\r\n          {PERMISSIONS?.map((permission, index) => {\r\n            const valueObj = values?.roles?.find(\r\n              (x) => x?.name === permission?.name\r\n            );\r\n            return (\r\n              <Tr key={index}>\r\n                <Td>{permission?.label} </Td>\r\n                <Td>  \r\n                  <Checkbox\r\n                    checked={valueObj?.read}\r\n                    onChange={(e) => selectHandler(\"read\", e, permission?.name)}\r\n                  />\r\n                </Td>\r\n                <Td>\r\n                  <Checkbox\r\n                    checked={valueObj?.edit}\r\n                    onChange={(e) => selectHandler(\"edit\", e, permission?.name)}\r\n                  />\r\n                </Td>\r\n                <Td>\r\n                  <Checkbox\r\n                    checked={valueObj?.delete}\r\n                    onChange={(e) =>\r\n                      selectHandler(\"delete\", e, permission?.name)\r\n                    }\r\n                  />\r\n                </Td>\r\n              </Tr>\r\n            );\r\n          })}\r\n        </TBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccessControl;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { AdaptableCard } from 'components/shared';\r\nimport {\r\n  Button,\r\n  Input,\r\n  FormItem,\r\n  FormContainer,\r\n  toast,\r\n  Notification,\r\n  Card,\r\n  Spinner,\r\n  Switcher,\r\n  Select,\r\n} from 'components/ui';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { getApi, postApi } from 'services/CommonService';\r\nimport { APIS, LIST_DATA_API_TYPE } from 'constants/api.constant';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport AccessControl, { PERMISSIONS } from './accessControl';\r\nimport { useSelector } from 'react-redux';\r\nconst SignupSchema = Yup.object().shape({\r\n  name: Yup.string().required('Required'),\r\n  email: Yup.string().email().required('Required'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  email: '',\r\n  superAdmin: false,\r\n  roles: PERMISSIONS,\r\n};\r\n\r\nconst AddEditAdmins = () => {\r\n  const formRef = useRef();\r\n  const [loading, setLoading] = useState(false);\r\n  const [editData, setEditData] = useState();\r\n  const [companyOptions, setCompanyOptionos] = useState([]);\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { superAdmin } = useSelector((state) => state?.auth?.user);\r\n\r\n  useEffect(() => {\r\n\r\n    getApi(APIS.LIST_DATA, { type: LIST_DATA_API_TYPE.COMPANY })\r\n      .then((res) => {\r\n        if (res && res.data && Array.isArray(res.data.data)) {\r\n          const locations = res.data.data.map((location) => ({\r\n            label: location.name,\r\n            value: location._id,\r\n          }));\r\n          setCompanyOptionos(locations);\r\n        } else {\r\n          toast.push(<Notification type=\"error\">No Companies found!</Notification>);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching Companies:\", error);\r\n        toast.push(<Notification type=\"error\">Failed to load Companies</Notification>);\r\n      });\r\n\r\n    if (id) {\r\n      getApi(APIS.LIST_DATA, {\r\n        type: LIST_DATA_API_TYPE.ADMINS,\r\n        id,\r\n      }).then((res) => {\r\n        const response = res?.data?.data;\r\n        response.superAdmin = response.superAdmin ? true : false;\r\n        response.roles = response.roles ? response.roles : PERMISSIONS;\r\n        setEditData(response);\r\n      });\r\n    }\r\n  }, [id]);\r\n  //// SUBMIT TAGS HANDLER///////\r\n\r\n\r\n\r\n  const onSubmit = ({ name, email, roles, superAdmin, company }, {setSubmitting}) => {\r\n    const mergedRoles = PERMISSIONS.map((permission) => {\r\n      const existingRole = roles?.find((role) => role.name === permission.name);\r\n      return existingRole || permission;\r\n    });\r\n  \r\n    setLoading(true);\r\n    const payload = new FormData();\r\n    payload.append('name', name);\r\n    payload.append('email', email);\r\n    payload.append('superAdmin', superAdmin);\r\n    \r\n    if (!superAdmin) {\r\n      if (company.length === 1) {\r\n        payload.append('companyIds', JSON.stringify(company));\r\n      } else {\r\n        company.forEach((compId) => payload.append('companyId', compId));\r\n      }\r\n    }\r\n    \r\n    payload.append('roles', JSON.stringify(mergedRoles));\r\n    if (id) {\r\n      payload.append('adminId', id);\r\n    }\r\n  \r\n    postApi(APIS.ADD_EDIT_ADMINS, payload)\r\n      .then(() => {\r\n        navigate(-1);\r\n        toast.push(<Notification type=\"success\">Sub admin saved!</Notification>);\r\n      })\r\n      .catch(()=>{\r\n        setSubmitting(false)\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n  \r\n  return (\r\n    <AdaptableCard>\r\n      <Formik\r\n        innerRef={formRef}\r\n        initialValues={editData || initialValues}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={onSubmit}\r\n        enableReinitialize\r\n      >\r\n        {({ errors, touched, setFieldValue, isSubmitting, values }) => (\r\n          <Form className=\"p-5\">\r\n            <div className=\"flex mb-3 justify-end w-3/4\">\r\n              <Button size=\"sm\" variant=\"solid\" onClick={() => navigate(-1)} type=\"button\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"solid\"\r\n                style={{ marginLeft: '5px' }}\r\n                loading={isSubmitting}\r\n                type=\"submit\"\r\n              >\r\n                {id ? 'Update' : 'Save'}\r\n              </Button>\r\n            </div>\r\n            {loading && (\r\n              <div className=\"flex justify-center\">\r\n                <Spinner size=\"3.25rem\" />\r\n              </div>\r\n            )}\r\n            {!loading && (\r\n              <Card className=\"mt-2.5 w-3/4 \">\r\n                <FormContainer>\r\n                  <FormItem\r\n                    label=\"Name\"\r\n                    invalid={errors?.name && touched?.name}\r\n                    errorMessage={errors?.name}\r\n                  >\r\n                    <Field\r\n                      type=\"text\"\r\n                      autoComplete=\"off\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter name \"\r\n                      component={Input}\r\n                    />\r\n                  </FormItem>\r\n\r\n                  <FormItem\r\n                    label=\"Email\"\r\n                    invalid={errors?.email && touched?.email}\r\n                    errorMessage={errors?.email}\r\n                  >\r\n                    <Field\r\n                      type=\"email\"\r\n                      autoComplete=\"off\"\r\n                      name=\"email\"\r\n                      placeholder=\"Enter Email\"\r\n                      component={Input}\r\n                    />\r\n                  </FormItem>\r\n\r\n                  {superAdmin && (\r\n                    <>\r\n                      <div className=\"flex justify-between\">\r\n                        <p className=\"font-semibold\">Is Super Admin?</p>\r\n                        <Switcher\r\n                          name=\"superAdmin\"\r\n                          checked={values?.superAdmin}\r\n                          onChange={(val,) => {\r\n                            console.log(\"checked\", val);\r\n\r\n                            setFieldValue('superAdmin', !val);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      {!values?.superAdmin && <>\r\n                        <FormItem label=\"Company\" invalid={errors.company && touched.company} errorMessage={errors.company}>\r\n                          <Select\r\n                            name=\"Company\"\r\n                            options={companyOptions}\r\n                            placeholder=\"Select Company\"\r\n                            isMulti // Enables multi-select\r\n                            value={companyOptions.filter((option) => values.company?.includes(option.value))} // Handles multiple selected values\r\n                            onChange={(selectedOptions) => setFieldValue(\"company\", selectedOptions.map(option => option.value))} // Stores an array of selected values\r\n                          />\r\n                        </FormItem>\r\n                        <AccessControl setFieldValue={setFieldValue} values={values} /></>}\r\n                    </>\r\n                  )}\r\n                </FormContainer>\r\n              </Card>\r\n            )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </AdaptableCard>\r\n    // </Drawer>\r\n  );\r\n};\r\n\r\nexport default AddEditAdmins;\r\n"],"names":["getApi","endpoint","params","BaseService","then","res","data","postApi","payload","apiGetSearchResult","ApiService","url","method","PERMISSIONS","label","name","read","edit","delete","touched","errors","values","setFieldValue","selectHandler","role","value","newRoles","roles","map","x","className","THead","Tr","Th","TBody","permission","index","valueObj","find","Td","checked","onChange","e","SignupSchema","Yup","shape","required","email","initialValues","superAdmin","formRef","useRef","useState","loading","setLoading","editData","setEditData","companyOptions","setCompanyOptionos","id","useParams","navigate","useNavigate","useSelector","state","auth","user","useEffect","APIS","type","LIST_DATA_API_TYPE","Array","isArray","locations","location","_id","toast","catch","error","console","response","innerRef","validationSchema","onSubmit","company","setSubmitting","mergedRoles","FormData","append","length","JSON","stringify","forEach","compId","finally","enableReinitialize","isSubmitting","size","variant","onClick","style","marginLeft","invalid","errorMessage","autoComplete","placeholder","component","Input","val","log","options","isMulti","filter","option","includes","selectedOptions"],"sourceRoot":""}
{"version":3,"file":"static/js/1154.1a8d7b6b.chunk.js","mappings":"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","sources":["assets/icon.js","components/custom/ConfirmationContent/index.js","components/custom/actionColumn/index.js","components/custom/exportContent/index.js","utils/isLastChild.js","components/template/Notification.js","components/ui/TableSearchBar/index.js","services/CommonService.js","utils/hoc/withHeaderItem.js","utils/hooks/useResponsive.js","views/orderManagement/serviceOrder/header/index.js","views/orderManagement/serviceOrder/confirmation/calendorSection/index.js","views/orderManagement/serviceOrder/confirmation/downloadSection/index.js","views/orderManagement/serviceOrder/confirmation/insuranceSection/index.js","views/orderManagement/serviceOrder/confirmation/statusChange/index.js","views/orderManagement/serviceOrder/confirmation/index.js","views/orderManagement/serviceOrder/index.js","views/orderManagement/serviceOrder/serviceConstant/index.js"],"sourcesContent":["export const IMAGES = {\n  VIEW_IMAGE: \"/img/prescription.png\",\n  REPLY: \"/img/reply.png\",\n  STATUS: \"/img/status.png\",\n  EXPORT: \"/img/fileExport.svg\",\n  RECEIPT: \"/img/receipt.svg\",\n  DOWNLOAD_PDF: \"/img/download.png\",\n};\n","import React from \"react\";\nimport { Button, Dialog } from \"components/ui\";\n\nconst ConfirmationContent = ({\n  header,\n  des,\n  onDialogClose,\n  isWarning,\n  onConfirmClick,\n  isOpen,\n  buttonLabel,\n}) => {\n  return (\n    <Dialog\n      isOpen={isOpen}\n      onClose={onDialogClose}\n      onRequestClose={onDialogClose}\n      contentClassName=\"pb-0 px-0 mt-36 min-w-36\"\n    >\n      <div className=\"px-5 pb-5\">\n        <h5 className=\"mb-4\">{header}</h5>\n        <p>{des}</p>\n        {isWarning && <p className=\"text-red-700\">{isWarning}</p>}\n        <div className=\"text-right mt-6\">\n          <Button\n            className=\"ltr:mr-2 rtl:ml-2\"\n            variant=\"plain\"\n            onClick={onDialogClose}\n          >\n            Cancel\n          </Button>\n          <Button variant=\"solid\" onClick={onConfirmClick}>\n            {buttonLabel}\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default ConfirmationContent;\n","import useThemeClass from 'utils/hooks/useThemeClass';\nimport { Tooltip } from 'components/ui';\n\nconst ActionColumn = ({ row, onActionHandle, actionsMenu }) => {\n  const { textTheme } = useThemeClass();\n\n  return (\n    <div className=\"flex items-center justify-between\">\n      {actionsMenu?.map((item, i) => {\n        if (item?.show?.() ?? true) {\n          return (\n            <Tooltip title={item?.toolTip} visible={item?.toolTip ? true : false}>\n              {item?.isImage ? (\n                <img\n                  src={item.label}\n                  alt=\"view Icon\"\n                  style={{ maxWidth: '20px' }}\n                  // h-5 justify-center ml-5 text-blue-400\n                  className=\"cursor-pointer mx-0.5\"\n                  onClick={(e) => onActionHandle(e, item.key, row)}\n                />\n              ) : (\n                <span\n                  className={`${textTheme} cursor-pointer select-none font-semibold ml-2 `}\n                  onClick={(e) => onActionHandle(e, item.key, row)}\n                >\n                  {item.label}\n                </span>\n              )}\n            </Tooltip>\n          );\n        }\n      })}\n    </div>\n  );\n};\n\nexport default ActionColumn;\n","import {\n  Button,\n  Dialog,\n  Notification,\n  toast,\n} from 'components/ui';\nimport appConfig from 'configs/app.config';\nimport { APIS } from 'constants/api.constant';\nimport React from 'react';\nimport { postApi } from 'services/CommonService';\n\nconst ExportContent = ({ type, onDialogClose, isOpen, user, Payload }) => {\n  const onSubmit = () => {\n    const payload = { type, ...Payload };\n    \n    if (user) {\n      payload.userId = user?._id;\n    }\n\n    postApi(APIS.EXPORT_DATA, payload).then((res) => {\n      toast.push(<Notification type=\"success\">Exported successfully</Notification>);\n      const downloadLink = document.createElement('a');\n      downloadLink.href = appConfig.imageBaseUrl + res?.data?.fileName; // Replace with the actual URL of your file\n      downloadLink.download = 'file_name.xlsx'; // Replace with the desired file name\n\n      // Trigger a click event on the download link\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n      onDialogClose();\n    }).catch(error => {\n      toast.push(<Notification type=\"error\">Export failed: {error.message}</Notification>);\n    });\n  };\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      onClose={onDialogClose}\n      onRequestClose={onDialogClose}\n      contentClassName=\"pb-0 px-0 mt-36 min-w-36\"\n    >\n      <div className=\"p-6\">\n        <p className=\"text-md mb-6 font-bold \">Please download the Excel file for the data.</p>\n        <div className=\"text-right mt-6\">\n          {/* <Button\n            className=\"ltr:mr-2 rtl:ml-2\"\n            variant=\"plain\"\n            onClick={onDialogClose}\n            type=\"button\"\n          >\n            Cancel\n          </Button> */}\n          <Button \n            variant=\"solid\" \n            type=\"button\" \n            onClick={onSubmit}\n          >\n            Export/Download File\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default ExportContent;\n","export default function isLastChild (arr, index) {\n    return arr.length === (index + 1)\n}","import React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport classNames from \"classnames\";\nimport withHeaderItem from \"utils/hoc/withHeaderItem\";\nimport {\n  Avatar,\n  Dropdown,\n  ScrollBar,\n  Spinner,\n  Badge,\n  Button,\n  Tooltip,\n} from \"components/ui\";\nimport {\n  HiOutlineBell,\n  HiOutlineCalendar,\n  HiOutlineClipboardCheck,\n  HiOutlineBan,\n  HiOutlineMailOpen,\n} from \"react-icons/hi\";\nimport {\n  apiGetNotificationList,\n  apiGetNotificationCount,\n  getApi,\n  postApi,\n} from \"services/CommonService\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport isLastChild from \"utils/isLastChild\";\nimport useTwColorByName from \"utils/hooks/useTwColorByName\";\nimport useThemeClass from \"utils/hooks/useThemeClass\";\nimport { useSelector } from \"react-redux\";\nimport useResponsive from \"utils/hooks/useResponsive\";\nimport acronym from \"utils/acronym\";\nimport { APIS } from \"constants/api.constant\";\nimport dayjs from \"dayjs\";\nimport { DATE_TIME_FORMAT } from \"constants/app.constant\";\n\nconst notificationHeight = \"h-72\";\nconst imagePath = \"/img/avatars/\";\n\nconst GeneratedAvatar = ({ target }) => {\n  const color = useTwColorByName();\n  return (\n    <Avatar shape=\"circle\" className={`${color(target)}`}>\n      {acronym(target)}\n    </Avatar>\n  );\n};\n\nconst notificationTypeAvatar = (data) => {\n  const { type, target, image, status } = data;\n  switch (type) {\n    case 0:\n      if (image) {\n        return <Avatar shape=\"circle\" src={`${imagePath}${image}`} />;\n      } else {\n        return <GeneratedAvatar target={target} />;\n      }\n    case 1:\n      return (\n        <Avatar\n          shape=\"circle\"\n          className=\"bg-blue-100 text-blue-600 dark:bg-blue-500/20 dark:text-blue-100\"\n          icon={<HiOutlineCalendar />}\n        />\n      );\n    case 2:\n      const statusSucceed = status === \"succeed\";\n      const statusColor = statusSucceed\n        ? \"bg-emerald-100 text-emerald-600 dark:bg-emerald-500/20 dark:text-emerald-100\"\n        : \"bg-red-100 text-red-600 dark:bg-red-500/20 dark:text-red-100\";\n      const statusIcon = statusSucceed ? (\n        <HiOutlineClipboardCheck />\n      ) : (\n        <HiOutlineBan />\n      );\n      return (\n        <Avatar shape=\"circle\" className={statusColor} icon={statusIcon} />\n      );\n    default:\n      return <Avatar />;\n  }\n};\nconst ADMIN_NOTIFICATION_TYPE = {\n  ECOM_ORDER: 1,\n  SERVICE_ORDER: 2,\n  CANCEL_REQUEST: 3,\n  PATIENT_ADD: 4,\n  PROVIDER_ADD: 5,\n  STAFF_ADD: 6,\n  FEEDBACK_ADD: 7,\n  CUSTOMER_QUERY_ADD: 8,\n  PRODUCT_QUANTITY_LESS: 9,\n};\n\nconst NotificationToggle = ({ className, content }) => {\n  return (\n    <div className={classNames(\"text-2xl\", className)}>\n      {content ? (\n        <Badge badgeStyle={{ top: \"3px\", right: \"6px\" }} content={content}>\n          <HiOutlineBell />\n        </Badge>\n      ) : (\n        <HiOutlineBell />\n      )}\n    </div>\n  );\n};\n\nexport const Notification = ({ className }) => {\n  const [notificationList, setNotificationList] = useState([]);\n  const listInnerRef = useRef();\n  const [currPage, setCurrPage] = useState(0);\n  const [prevPage, setPrevPage] = useState(0);\n  const [lastList, setLastList] = useState(false);\n  const [count, setCount] = useState();\n  const [noResult, setNoResult] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const navigate = useNavigate();\n  const { bgTheme } = useThemeClass();\n\n  const { larger } = useResponsive();\n\n  const direction = useSelector((state) => state.theme.direction);\n\n  const navigationHandler = (type, id) => {\n    switch (type) {\n      case ADMIN_NOTIFICATION_TYPE.ECOM_ORDER:\n        navigate(`/app/orderManagement/ecom-order/view/${id}`);\n        break;\n      case ADMIN_NOTIFICATION_TYPE.SERVICE_ORDER:\n        navigate(`/app/service-order/view/${id}`);\n        break;\n      case ADMIN_NOTIFICATION_TYPE.CANCEL_REQUEST:\n        navigate(`/app/order-management/cancel-request/order-reply/${id}`);\n        break;\n      case ADMIN_NOTIFICATION_TYPE.PATIENT_ADD:\n        navigate(`/app/patient/edit/${id}`);\n        break;\n      case ADMIN_NOTIFICATION_TYPE.PROVIDER_ADD:\n        navigate(`/app/provider/edit/${id}`);\n        break;\n      case ADMIN_NOTIFICATION_TYPE.STAFF_ADD:\n        navigate(`/app/staff/edit/${id}`);\n        break;\n      case ADMIN_NOTIFICATION_TYPE.FEEDBACK_ADD:\n        navigate(`/app/users-feedback`);\n        break;\n      case ADMIN_NOTIFICATION_TYPE.CUSTOMER_QUERY_ADD:\n        navigate(`/app/contact-queries`);\n        break;\n      case ADMIN_NOTIFICATION_TYPE.PRODUCT_QUANTITY_LESS:\n        navigate(`/app/products/edit/${id}`);\n        break;\n      default:\n        return false;\n    }\n  };\n\n  const fetchNotifications = () => {\n    // setLoading(true);\n    // getApi(APIS.GET_NOTIFICATION, { limit: 10, skip: currPage * 10 }) // Pass limit and skip as parameters\n    //   .then((res) => {\n    //     setLoading(false);\n    //     setNoResult(false);\n    //     setCount(res?.data?.unread);\n    //     setNotificationList((prevList) => [...prevList, ...res?.data?.data]);\n    //     if (res?.data?.count === 0) {\n    //       setNoResult(true);\n    //     }\n    //     if (!res.data.data.length) {\n    //       setLastList(true);\n    //       return;\n    //     }\n    //     setPrevPage(currPage);\n    //   })\n    //   .finally(() => {\n    //     setLoading(false);\n    //   });\n  };\n  useEffect(() => {\n    fetchNotifications();\n    const intervalId = setInterval(fetchNotifications, 60000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  useEffect(() => {\n    if (!lastList && prevPage !== currPage) {\n      fetchNotifications();\n    }\n  }, [currPage, lastList, prevPage]);\n  const onScroll = () => {\n    if (listInnerRef.current) {\n      const { scrollTop, scrollHeight, clientHeight } = listInnerRef.current;\n      if (scrollTop + clientHeight === scrollHeight) {\n        setCurrPage(currPage + 1);\n      }\n    }\n  };\n  // const onMarkAllAsRead = useCallback(() => {\n  //   const list = notificationList.map((item) => {\n  //     if (!item.readed) {\n  //       item.readed = true;\n  //     }\n  //     return item;\n  //   });\n  //   setNotificationList(list);\n  //   setUnreadNotification(false);\n  // }, [notificationList]);\n\n  const onMarkAsRead = (id) => {\n    const list = notificationList.map((item) => {\n      if (item.id === id) {\n        console.log();\n        postApi(APIS.UNREAD_NOTIFICATION, { id });\n        navigationHandler(item?.type, item?.recordId);\n      }\n      return item;\n    });\n    setNotificationList(list);\n  };\n\n  return (\n    <Dropdown\n      renderTitle={<NotificationToggle content={count} className={className} />}\n      menuClass=\"p-0 min-w-[280px] md:min-w-[540px]\"\n      placement={larger.md ? \"bottom-end\" : \"bottom-center\"}\n      onOpen={fetchNotifications}\n    >\n      <Dropdown.Item variant=\"header\">\n        <div className=\"border-b border-gray-200 dark:border-gray-600 px-4 py-2 flex items-center justify-between\">\n          <h6>Notifications</h6>\n          <Tooltip title=\"Mark all as read\">\n            {/* <Button\n              variant=\"plain\"\n              shape=\"circle\"\n              size=\"sm\"\n              icon={<HiOutlineMailOpen className=\"text-xl\" />}\n              // onClick={onMarkAllAsRead}\n            /> */}\n          </Tooltip>\n        </div>\n      </Dropdown.Item>\n      <div\n        ref={listInnerRef}\n        onScroll={onScroll}\n        className={classNames(\"overflow-y-auto\", notificationHeight)}\n      >\n        {/* <ScrollBar direction={direction}> */}\n        {notificationList.length > 0 &&\n          notificationList.map((item, index) => (\n            <Dropdown.Item\n              key={item.id}\n              className={` relative flex px-4 py-4 cursor-pointer hover:bg-gray-50 active:bg-gray-100 dark:hover:bg-black dark:hover:bg-opacity-20  ${\n                !isLastChild(notificationList, index)\n                  ? \"border-b border-gray-200 dark:border-gray-600\"\n                  : \"\"\n              }`}\n              onClick={() => onMarkAsRead(item.id)}\n            >\n              {/* <div>{notificationTypeAvatar(item)}</div> */}\n              <div className=\"ltr:ml-3 rtl:mr-3 \">\n                <div>\n                  {item.title && (\n                    <div className=\"font-semibold heading-text\">\n                      {item.title}{\" \"}\n                    </div>\n                  )}\n                  <p>{item.body}</p>\n                </div>\n                <div className=\"text-xs\">\n                  {dayjs(item.createdAt).format(DATE_TIME_FORMAT)}\n                </div>\n              </div>\n              <Badge\n                className=\"absolute top-4 ltr:right-4 rtl:left-4 mt-1.5\"\n                innerClass={`${item.isRead === 1 ? \"bg-gray-300\" : bgTheme} `}\n              />\n            </Dropdown.Item>\n          ))}\n        {loading && (\n          <div\n            className={classNames(\n              \"flex items-center justify-center\",\n              notificationHeight\n            )}\n          >\n            <Spinner size={40} />\n          </div>\n        )}\n        {noResult && (\n          <div\n            className={classNames(\n              \"flex items-center justify-center\",\n              notificationHeight\n            )}\n          >\n            <div className=\"text-center\">\n              <img\n                className=\"mx-auto mb-2 max-w-[150px]\"\n                src=\"/img/others/no-notification.png\"\n                alt=\"no-notification\"\n              />\n              <h6 className=\"font-semibold\">No notifications!</h6>\n              <p className=\"mt-1\">Please Try again later</p>\n            </div>\n          </div>\n        )}\n        {/* </ScrollBar> */}\n      </div>\n      {/* <Dropdown.Item variant=\"header\">\n        <div className=\"flex justify-center border-t border-gray-200 dark:border-gray-600 px-4 py-2\">\n          <Link\n            to=\"/app/account/activity-log\"\n            className=\"font-semibold cursor-pointer p-2 px-3 text-gray-600 hover:text-gray-900 dark:text-gray-200 dark:hover:text-white\"\n          >\n            View All Activity\n          </Link>\n        </div>\n      </Dropdown.Item> */}\n    </Dropdown>\n  );\n};\n\nexport default withHeaderItem(Notification);\n","import React from 'react';\nimport { Input } from 'components/ui';\nimport { HiOutlineSearch } from 'react-icons/hi';\nimport debounce from 'lodash/debounce';\n\nconst TableSearchBar = ({ onChange, placeholder }) => {\n  const debounceFn = debounce(handleDebounceFn, 500);\n\n  function handleDebounceFn(val) {\n    onChange?.(val);\n  }\n\n  const handleInputChange = (e) => {\n    debounceFn(e.target.value);\n  };\n\n  return (\n    <Input\n      className=\"max-w-md md:w-96 mb-4\"\n      size=\"sm\"\n      placeholder={placeholder ? `${placeholder}` : 'Filter by NAL, LCode, Referring Physician'}\n      prefix={<HiOutlineSearch className=\"text-lg\" />}\n      onChange={handleInputChange}\n    />\n  );\n};\n\nexport default TableSearchBar;\n","import ApiService from \"./ApiService\"\nimport BaseService from \"./BaseService\";\n\nexport function getApi(endpoint, params) {\n  return BaseService.get(endpoint, { params }).then((res) => res?.data);\n}\n\nexport function postApi(endpoint, payload) {\n  return BaseService.post(endpoint, payload).then((res) => res?.data);\n}\n\nexport async function apiGetNotificationCount () {\n    return ApiService.fetchData({\n        url: '/notification/count',\n        method: 'get'\n    })\n}\n\nexport async function apiGetNotificationList () {\n    return ApiService.fetchData({\n        url: '/notification/list',\n        method: 'get'\n    })\n}\n\nexport async function apiGetSearchResult (data) {\n    return ApiService.fetchData({\n        url: '/search/query',\n        method: 'post',\n        data\n    })\n}","import React from 'react'\nimport classNames from 'classnames'\n\nconst withHeaderItem = Component => props => {\n\n\tconst { className, hoverable = true } = props\n\n\treturn (\n\t\t<Component \n\t\t\t{...props} \n\t\t\tclassName={\n\t\t\t\tclassNames(\n\t\t\t\t\t'header-action-item',\n\t\t\t\t\thoverable && 'header-action-item-hoverable',\n\t\t\t\t\tclassName\n\t\t\t\t)}  \n\t\t/>\n\t)\n}\n\nexport default withHeaderItem\n","import { useEffect, useState } from 'react'\nimport { theme } from 'twin.macro'\n\nconst twBreakpoint = theme`screens`\n\nconst breakpointInt = (str = '') => {\n\treturn parseInt(str.replace('px',''))\n}\n\nconst breakpoint = {\n\t'2xl': breakpointInt(twBreakpoint['2xl']),  // 1536\n\txl: breakpointInt(twBreakpoint.xl), // 1280\n\tlg: breakpointInt(twBreakpoint.lg), // 1024\n\tmd: breakpointInt(twBreakpoint.md), // 768\n\tsm: breakpointInt(twBreakpoint.sm), // 640\n\txs: breakpointInt(twBreakpoint.xs), // 576\n}\n\nconst useResponsive = () => {\n\n\tconst getAllSizes = (comparator = 'smaller') => {\n\t\tconst currentWindowWidth = window.innerWidth\n\t\treturn Object.fromEntries(\n\t\t\tObject.entries(breakpoint).map(\n\t\t\t\t([key, value]) => [key, comparator === 'larger' ? (currentWindowWidth > value) : (currentWindowWidth < value)]\n\t\t\t)\n\t\t)\n\t}\n\n\tconst getResponsiveState = () => {\n\t\tconst currentWindowWidth = window.innerWidth\n\t\treturn { \n\t\t\twindowWidth: currentWindowWidth,\n\t\t\tlarger: getAllSizes('larger'),\n\t\t\tsmaller: getAllSizes('smaller')\n\t\t}\n\t}\n\n\tconst [responsive, setResponsive] = useState(getResponsiveState())\n\n\tconst resizeHandler = () => {\n\t\tconst responsiveState = getResponsiveState()\n\t\tsetResponsive(responsiveState)\n\t}\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', resizeHandler)\n\t\treturn () => window.removeEventListener('resize', resizeHandler)\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [responsive.windowWidth])\n\n\treturn responsive\n}\n\nexport default useResponsive","import React from 'react';\r\nimport { Button, DatePicker, Select, Tooltip } from 'components/ui';\r\nimport { GrPowerReset } from 'react-icons/gr';\r\nimport TableSearchBar from 'components/ui/TableSearchBar';\r\nimport { getApi } from 'services/CommonService';\r\nimport { APIS, LIST_DATA_API_TYPE } from 'constants/api.constant';\r\nimport { debounce, filter } from 'lodash';\r\nimport AsyncSelect from 'react-select/async';\r\nimport { DATE_FORMAT } from 'constants/app.constant';\r\nimport moment from 'moment';\r\nimport { SERVICE_ORDER_STATUS } from '../serviceConstant';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst FilterSection = ({\r\n  setSearch,\r\n  filtervalue,\r\n  setFilterValue,\r\n  setFilterPatientId,\r\n  filterPatientId,\r\n  selectedDate,\r\n  setSelectedDate,\r\n  filterPatientDob,\r\n  setFilterPatientDob,\r\n  filterNad,\r\n  setFilterNad,\r\n}) => {\r\n  const loadPatientsOption = (inputValue, resolve) => {\r\n    getApi(APIS.LIST_DATA, { type : LIST_DATA_API_TYPE.PATIENTS,\r\n      search: inputValue,\r\n    }).then((result) => {\r\n      resolve(result?.data?.data);\r\n    });\r\n  };\r\n  const loadStays = debounce(loadPatientsOption, 300);\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"grid grid-cols-3 gap-4 mb-5\">\r\n      <TableSearchBar onChange={(query) => setSearch(query)} />\r\n      <Select\r\n        autoComplete=\"off\"\r\n        size=\"sm\"\r\n        className=\"mb-4 w-30\"\r\n        placeholder=\"Filter by Order Status\"\r\n        options={SERVICE_ORDER_STATUS}\r\n        value={filtervalue}\r\n        onChange={(selectedValue) => {\r\n          setFilterValue(selectedValue);\r\n        }}\r\n      />\r\n\r\n      <Select\r\n        autoComplete=\"off\"\r\n        placeholder=\"Filter by Patient (Name, Phone, ID)\"\r\n        defaultOptions\r\n        cacheOptions\r\n        size=\"sm\"\r\n        className=\"mb-4\"\r\n        value={filterPatientId}\r\n        loadOptions={loadStays}\r\n        componentAs={AsyncSelect}\r\n        getOptionLabel={(v) => `${v?.firstName} ${v?.lastName ? v?.lastName : ''} ${v?.patientNo ? `(${v?.patientNo})` : ''} ${v?.dob ? `(${moment(v?.dob).format(DATE_FORMAT)})` : ''}`}\r\n        getOptionValue={(v) => v?._id}\r\n        onChange={(event) => {\r\n          setFilterPatientId(event);\r\n        }}\r\n      />\r\n\r\n      <DatePicker\r\n        inputtable\r\n        clearable={false}\r\n        className=\"\"\r\n        placeholder={`Filter by Patient DOB ${DATE_FORMAT}`}\r\n        size=\"sm\"\r\n        name=\"patientDob\"\r\n        inputFormat={DATE_FORMAT}\r\n        maxDate={new Date()}\r\n        value={filterPatientDob}\r\n        onChange={(date) =>\r\n          setFilterPatientDob(moment(date).format(DATE_FORMAT))\r\n        }\r\n      />\r\n    \r\n      <DatePicker\r\n        clearable={false}\r\n        className=\"\"\r\n        placeholder=\"Order Start Date\"\r\n        size=\"sm\"\r\n        name=\"startDate\"\r\n        inputFormat={DATE_FORMAT}\r\n        maxDate={selectedDate?.endDate ? new Date(selectedDate?.endDate) : new Date()}\r\n        value={selectedDate?.startDate}\r\n        onChange={(date) =>\r\n          setSelectedDate({ ...selectedDate, startDate: moment(date).format(DATE_FORMAT) })\r\n        }\r\n      />\r\n      <DatePicker\r\n        clearable={false}\r\n        name=\"endDate\"\r\n        className=\"\"\r\n        placeholder=\"Order End Date\"\r\n        size=\"sm\"\r\n        inputFormat={DATE_FORMAT}\r\n        minDate={selectedDate?.startDate ? new Date(selectedDate?.startDate) : null}\r\n        maxDate={new Date()}\r\n        value={selectedDate?.endDate}\r\n        onChange={(date) =>\r\n          setSelectedDate({ ...selectedDate, endDate: moment(date).format(DATE_FORMAT) })\r\n        }\r\n      />\r\n      <DatePicker\r\n        inputtable\r\n        clearable={false}\r\n        className=\"\"\r\n        placeholder=\"Filter By NAD\"\r\n        size=\"sm\"\r\n        name=\"nad\"\r\n        inputFormat={DATE_FORMAT}\r\n        value={filterNad}\r\n        onChange={(date) =>\r\n          setFilterNad(moment(date).format(DATE_FORMAT))\r\n        }\r\n      />\r\n      <Button\r\n        size=\"sm\"\r\n        onClick={() => {\r\n          setFilterPatientDob(null);\r\n          setFilterValue('');\r\n          setFilterPatientId('');\r\n          setSelectedDate({ startDate: null, endDate: null});\r\n          setFilterNad(null)\r\n          navigate('/app/orderManagement/service-order');\r\n        }}\r\n        icon={<GrPowerReset />}\r\n      >\r\n        Reset\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Header = ({\r\n  setSearch,\r\n  buttonMenu,\r\n  buttonClick,\r\n  filtervalue,\r\n  setFilterValue,\r\n  setFilterPatientId,\r\n  filterPatientId,\r\n  selectedDate,\r\n  setSelectedDate,\r\n  filterPatientDob,\r\n  setFilterPatientDob,\r\n  filterNad,\r\n  setFilterNad,\r\n}) => {\r\n  const ButtonSection = ({buttonClick, buttonMenu}) => {\r\n    return (\r\n      <div className=\"mb-4 \">\r\n       {buttonMenu?.map((btn, i, arr) => {\r\n        return (\r\n          <Button\r\n            key={i}\r\n            size=\"sm\"\r\n            variant=\"solid\"\r\n            onClick={(e) => buttonClick(e, btn.key)}\r\n            style={{ marginLeft: \"5px\" }}\r\n            icon={btn.icon}\r\n          >\r\n            {btn.label}\r\n          </Button>\r\n        );\r\n      })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"md:flex items-center justify-end\">\r\n      <ButtonSection buttonMenu={buttonMenu} buttonClick={buttonClick} />\r\n      </div>\r\n      <div className=\"items-center lg:flex\">\r\n        <FilterSection\r\n          selectedDate={selectedDate}\r\n          setSelectedDate={setSelectedDate}\r\n          setFilterPatientDob={setFilterPatientDob}\r\n          filterPatientDob={filterPatientDob}\r\n          setSearch={setSearch}\r\n          setFilterValue={setFilterValue}\r\n          filtervalue={filtervalue}\r\n          setFilterPatientId={setFilterPatientId}\r\n          filterPatientId={filterPatientId}\r\n          setFilterNad={setFilterNad}\r\n          filterNad={filterNad}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport { DatePicker } from \"components/ui\";\nimport { FormItem, Input, TimeInput } from \"components/ui\";\nimport { Field } from \"formik\";\nimport { StickyFooter } from \"components/shared\";\nimport { Button, FormContainer } from \"components/ui\";\nimport { AiOutlineSave } from \"react-icons/ai\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport Datetime from \"react-datetime\";\nimport \"react-datetime/css/react-datetime.css\";\nimport { DATE_FORMAT } from \"constants/app.constant\";\n\n////// YUP VALIDATION //////\n\nconst AppoinmentSchema = Yup.object().shape({\n  appointmentDate: Yup.string().required(\"Required\"),\n  appointmentTime: Yup.string().required(\"Required\"),\n  appointmentAddress: Yup.string().required(\"Required\"),\n});\n\n///// INITIAL VALUES //////\n\nconst CalendorSection = ({ onSubmit, selectedData }) => {\n  return (\n    <Formik\n      initialValues={{\n        appointmentDate:\n          selectedData?.appointmentDate !== null\n            ? new Date(selectedData?.appointmentDate)\n            : \"\",\n        appointmentTime:\n          selectedData?.appointmentTime !== null\n            ? new Date(selectedData?.appointmentTime)\n            : \"\",\n        appointmentAddress:\n          selectedData?.appointmentAddress !== null\n            ? selectedData?.appointmentAddress\n            : \"\",\n      }}\n      validationSchema={AppoinmentSchema}\n      onSubmit={onSubmit}\n      enableReinitialize\n    >\n      {({ errors, touched, values, isSubmitting, setFieldValue }) => (\n        <Form className=\"p-5\">\n          <FormContainer>\n            <FormItem\n              label=\"Appointment Date\"\n              invalid={errors?.appointmentDate && touched?.appointmentDate}\n              errorMessage={errors?.appointmentDate}\n            >\n              <DatePicker\n                value={values?.appointmentDate}\n                inputFormat={DATE_FORMAT}\n                name=\"appointmentDate\"\n                placeholder=\"Select appointment date\"\n                onChange={(date) => {\n                  setFieldValue(\"appointmentDate\", date);\n                }}\n              />\n            </FormItem>\n            <FormItem\n              label=\"Appointment Time\"\n              invalid={errors?.appointmentTime && touched?.appointmentTime}\n              errorMessage={errors?.appointmentTime}\n            >\n              <Datetime\n                onChange={(currentDate) => {\n                  if (!currentDate._isValid) {\n                  } else {\n                    setFieldValue(\"appointmentTime\", currentDate);\n                  }\n                }}\n                value={new Date(values?.appointmentTime)}\n                dateFormat={false}\n                timeFormat={\"hh:mm  A\"}\n                inputProps={{\n                  placeholder: \"Enter time\",\n                  style: {\n                    width: \"100%\",\n                    borderWidth: \"1px\",\n                    height: \"2.75rem\",\n                    borderRadius: \"0.375rem\",\n                    padding: \"0.5rem 0.75rem\",\n                  },\n                }}\n              />\n            </FormItem>\n            <FormItem\n              label=\"Appointment Address\"\n              invalid={\n                errors?.appointmentAddress && touched?.appointmentAddress\n              }\n              errorMessage={errors?.appointmentAddress}\n            >\n              <Field\n                textArea={true}\n                type=\"text\"\n                autoComplete=\"off\"\n                name=\"appointmentAddress\"\n                placeholder=\"Enter appointment address\"\n                component={Input}\n              />\n            </FormItem>\n\n            <StickyFooter\n              className=\"-mx-8 px-8 flex items-center justify-between py-4\"\n              stickyClass=\"border-t bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\"\n            >\n              <div></div>\n              <div className=\"md:flex items-center\">\n                <Button\n                  size=\"sm\"\n                  variant=\"solid\"\n                  loading={isSubmitting}\n                  type=\"submit\"\n                  icon={<AiOutlineSave />}\n                >\n                  Set Appoinment\n                </Button>\n              </div>\n            </StickyFooter>\n          </FormContainer>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CalendorSection;\n","import React from \"react\";\nimport { IMAGES } from \"../../../../../assets/icon\";\nimport { Tooltip } from \"components/ui\";\n\nconst DOCUMENT_CONSTANT = [\n  { label: \"Prescription\", value: 1 },\n  { label: \"Letter of Medical Necessity\", value: 2 },\n  { label: \"Insurance verification\", value: 3 },\n  { label: \"Insurance authorization\", value: 4 },\n  { label: \"Delivery Receipt\", value: 5 },\n];\n\nconst DownloadSection = ({ onSubmit, selectedData }) => {\n  return (\n    <div className=\"px-5 py-2.5\">\n      <div className=\"text-base font-bold mb-4\">\n        Selected Patient:{\" \"}\n        <span className=\"text-blue-900\">{`${selectedData?.patientId?.firstName} ${selectedData?.patientId?.lastName} (${selectedData?.patientId?.patientNo})`}</span>\n      </div>\n      {DOCUMENT_CONSTANT.map((item, i) => {\n        return (\n          <div\n            key={i}\n            className=\"my-2.5 w-7/12 flex justify-between font-bold text-blue-900 text-base\"\n          >\n            <div>\n              {i + 1}. {\"  \"}\n              {item?.label}\n            </div>\n            <Tooltip key={i} title={\"Download\"} visible={true}>\n              <img\n                src={IMAGES.DOWNLOAD_PDF}\n                alt=\"donwload Icon\"\n                style={{ maxWidth: \"20px\" }}\n                className=\"cursor-pointer mx-0.5\"\n                onClick={() => onSubmit(\"onDownload\")}\n              />\n            </Tooltip>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default DownloadSection;\n","import React from \"react\";\nimport { DatePicker } from \"components/ui\";\nimport AsyncSelect from \"react-select/async\";\nimport { Select, FormItem, Input } from \"components/ui\";\nimport { Field } from \"formik\";\nimport { AdaptableCard, StickyFooter } from \"components/shared\";\nimport { Button, FormContainer, toast, Notification } from \"components/ui\";\nimport { AiOutlineSave, AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { STATUS_OPTIONS } from \"constants/app.constant\";\n\n////// YUP VALIDATION //////\n\nconst InsuranceSectionSchema = Yup.object().shape({\n  insuranceStatus: Yup.object().required(\"Required\"),\n  insuranceAmount: Yup.number().required(\"Required\"),\n  insuranceNotes: Yup.string().required(\"Required\"),\n});\n\nconst InsuranceSection = ({ onSubmit, selectedData }) => {\n  return (\n    <Formik\n      initialValues={{\n        insuranceStatus:\n          selectedData?.insuranceStatus !== null\n            ? STATUS_OPTIONS.find(\n                (obj, i) => obj.value === selectedData?.insuranceStatus\n              )\n            : \"\",\n        insuranceAmount:\n          selectedData?.insuranceAmount !== null\n            ? selectedData?.insuranceAmount\n            : \"\",\n        insuranceNotes:\n          selectedData?.insuranceNotes !== null\n            ? selectedData?.insuranceNotes\n            : \"\",\n      }}\n      validationSchema={InsuranceSectionSchema}\n      onSubmit={onSubmit}\n      enableReinitialize\n    >\n      {({ errors, touched, values, isSubmitting, setFieldValue }) => (\n        <Form className=\"p-5\">\n          <FormContainer>\n            <FormItem\n              label=\"Insurance Status\"\n              invalid={errors?.insuranceStatus && touched?.insuranceStatus}\n              errorMessage={errors?.insuranceStatus}\n            >\n              <Field\n                component={Select}\n                autoComplete=\"off\"\n                placeholder=\"Select Status\"\n                defaultOptions\n                cacheOptions\n                options={STATUS_OPTIONS}\n                getOptionLabel={(v) => v?.label}\n                getOptionValue={(v) => v?.value}\n                onChange={(event) => setFieldValue(\"insuranceStatus\", event)}\n                name=\"insuranceStatus\"\n                value={values?.insuranceStatus}\n              />\n            </FormItem>\n            <FormItem\n              label=\"Insurance Amount in ($) (If Approved)\"\n              invalid={errors?.insuranceAmount && touched?.insuranceAmount}\n              errorMessage={errors?.insuranceAmount}\n            >\n              <Field\n                textArea={false}\n                type=\"number\"\n                autoComplete=\"off\"\n                name=\"insuranceAmount\"\n                placeholder=\"Enter Amount\"\n                component={Input}\n              />\n            </FormItem>\n            <FormItem\n              label=\"Remarks\"\n              invalid={errors?.insuranceNotes && touched?.insuranceNotes}\n              errorMessage={errors?.insuranceNotes}\n            >\n              <Field\n                textArea={true}\n                type=\"text\"\n                autoComplete=\"off\"\n                name=\"insuranceNotes\"\n                placeholder=\"Enter Remarks\"\n                component={Input}\n              />\n            </FormItem>\n\n            <StickyFooter\n              className=\"-mx-8 px-8 flex items-center justify-between py-4\"\n              stickyClass=\"border-t bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\"\n            >\n              <div></div>\n              <div className=\"md:flex items-center\">\n                <Button\n                  size=\"sm\"\n                  variant=\"solid\"\n                  loading={isSubmitting}\n                  icon={<AiOutlineSave />}\n                  type=\"submit\"\n                >\n                  Submit\n                </Button>\n              </div>\n            </StickyFooter>\n          </FormContainer>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default InsuranceSection;\n","import React from \"react\";\nimport { Select, FormItem } from \"components/ui\";\nimport { Field } from \"formik\";\nimport { StickyFooter } from \"components/shared\";\nimport { Button, FormContainer } from \"components/ui\";\nimport { AiOutlineSave } from \"react-icons/ai\";\nimport { Formik, Form } from \"formik\";\nimport { SERVICE_ORDER_STATUS } from \"../../serviceConstant\";\n\n///// INITIAL VALUES //////\n\nconst StatusChange = ({ onSubmit, selectedData }) => {\n  return (\n    <>\n      <Formik\n        initialValues={{\n          orderStatus: selectedData?.orderStatus,\n          id: selectedData?.id,\n        }}\n        onSubmit={onSubmit}\n        enableReinitialize\n      >\n        {({ errors, touched, values, isSubmitting, setFieldValue }) => (\n          <Form className=\"p-5\">\n            <FormContainer>\n              <FormItem label=\"Order Status\">\n                <Field\n                  component={Select}\n                  autoComplete=\"off\"\n                  name=\"orderStatus\"\n                  value={SERVICE_ORDER_STATUS.find(\n                    (obj, i) => obj.value === values?.orderStatus\n                  )}\n                  placeholder=\"Select Status\"\n                  options={SERVICE_ORDER_STATUS}\n                  defaultOptions\n                  onChange={(selectedValue) =>\n                    setFieldValue(\"orderStatus\", selectedValue)\n                  }\n                  cacheOptions\n                />\n              </FormItem>\n              <StickyFooter\n                className=\"-mx-8 px-8 flex items-center justify-between py-4\"\n                stickyClass=\"border-t bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\"\n              >\n                <div></div>\n                <div className=\"md:flex items-center\">\n                  <Button\n                    size=\"sm\"\n                    variant=\"solid\"\n                    loading={isSubmitting}\n                    icon={<AiOutlineSave />}\n                    type=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </div>\n              </StickyFooter>\n            </FormContainer>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default StatusChange;\n","import React, { useEffect, useState } from \"react\";\nimport CalendorSection from \"./calendorSection\";\nimport DownloadSection from \"./downloadSection\";\nimport InsuranceSection from \"./insuranceSection\";\nimport StatusChange from \"./statusChange\";\nimport { PAGE_KEY, MODAL_HEADER } from \"../serviceConstant\";\nimport { postApi } from \"services/CommonService\";\nimport { APIS } from \"constants/api.constant\";\nimport { Notification, toast } from \"components/ui\";\nimport {UPDATE_TOAST } from \"constants/app.constant\";\n\nconst Confirmation = ({ selectedKey, selectedData, closeDialog }) => {\n  const [dialogHeader, setDialogHeader] = useState();\n  const onSubmit = (payload) => {\n    if (selectedKey === PAGE_KEY.STATUS_CHANGE) {\n      payload.orderStatus = payload?.orderStatus?.value;\n      const formData = new FormData();\n      formData.append(\"id\", selectedData?._id);\n      formData.append(\"orderStatus\", payload?.orderStatus);\n      postApi(APIS.ADD_EDIT_PRESCRIPTION, formData).then((res) => {\n        toast.push(<Notification type=\"success\">{UPDATE_TOAST}</Notification>);\n        closeDialog();\n      });\n    }\n    if (selectedKey === PAGE_KEY.CALENDOR) {\n      postApi(APIS.ADD_EDIT_SERVICE_ORDER, {\n        ...payload,\n        id: selectedData?._id,\n      }).then((res) => {\n        toast.push(<Notification type=\"success\">{UPDATE_TOAST}</Notification>);\n        closeDialog();\n      });\n    }\n    if (selectedKey === PAGE_KEY.INSURANCE) {\n      payload.insuranceStatus = payload?.insuranceStatus?.value;\n      postApi(APIS.ADD_EDIT_SERVICE_ORDER, {\n        ...payload,\n        id: selectedData?.id,\n      }).then((res) => {\n        toast.push(<Notification type=\"success\">{UPDATE_TOAST}</Notification>);\n        closeDialog();\n      });\n    }\n  };\n\n  useEffect(() => {\n    setDialogHeader(MODAL_HEADER[selectedKey]);\n  }, [selectedKey]);\n\n  return (\n    \n        <div style={{ minHeight: \"250px\" }}>\n          <div className=\"text-base font-bold\tpl-5\">{dialogHeader}</div>\n          {selectedKey === PAGE_KEY.CALENDOR && (\n            <CalendorSection onSubmit={onSubmit} selectedData={selectedData} />\n          )}\n          {selectedKey === PAGE_KEY.DOWNLOAD && (\n            <DownloadSection onSubmit={onSubmit} selectedData={selectedData} />\n          )}\n          {selectedKey === PAGE_KEY.INSURANCE && (\n            <InsuranceSection onSubmit={onSubmit} selectedData={selectedData} />\n          )}\n          {selectedKey === PAGE_KEY.STATUS_CHANGE && (\n            <StatusChange onSubmit={onSubmit} selectedData={selectedData} />\n          )}\n\n        </div>\n    \n\n  );\n};\nexport default Confirmation;\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./header\";\r\nimport { AdaptableCard, DataTable } from \"components/shared\";\r\n// import useThemeClass from \"utils/hooks/useThemeClass\";\r\nimport { getApi, postApi } from \"services/CommonService\";\r\nimport { APIS, LIST_DATA_API_TYPE } from \"constants/api.constant\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Dialog, Tag, toast } from \"components/ui\";\r\nimport Confirmation from \"./confirmation\";\r\nimport {\r\n  PAGE_KEY,\r\n  SERVICE_ORDER_STATUS,\r\n} from \"./serviceConstant\";\r\nimport dayjs from \"dayjs\";\r\nimport { FaPen, FaDownload } from \"react-icons/fa\";\r\n// import { Tooltip } from \"components/ui\";\r\nimport {\r\n  CONFIRMATION_OBJ,\r\n  DATE_FORMAT,\r\n  DATE_TIME_FORMAT,\r\n  DELETE_TOAST,\r\n  TABLE_ACTION_KEYS,\r\n} from \"constants/app.constant\";\r\nimport ExportContent from \"components/custom/exportContent\";\r\nimport { IMAGES } from \"assets/icon\";\r\nimport ActionColumn from \"components/custom/actionColumn\";\r\nimport hasPermisson, {\r\n  ACCESS,\r\n  MODULE,\r\n} from \"utils/hasPermission\";\r\nimport { AiOutlineFile, AiFillFileAdd, AiFillDelete } from \"react-icons/ai\";\r\nimport ConfirmationContent from \"components/custom/ConfirmationContent\";\r\nimport Notification from \"components/template/Notification\";\r\n\r\nconst ACTION_CONSTANT = [\r\n  { label: <FaPen />, key: PAGE_KEY.VIEW, toolTip: \"View/Edit\", show: () => hasPermisson(MODULE.SERVICEORDER, ACCESS.WRITE) },\r\n  { label: <FaDownload />, key: PAGE_KEY.DOWNLOAD, toolTip: \"Download Forms\", show: () => hasPermisson(MODULE.SERVICEORDER, ACCESS.READ) },\r\n  {\r\n    label: IMAGES.EXPORT,\r\n    key: PAGE_KEY.MEDICAL_NECESSITY,\r\n    isImage: true,\r\n    toolTip: \"Medical Necessity\",\r\n    show: () => hasPermisson(MODULE.SERVICEORDER, ACCESS.READ),\r\n  },\r\n  {\r\n    label: IMAGES.RECEIPT,\r\n    key: PAGE_KEY.DELIVERY_RECEIPT,\r\n    isImage: true,\r\n    toolTip: \"Delivery Receipt\",\r\n    show: () => hasPermisson(MODULE.SERVICEORDER, ACCESS.READ),\r\n  },\r\n  {\r\n    label: <AiFillDelete style={{ fontSize: \"1rem\" }} />,\r\n    key: PAGE_KEY.DELETE,\r\n    toolTip: \"Delete\",\r\n    show: () => hasPermisson(MODULE.SERVICEORDER, ACCESS.DELETE),\r\n  },\r\n];\r\n\r\nconst BUTTON_CONSTANT = [\r\n  {\r\n    label: \"Export Excel\",\r\n    key: TABLE_ACTION_KEYS.EXPORT,\r\n    icon: <AiOutlineFile />,\r\n    show: () => hasPermisson(MODULE.SERVICEORDER, ACCESS.READ),\r\n  },\r\n  {\r\n    label: \"Add Prescription\",\r\n    key: TABLE_ACTION_KEYS.ADD,\r\n    icon: <AiFillFileAdd />,\r\n    // show: () => hasPermisson(MODULE.SERVICEORDER, ACCESS.WRITE),\r\n  },\r\n];\r\n\r\nconst ServiceOrder = () => {\r\n  const { id } = useParams();\r\n  const [tabledata, setTableData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [selectedKey, setSelectedKey] = useState(\"\");\r\n  const [filtervalue, setFilterValue] = useState(\"\");\r\n  const [selectedDate, setSelectedDate] = useState({\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n  const [filterPatientId, setFilterPatientId] = useState(\"\");\r\n  const [filterPatientDob, setFilterPatientDob] = useState(\"\");\r\n  const [filterNad, setFilterNad] = useState(\"\");\r\n  const [selectedData, setSelectedData] = useState(\"\");\r\n  const [payload, setPayload] = useState(\"\");\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [openExportModal, setOpenExportModal] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getApi(APIS.LIST_DATA, { type: LIST_DATA_API_TYPE.PATIENTS, id }).then(\r\n        (result) => setFilterPatientId(result?.data?.data)\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const payload = {\r\n      limit,\r\n      search,\r\n      patientId: filterPatientId && filterPatientId?._id,\r\n      skip: limit * (page - 1),\r\n    };\r\n\r\n  setPayload(payload);\r\n\r\n    if(filterPatientDob && filterPatientDob !== \"\") payload.patientDob = filterPatientDob\r\n\r\n    if (filtervalue && filtervalue?.value) payload.status = filtervalue?.value;\r\n\r\n    if (selectedDate?.startDate && selectedDate?.endDate) {\r\n      payload.startDate = selectedDate?.startDate;\r\n      payload.endDate = selectedDate?.endDate;\r\n    }\r\n\r\n    if(filterNad && filterNad !== \"\") payload.nad = filterNad\r\n\r\n    getApi(APIS.GET_SERVICE_ORDER, payload)\r\n      .then((res) => {\r\n        setTableData(res?.data?.data);\r\n        setTotalCount(res?.data?.count);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [\r\n    search,\r\n    page,\r\n    limit,\r\n    filtervalue,\r\n    filterPatientId,\r\n    refresh,\r\n    selectedDate,\r\n    filterPatientDob,\r\n    filterNad\r\n  ]);\r\n\r\n\r\n\r\n  const onActionHandle = (e, value, row) => {\r\n    e.preventDefault();\r\n    if (value === PAGE_KEY.VIEW) {\r\n      navigate(`/app/service-order/edit/${row?._id}`);\r\n    } else if (value === PAGE_KEY.DELIVERY_RECEIPT) {\r\n      navigate(`/app/orderManagement/delivery-receipt/${row?._id}`);\r\n    } else if (value === PAGE_KEY.MEDICAL_NECESSITY) {\r\n      navigate(`/app/orderManagement/medical-necessity/${row?._id}`);\r\n    } else {\r\n      setOpenModal(true);\r\n      setSelectedKey(value);\r\n      setSelectedData(row);\r\n    }\r\n  };\r\n\r\n  const onDialogClose = () => {\r\n    setSelectedKey(\"\");\r\n    setOpenModal(false);\r\n    setRefresh(!refresh);\r\n    setSelectedData(\"\");\r\n    setOpenExportModal(false);\r\n  };\r\n\r\n  const TagSection = ({ status, selectedRow }) => {\r\n    const valueobj = SERVICE_ORDER_STATUS.find(\r\n      (option) => option?.value === status\r\n    );\r\n\r\n    return (\r\n      <div\r\n        className=\"flex justify-center\"\r\n        onClick={() => {\r\n          setSelectedKey(PAGE_KEY.STATUS_CHANGE);\r\n          setOpenModal(true);\r\n          setSelectedData(selectedRow);\r\n        }}\r\n      >\r\n        <Tag\r\n          className={`bg-${[\r\n            valueobj?.color,\r\n          ]}-100 text-gray-600 rounded border-0 cursor-pointer`}\r\n        >\r\n          {valueobj?.label}\r\n        </Tag>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const onHeaderButtonClick = (e, key) => {\r\n    if (key === TABLE_ACTION_KEYS.ADD) {\r\n      const path = \"/app/service-order/add\"\r\n      if (id && filterPatientId)\r\n        navigate(path, { state: { patientData: filterPatientId } });\r\n      else navigate(path);\r\n    }\r\n    if (key === TABLE_ACTION_KEYS.EXPORT) {\r\n      setOpenExportModal(true);\r\n    }\r\n  };\r\n\r\n  const onDeleteSubmit = () => {\r\n    postApi(APIS.BLOCK_DELETE_DATA, {\r\n      id: selectedData?._id,\r\n      type: LIST_DATA_API_TYPE.PRESCRIPTIONS,\r\n      status: 0,\r\n    })\r\n      .then((res) => {\r\n        toast.push(<Notification type=\"success\">{DELETE_TOAST}</Notification>);\r\n        onDialogClose();\r\n      })\r\n      .catch((err) => {\r\n        toast.push(\r\n          <Notification type=\"error\">\r\n            {err?.response?.data?.message}\r\n          </Notification>\r\n        );\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    // {\r\n    //   Header: \"Presc. ID\",\r\n    //   Cell: (props) => {\r\n    //     const row = props.row.original;\r\n    //     return (\r\n    //       <div className=\"flex items-center \">\r\n    //         {row?.orderNo !== null && row?.orderNo ? row?.orderNo : \"-\"}\r\n    //       </div>\r\n    //     );\r\n    //   },\r\n    //   accessor: \"orderNo\",\r\n    // },\r\n    {\r\n      Header: \"Presc. Date\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return (\r\n          <div className=\"flex items-center w-35\">\r\n            {dayjs(row?.createdAt).format(DATE_TIME_FORMAT)}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    // {\r\n    //   Header: 'Order Status',\r\n    //   Cell: (props) => (\r\n    //     <TagSection status={props?.row?.original?.orderStatus} selectedRow={props?.row?.original} />\r\n    //   ),\r\n    // },\r\n    // {\r\n    //   Header: \"Patient ID\",\r\n    //   Cell: (props) => {\r\n    //     const row = props.row.original;\r\n    //     return row?.patientId?.patientNo ? row?.patientId?.patientNo : \"-\";\r\n    //   },\r\n    // },\r\n    {\r\n      Header: \"Patient Details\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return (\r\n          <div className=\"w-40\">\r\n            <p>{`${row?.patientId?.lastName}, ${row?.patientId?.firstName}`}</p>\r\n            <span className=\"text-gray-600 text-xs font-semibold\">\r\n              {row?.patientId?.patientNo}\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      Header: \"NAD\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return `${dayjs(row?.nextAppointmentDate).format(DATE_FORMAT) || \"-\"}`;\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: \"NAL\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return `${row?.appointmentLocationId?.name ||  \"-\"}`;\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: \"LCodes\",\r\n      accessor: \"\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return (\r\n          row?.prescriptions?.map((item, index) => <div className=\"w-40\" key={index}>\r\n            {\r\n              `${item?.lCode?.code} - ${item?.quantity} qty.`\r\n            }\r\n          </div>\r\n          )\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: \"Referring Physician\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return `${row?.physicianId?.name ? row?.physicianId?.name : \"\"}`;\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: \"Insurance\",\r\n      accessor: \"\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return (\r\n          <div className=\"flex items-center\">\r\n            {\r\n              row?.patientId?.primaryInsurance?.name || 'Self Pay'\r\n            }\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n\r\n    // {\r\n    //   Header: \"Presc. Doc\",\r\n    //   accessor: \"\",\r\n    //   Cell: (props) => {\r\n    //     const row = props.row.original;\r\n    //     if(row?.prescriptionDocument && row?.prescriptionDocument?.original){\r\n    //       return (\r\n    //         <Tooltip title={\"Download\"} visible={true}>\r\n    //           <img\r\n    //             src={IMAGES.DOWNLOAD_PDF}\r\n    //             alt=\"donwload Icon\"\r\n    //             style={{ maxWidth: \"20px\", height: \"24px\" }}\r\n    //             className=\"cursor-pointer mx-0.5\"\r\n    //             onClick={() => window.open(`${appConfig.imageBaseUrl}${row?.prescriptionDocument?.original}`, \"_blank\")}\r\n    //           />\r\n    //         </Tooltip>\r\n    //       );\r\n    //     }\r\n    //     else {\r\n    //       return ( <div className=\"flex items-center\">-</div>)\r\n    //     }\r\n\r\n    //   },\r\n    // },\r\n    {\r\n      Header: \"Presc. Status\",\r\n      accessor: \"\",\r\n      Cell: (props) => {\r\n        const row = props.row.original;\r\n        return <TagSection status={row?.orderStatus} selectedRow={row} />;\r\n      },\r\n    },\r\n    {\r\n      Header: \"Actions\",\r\n      id: \"action\",\r\n      accessor: (row) => row,\r\n      Cell: (props) => (\r\n        <ActionColumn\r\n          row={props.row.original}\r\n          onActionHandle={onActionHandle}\r\n          actionsMenu={ACTION_CONSTANT}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {id && filterPatientId && (\r\n        <h3>\r\n          Of {filterPatientId?.firstName} {filterPatientId?.lastName}\r\n        </h3>\r\n      )}\r\n      <Header\r\n       buttonMenu={\r\n          hasPermisson(MODULE.SERVICEORDER, ACCESS.WRITE)\r\n            ? BUTTON_CONSTANT\r\n            : BUTTON_CONSTANT.slice(0, BUTTON_CONSTANT.length - 1)\r\n        }\r\n        buttonClick={onHeaderButtonClick}\r\n        setSearch={setSearch}\r\n        filtervalue={filtervalue}\r\n        setFilterValue={setFilterValue}\r\n        setFilterPatientId={setFilterPatientId}\r\n        filterPatientId={filterPatientId}\r\n        selectedDate={selectedDate}\r\n        setSelectedDate={setSelectedDate}\r\n        setFilterPatientDob={setFilterPatientDob}\r\n        filterPatientDob={filterPatientDob}\r\n        setFilterNad={setFilterNad}\r\n        filterNad={filterNad}\r\n      />\r\n      <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\r\n        <DataTable\r\n          isCursor={false}\r\n          columns={columns}\r\n          data={tabledata}\r\n          loading={loading}\r\n          skeletonAvatarColumns={[0]}\r\n          skeletonAvatarProps={{ width: 28, height: 28 }}\r\n          pagingData={{ pageIndex: page, pageSize: limit, total: totalCount }}\r\n          onPaginationChange={(limitpage) => setPage(limitpage)}\r\n          onSelectChange={(limitPage) => setLimit(limitPage)}\r\n        />\r\n      </AdaptableCard>\r\n      {selectedKey === PAGE_KEY.DELETE && (\r\n        <ConfirmationContent\r\n          isOpen={openModal}\r\n          onConfirmClick={onDeleteSubmit}\r\n          header={CONFIRMATION_OBJ.HEADER}\r\n          des={CONFIRMATION_OBJ.DELETE}\r\n          onDialogClose={onDialogClose}\r\n          isWarning={CONFIRMATION_OBJ.WARNING}\r\n          buttonLabel={\"Delete\"}\r\n        />\r\n      )}\r\n      {selectedKey !== PAGE_KEY.DELETE && (\r\n        <Dialog\r\n          isOpen={openModal}\r\n          onClose={onDialogClose}\r\n          onRequestClose={onDialogClose}\r\n          contentClassName=\"pb-0 px-0 mt-30 min-w-36\"\r\n        >\r\n          <Confirmation\r\n            selectedKey={selectedKey}\r\n            selectedData={selectedData}\r\n            closeDialog={onDialogClose}\r\n          />\r\n        </Dialog>\r\n      )}\r\n\r\n      <ExportContent\r\n        Payload= {payload}\r\n        user={filterPatientId}\r\n        type=\"1\"\r\n        isOpen={openExportModal}\r\n        onDialogClose={onDialogClose}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiceOrder;\r\n","import { Input } from \"components/ui\";\nimport * as Yup from \"yup\";\nimport { getApi } from \"services/CommonService\";\nimport debounce from \"lodash/debounce\";\nimport { APIS, LIST_DATA_API_TYPE } from \"constants/api.constant\";\nimport AsyncSelect from \"react-select/async\";\nimport { CODE_TYPE, DATE_FORMAT } from 'constants/app.constant';\nimport dayjs from \"dayjs\";\n\nconst loadPhysicianOption = (inputValue, resolve) => {\n  getApi(APIS.LIST_DATA, {\n    type: LIST_DATA_API_TYPE.PHYSICIANS,\n    search: inputValue,\n  }).then((result) => {\n    const filter = result?.data?.data.map((item) => {\n      let option = {\n        label: `${item?.name}`,\n        value: item?._id,\n      };\n      return option;\n    });\n    resolve(filter);\n  });\n};\nconst loadLocationOption = (inputValue, resolve) => {\n  getApi(APIS.LIST_DATA, {\n    type: LIST_DATA_API_TYPE.LOCATIONS,\n    search: inputValue,\n  }).then((result) => {\n    const filter = result?.data?.data.map((item) => {\n      let option = {\n        label: `${item?.name}`,\n        value: item?._id,\n      };\n      return option;\n    });\n    resolve(filter);\n  });\n};\n\nconst loadPatientOption = (inputValue, resolve) => {\n  getApi(APIS.LIST_DATA, {\n    type: LIST_DATA_API_TYPE.PATIENTS,\n    search: inputValue,\n  }).then((result) => {\n    const filter = result?.data?.data.map((item) => {\n      let option = {\n        label: `${item?.firstName} ${item?.lastName} - ${dayjs(item?.dob).format(DATE_FORMAT)} (${item?.patientNo})`,\n        value: item?._id,\n        data : item\n      };\n      return option;\n    });\n    resolve(filter);\n  });\n};\nconst loadlCodeOption = (inputValue, resolve) => {\n  getApi(APIS.LIST_DATA, {\n    type: LIST_DATA_API_TYPE.CODES,\n    search: inputValue,\n    codeType: CODE_TYPE.Lcode\n  }).then((result) => {\n    const filter = result?.data?.data.map((item) => {\n      let option = {\n        label: item?.code,\n        value: item?._id,\n      };\n      return option;\n    });\n    resolve(filter);\n  });\n};\nconst loadicdCodeOption = (inputValue, resolve) => {\n  getApi(APIS.LIST_DATA, {\n    type: LIST_DATA_API_TYPE.CODES,\n    search: inputValue,\n    codeType: CODE_TYPE.Icd\n  }).then((result) => {\n    const filter = result?.data?.data.map((item) => {\n      let option = {\n        label: item?.code,\n        value: item?._id,\n      };\n      return option;\n    });\n    resolve(filter);\n  });\n};\n\nconst loadDeviceTypeOption = (inputValue, resolve) => {\n  getApi(APIS.LIST_DATA, {\n    type: LIST_DATA_API_TYPE.DEVICE_TYPES,\n    search: inputValue,\n  }).then((result) => {\n    const filter = result?.data?.data.map((item) => {\n      let option = {\n        label: item?.name,\n        value: item?._id,\n      };\n      return option;\n    });\n    resolve(filter);\n  });\n};\n\nconst loadInsuranceOption = (inputValue, resolve) => {\n  getApi(APIS.LIST_DATA, {\n    type: LIST_DATA_API_TYPE.INSURANCES,\n    search: inputValue,\n  }).then((result) => {\n    const filter = result?.data?.data.map((item) => {\n      let option = {\n        label: item?.name,\n        value: item?._id,\n      };\n      return option;\n    });\n    resolve(filter);\n  });\n};\n\nconst loadInsuranceOption1 = (inputValue, resolve) => {\n  getApi(APIS.LIST_DATA, {\n    type: LIST_DATA_API_TYPE.INSURANCES,\n    search: inputValue,\n  }).then((result) => {\n    const filter = result?.data?.data.map((item) => {\n      let option = {\n        label: item?.name,\n        value: item?._id,\n      };\n      return option;\n    });\n    resolve(filter);\n  });\n};\n\nconst loadPhysicians = debounce(loadPhysicianOption, 300);\nconst loadPhysicians1 = debounce(loadPhysicianOption, 300);\nconst loadlcodeoptions = debounce(loadlCodeOption, 300);\nconst loadicdcodeoptions = debounce(loadicdCodeOption, 300);\nconst loadLocations = debounce(loadLocationOption, 300);\nconst loadLocations1 = debounce(loadLocationOption, 300);\nconst loadPatients = debounce(loadPatientOption, 300);\nconst loadDeviceTypes = debounce(loadDeviceTypeOption, 300);\nconst loadInsurances = debounce(loadInsuranceOption, 300);\nconst loadInsurances1 = debounce(loadInsuranceOption1, 300);\n\nexport const SERVICE_ORDER_STATUS = [\n  { label: \"Referral Sent\", value: 1 ,color: \"red\"},\n  { label: \"Intake Completed\", value: 2 ,color: \"indigo\"},\n  { label: \"Insurance Completed\", value: 3  ,color: \"blue\"},\n  { label: \"Order Fulfilment in Process\", value: 4, color : \"emerald\" },\n  { label: \"Order Fulfilment Completed\", value: 5,color : \"cyan\" },\n  { label: \"Delivery Ready\", value: 6 , color : \"orange\" },\n  { label: \"Delivered\", value: 7 , color: \"green\" },\n  { label: \"DR Sent to PPS\", value: 8, color: \"purple\"  },\n  { label: \"Billed\", value: 9 ,color : \"orange\" },\n  { label: \"RNR\", value: 10 ,color : \"orange\" },\n  { label: \"Denied\", value: 11 ,color : \"red\" },\n  // { label: \"Pending\", value: 1, color: \"red\" },\n  // { label: \"In-Process\", value: 2, color: \"indigo\" },\n  // { label: \"Completed\", value: 3, color: \"green\" },\n];\n// Reterra Sent\n// Intake Completed\n// Insurance Completed\n// Order Fulfilment in Process\n// Order Fulfilment Completed\n// Delivery Ready\n// Delivered\n// DR Sent to PPS\n// Billed\n// RNR\n// Denied\nexport const PROVIDER_STATUS = [\n  { label: \"Approved\", value: 1 },\n  { label: \"Rejected\", value: 2 },\n  { label: \"Processing\", value: 3 },\n];\n\nexport const INSURANCE_CONSTANT = [\n  { label: \"Self Pay\", value: 1 },\n  { label: \"Insurance\", value: 2 },\n];\nexport const PERSONAL_INFORMATION = [\n  {\n    name: \"patientId\",\n    label: \"Select Patient (Search with name)\",\n    component: \"asyncSelect\",\n    option: loadPatients,\n    placeholder: \"Select Patient\",\n  },\n  {\n    name: \"nextAppointmentDate\",\n    label: \"Next Appointment Date\",\n    component: \"datepicker\",\n  },\n  {\n    name: \"locationId\",\n    label: \"Select Prescription Location (Search with name)\",\n    component: \"asyncSelect\",\n    option: loadLocations,\n    placeholder: \"Select Location\",\n  },\n  {\n    name: \"appointmentLocationId\",\n    label: \"Next Appointment Location (Search with name)\",\n    component: \"asyncSelect\",\n    option: loadLocations1,\n    placeholder: \"Search/Select with Name\",\n  },\n  {\n    name: \"physicianId\",\n    label: \"Referring Physician (Search with name)\",\n    component: \"asyncSelect\",\n    option: loadPhysicians,\n    placeholder: \"Search Physician\",\n  },\n  {\n    name: \"renderingPhysicianId\",\n    label: \"Rendering Physician (Search with name)\",\n    component: \"asyncSelect\",\n    option: loadPhysicians1,\n    placeholder: \"Search/Select with Name\",\n  },\n  {\n    name: \"prescriptionDocument\",\n    label: \"Upload Prescription\",\n    component: \"PdfUpload\",\n  },\n  {\n    name: \"physicianNotes\",\n    label: \"Physician Notes\",\n    type: \"switch\",\n    component: \"switch\",\n  },\n];\n\nexport const INSURANCE_FIELD_CONSTANT = [\n  {\n    name: \"primaryInsurance\",\n    apiType: \"insurance\",\n    label: \"Primary Insurance\",\n    option: loadInsurances,\n    component: \"asyncSelect\",\n    placeholder: \"Select primary insurance\",\n  },\n  {\n    name: \"primaryInsuranceNo\",\n    label: \"Primary Insurance No.\",\n    type: \"text\",\n    component: Input,\n    placeholder: \"Enter primary insurance no.\",\n    isBasic: true,\n  },\n  {\n    name: \"secondaryInsurance\",\n    apiType: \"insurance\",\n    label: \"Secondary Insurance\",\n    option: loadInsurances1,\n    component: \"asyncSelect\",\n    placeholder: \"Select secondary insurance\",\n  },\n  {\n    name: \"secondaryInsuranceNo\",\n    label: \"Seconday Insurance No.\",\n    type: \"text\",\n    component: Input,\n    placeholder: \"Enter secondary insurance no.\",\n    isBasic: true,\n  },\n  {\n    name: \"insuranceDocument\",\n    label: \"Upload Insurance Verification\",\n    component: \"PdfUpload\",\n  },\n  {\n    name: \"notes\",\n    label: \"Notes\",\n    type: \"text\",\n    component: Input,\n    isBasic: true,\n    placeholder: \"Enter notes\",\n    textArea: true,\n  },\n];\n\nexport const FORM_FIELD_ARRAY = [\n  {\n    name: \"deviceType\",\n    label: \"Device Type\",\n    type: \"select\",\n    key: \"deviceType\",\n    option: loadDeviceTypes,\n    placeholder: \"Select\",\n    component: AsyncSelect,\n    isMulti : false\n  },\n  {\n    name: \"lCode\",\n    label: \"LCode\",\n    type: \"select\",\n    key: \"lCode\",\n    option: loadlcodeoptions,\n    placeholder: \"Select\",\n    component: AsyncSelect,\n    isMulti : false\n  },\n  {\n    name: \"icdCode\",\n    label: \"ICD Code\",\n    type: \"select\",\n    key: \"icdCode\",\n    option: loadicdcodeoptions,\n    placeholder: \"Select\",\n    component: AsyncSelect,\n    isMulti : true\n  },\n  {\n    name: \"quantity\",\n    label: \"LCode Quantity\",\n    type: \"number\",\n    key: \"quantity\",\n    placeholder: \"Enter Quantity\",\n    component: Input,\n  },\n];\n\nexport const PAGE_KEY = {\n  DELETE: \"delete\",\n  EXPORT: \"export\",\n  VIEW: \"view\",\n  CALENDOR: \"calendor\",\n  DOWNLOAD: \"download\",\n  INSURANCE: \"insurance\",\n  STATUS_CHANGE: \"statusChange\",\n  DELIVERY_RECEIPT: \"deliveryReceipt\",\n  MEDICAL_NECESSITY: \"medicalNecessity\",\n};\n\nexport const MODAL_HEADER = {\n  calendor: \"Appointment\",\n  download: \"Download Package\",\n  insurance: \"Insurance\",\n  statusChange: \"Update Order Status\",\n};\n\nexport const SEGMENT_CONSTANT = [\n  { label: \"Left\", value: 1 },\n  { label: \"Right\", value: 2 },\n  { label: \"Spine\", value: 3 },\n  { label: \"Bilateral\", value: 4 },\n];\n"],"names":["IMAGES","VIEW_IMAGE","REPLY","STATUS","EXPORT","RECEIPT","DOWNLOAD_PDF","header","des","onDialogClose","isWarning","onConfirmClick","isOpen","buttonLabel","onClose","onRequestClose","contentClassName","className","variant","onClick","row","onActionHandle","actionsMenu","textTheme","useThemeClass","map","item","i","show","title","toolTip","visible","isImage","src","label","alt","style","maxWidth","e","key","type","user","Payload","payload","userId","_id","postApi","APIS","then","res","toast","downloadLink","document","createElement","href","appConfig","data","fileName","download","body","appendChild","click","removeChild","catch","error","message","isLastChild","arr","index","length","notificationHeight","ADMIN_NOTIFICATION_TYPE","NotificationToggle","content","classNames","badgeStyle","top","right","withHeaderItem","notificationList","setNotificationList","useState","listInnerRef","useRef","currPage","setCurrPage","prevPage","setPrevPage","lastList","setLastList","count","setCount","noResult","setNoResult","loading","setLoading","navigate","useNavigate","bgTheme","larger","useResponsive","fetchNotifications","useSelector","state","theme","direction","useEffect","intervalId","setInterval","clearInterval","onMarkAsRead","id","list","console","log","navigationHandler","recordId","renderTitle","menuClass","placement","md","onOpen","ref","onScroll","current","scrollTop","scrollHeight","clientHeight","dayjs","createdAt","format","DATE_TIME_FORMAT","innerClass","isRead","size","onChange","placeholder","debounceFn","debounce","val","prefix","target","value","getApi","endpoint","params","BaseService","async","apiGetSearchResult","ApiService","url","method","Component","props","hoverable","twBreakpoint","breakpointInt","str","parseInt","replace","breakpoint","xl","lg","sm","xs","getAllSizes","comparator","currentWindowWidth","window","innerWidth","Object","fromEntries","entries","getResponsiveState","windowWidth","smaller","responsive","setResponsive","resizeHandler","responsiveState","addEventListener","removeEventListener","FilterSection","setSearch","filtervalue","setFilterValue","setFilterPatientId","filterPatientId","selectedDate","setSelectedDate","filterPatientDob","setFilterPatientDob","filterNad","setFilterNad","loadStays","inputValue","resolve","LIST_DATA_API_TYPE","search","result","TableSearchBar","query","autoComplete","options","SERVICE_ORDER_STATUS","selectedValue","defaultOptions","cacheOptions","loadOptions","componentAs","AsyncSelect","getOptionLabel","v","firstName","lastName","patientNo","dob","moment","DATE_FORMAT","getOptionValue","event","inputtable","clearable","name","inputFormat","maxDate","Date","date","endDate","startDate","minDate","icon","buttonMenu","buttonClick","ButtonSection","btn","marginLeft","AppoinmentSchema","Yup","shape","appointmentDate","required","appointmentTime","appointmentAddress","onSubmit","selectedData","initialValues","validationSchema","enableReinitialize","errors","touched","values","isSubmitting","setFieldValue","invalid","errorMessage","currentDate","_isValid","dateFormat","timeFormat","inputProps","width","borderWidth","height","borderRadius","padding","textArea","component","Input","stickyClass","DOCUMENT_CONSTANT","patientId","InsuranceSectionSchema","insuranceStatus","insuranceAmount","insuranceNotes","STATUS_OPTIONS","obj","Select","orderStatus","selectedKey","closeDialog","dialogHeader","setDialogHeader","PAGE_KEY","formData","FormData","append","UPDATE_TOAST","MODAL_HEADER","minHeight","ACTION_CONSTANT","hasPermisson","MODULE","ACCESS","fontSize","BUTTON_CONSTANT","TABLE_ACTION_KEYS","useParams","tabledata","setTableData","page","setPage","totalCount","setTotalCount","limit","setLimit","openModal","setOpenModal","setSelectedKey","setSelectedData","setPayload","refresh","setRefresh","openExportModal","setOpenExportModal","skip","patientDob","status","nad","finally","preventDefault","TagSection","selectedRow","valueobj","option","color","columns","Header","Cell","original","nextAppointmentDate","appointmentLocationId","accessor","prescriptions","lCode","code","quantity","physicianId","primaryInsurance","slice","path","patientData","bodyClass","isCursor","skeletonAvatarColumns","skeletonAvatarProps","pagingData","pageIndex","pageSize","total","onPaginationChange","limitpage","onSelectChange","limitPage","ConfirmationContent","Notification","DELETE_TOAST","err","response","CONFIRMATION_OBJ","loadPhysicianOption","filter","loadLocationOption","loadPhysicians","loadPhysicians1","loadlcodeoptions","codeType","CODE_TYPE","loadicdcodeoptions","loadLocations","loadLocations1","loadPatients","loadDeviceTypes","loadInsurances","loadInsurances1","INSURANCE_CONSTANT","PERSONAL_INFORMATION","INSURANCE_FIELD_CONSTANT","apiType","isBasic","FORM_FIELD_ARRAY","isMulti","DELETE","VIEW","CALENDOR","DOWNLOAD","INSURANCE","STATUS_CHANGE","DELIVERY_RECEIPT","MEDICAL_NECESSITY","calendor","insurance","statusChange","SEGMENT_CONSTANT"],"sourceRoot":""}
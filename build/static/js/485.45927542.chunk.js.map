{"version":3,"file":"static/js/485.45927542.chunk.js","mappings":"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","sources":["components/layout/ModernLayout.js","components/template/SideNav.js","components/template/SideNavToggle.js"],"sourcesContent":["import React from 'react';\nimport Header from 'components/template/Header';\nimport SidePanel from 'components/template/SidePanel';\nimport UserDropdown from 'components/template/UserDropdown';\nimport LanguageSelector from 'components/template/LanguageSelector';\nimport Notification from 'components/template/Notification';\nimport SideNavToggle from 'components/template/SideNavToggle';\nimport MobileNav from 'components/template/MobileNav';\nimport Search from 'components/template/Search';\nimport SideNav from 'components/template/SideNav';\nimport View from 'views';\nimport hasPermisson, { ACCESS, MODULE } from 'utils/hasPermission';\n\nconst HeaderActionsStart = () => {\n  return (\n    <>\n      <MobileNav />\n      <SideNavToggle />\n      {/* <Search /> */}\n    </>\n  );\n};\n\nconst HeaderActionsEnd = () => {\n  return (\n    <>\n      {/* <LanguageSelector /> */}\n      {hasPermisson(MODULE.NOTIFICATION, ACCESS.READ) && <Notification />}\n      {/* <SidePanel /> */}\n      <UserDropdown hoverable={false} />\n    </>\n  );\n};\n\nconst ModernLayout = (props) => {\n  return (\n    <div className=\"app-layout-modern flex flex-auto flex-col\">\n      <div className=\"flex flex-auto min-w-0\">\n        <SideNav />\n        <div className=\"flex flex-col flex-auto min-h-screen min-w-0 relative w-full bg-white dark:bg-gray-800 border-l border-gray-200 dark:border-gray-700\">\n          <Header\n            className=\"border-b border-gray-200 dark:border-gray-700\"\n            headerEnd={<HeaderActionsEnd />}\n            headerStart={<HeaderActionsStart />}\n          />\n          <View {...props} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ModernLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { ScrollBar } from \"components/ui\";\nimport PropTypes from \"prop-types\";\nimport {\n  SIDE_NAV_WIDTH,\n  SIDE_NAV_COLLAPSED_WIDTH,\n  NAV_MODE_DARK,\n  NAV_MODE_THEMED,\n  NAV_MODE_TRANSPARENT,\n  SIDE_NAV_CONTENT_GUTTER,\n  LOGO_X_GUTTER,\n} from \"constants/theme.constant\";\nimport Logo from \"components/template/Logo\";\nimport navigationConfig from \"configs/navigation.config\";\nimport VerticalMenuContent from \"components/template/VerticalMenuContent\";\nimport useResponsive from \"utils/hooks/useResponsive\";\nimport { useSelector } from \"react-redux\";\nimport { APP_NAME } from \"constants/app.constant\";\nimport { LOGO_SRC_PATH } from \"components/template/Logo\";\nconst sideNavStyle = {\n  width: SIDE_NAV_WIDTH,\n  minWidth: SIDE_NAV_WIDTH,\n};\n\nconst sideNavCollapseStyle = {\n  width: SIDE_NAV_COLLAPSED_WIDTH,\n  minWidth: SIDE_NAV_COLLAPSED_WIDTH,\n};\n\nconst SideNav = () => {\n  const themeColor = useSelector((state) => state.theme.themeColor);\n  const primaryColorLevel = useSelector(\n    (state) => state.theme.primaryColorLevel\n  );\n  const navMode = useSelector((state) => state.theme.navMode);\n  const mode = useSelector((state) => state.theme.mode);\n  const direction = useSelector((state) => state.theme.direction);\n  const currentRouteKey = useSelector(\n    (state) => state.base.common.currentRouteKey\n  );\n  const sideNavCollapse = useSelector(\n    (state) => state.theme.layout.sideNavCollapse\n  );\n  const userAuthority = useSelector((state) => state.auth.user.authority);\n\n  const { larger } = useResponsive();\n\n  const sideNavColor = () => {\n    if (navMode === NAV_MODE_THEMED) {\n      return `bg-${themeColor}-${primaryColorLevel} side-nav-${navMode}`;\n    }\n    return `side-nav-${navMode}`;\n  };\n\n  const logoMode = () => {\n    if (navMode === NAV_MODE_THEMED) {\n      return NAV_MODE_DARK;\n    }\n\n    if (navMode === NAV_MODE_TRANSPARENT) {\n      return mode;\n    }\n\n    return navMode;\n  };\n\n  const menuContent = (\n    <VerticalMenuContent\n      navMode={navMode}\n      collapsed={sideNavCollapse}\n      navigationTree={navigationConfig}\n      routeKey={currentRouteKey}\n      userAuthority={userAuthority}\n      direction={direction}\n    />\n  );\n\n  return (\n    <>\n      {larger.md && (\n        <div\n          style={sideNavCollapse ? sideNavCollapseStyle : sideNavStyle}\n          className={classNames(\n            \"side-nav\",\n            sideNavColor(),\n            !sideNavCollapse && \"side-nav-expand\"\n          )}\n        >\n          <div className={`side-nav-header`}>\n            <div className=\"flex items-center bg-blue-900\">\n              {!sideNavCollapse && (\n                <img\n                  className=\"my-5\"\n                  src={`${LOGO_SRC_PATH}Admin-logo-white.png`}\n                  alt={`${APP_NAME} logo`}\n                />\n              )}\n              {sideNavCollapse && (\n                <Logo\n                  imgClass=\"my-2\"\n                  mode={logoMode()}\n                  type={sideNavCollapse ? \"streamline\" : \"full\"}\n                  gutter={\n                    sideNavCollapse ? SIDE_NAV_CONTENT_GUTTER : LOGO_X_GUTTER\n                  }\n                  imgHeight={45}\n                  imgWidth={50}\n                />\n              )}\n            </div>\n          </div>\n          {sideNavCollapse ? (\n            menuContent\n          ) : (\n            <div className=\"side-nav-content bg-blue-900 \">\n              <ScrollBar autoHide direction={direction}>\n                {menuContent}\n              </ScrollBar>\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nSideNav.propTypes = {\n  themed: PropTypes.bool,\n  darkMode: PropTypes.bool,\n  themeColor: PropTypes.string,\n};\n\nSideNav.defaultProps = {\n  themed: false,\n  darkMode: false,\n  themeColor: \"\",\n};\n\nexport default SideNav;\n","import React from 'react'\nimport withHeaderItem from 'utils/hoc/withHeaderItem'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setSideNavCollapse } from 'store/theme/themeSlice'\nimport useResponsive from 'utils/hooks/useResponsive'\nimport { NavToggle } from 'components/shared'\n\nexport const SideNavToggle = ({ className }) => {\n\n\tconst sideNavCollapse = useSelector((state) => state.theme.layout.sideNavCollapse)\n\tconst dispatch = useDispatch()\n\n\tconst { larger } = useResponsive()\n\n\tconst onCollapse = () => {\n\t\tdispatch(setSideNavCollapse(!sideNavCollapse))\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{larger.md && (\n\t\t\t\t<div \n\t\t\t\t\tclassName={className}\n\t\t\t\t\tonClick={onCollapse}\n\t\t\t\t>\n\t\t\t\t\t<NavToggle className=\"text-2xl\" toggled={sideNavCollapse} />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default withHeaderItem(SideNavToggle)\n"],"names":["HeaderActionsStart","HeaderActionsEnd","hasPermisson","MODULE","ACCESS","hoverable","props","className","headerEnd","headerStart","sideNavStyle","width","SIDE_NAV_WIDTH","minWidth","sideNavCollapseStyle","SIDE_NAV_COLLAPSED_WIDTH","SideNav","themeColor","useSelector","state","theme","primaryColorLevel","navMode","mode","direction","currentRouteKey","base","common","sideNavCollapse","layout","userAuthority","auth","user","authority","larger","useResponsive","menuContent","collapsed","navigationTree","navigationConfig","routeKey","md","style","classNames","NAV_MODE_THEMED","src","LOGO_SRC_PATH","alt","APP_NAME","imgClass","NAV_MODE_DARK","NAV_MODE_TRANSPARENT","type","gutter","SIDE_NAV_CONTENT_GUTTER","LOGO_X_GUTTER","imgHeight","imgWidth","autoHide","defaultProps","themed","darkMode","withHeaderItem","dispatch","useDispatch","onClick","setSideNavCollapse","toggled"],"sourceRoot":""}
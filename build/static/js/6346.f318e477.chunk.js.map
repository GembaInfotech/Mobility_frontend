{"version":3,"file":"static/js/6346.f318e477.chunk.js","mappings":"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","sources":["views/account/Settings/components/FormDesription.js","views/account/Settings/components/FormRow.js","views/account/Settings/components/Password.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst FormDesription = ({title, desc, ...rest}) => {\r\n\treturn (\r\n\t\t<div {...rest}>\r\n\t\t\t<h5>{title}</h5>\r\n\t\t\t<p>{desc}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FormDesription","import React from 'react'\r\nimport classNames from 'classnames'\r\nimport { FormItem } from 'components/ui'\r\n\r\nconst FormRow = props => {\r\n\r\n\tconst {\r\n\t\tlabel, \r\n\t\tchildren, \r\n\t\terrors, \r\n\t\ttouched, \r\n\t\tname, \r\n\t\tborder = true,\r\n\t\talignCenter = true\r\n\t} =props\r\n\r\n\treturn (\r\n\t\t<div className={classNames(\r\n\t\t\t'grid md:grid-cols-3 gap-4 py-8',\r\n\t\t\tborder && 'border-b border-gray-200 dark:border-gray-600',\r\n\t\t\talignCenter && 'items-center'\r\n\t\t)}>\r\n\t\t\t<div className=\"font-semibold\">{label}</div>\r\n\t\t\t<div className=\"col-span-2\">\r\n\t\t\t\t<FormItem\r\n\t\t\t\t\tclassName=\"mb-0 max-w-[700px]\"\r\n\t\t\t\t\tinvalid={errors[name] && touched[name]}\r\n\t\t\t\t\terrorMessage={errors[name]}\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</FormItem>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FormRow","import React from \"react\";\r\nimport {\r\n  Input,\r\n  Button,\r\n  Notification,\r\n  toast,\r\n  FormContainer,\r\n} from \"components/ui\";\r\nimport FormDesription from \"./FormDesription\";\r\nimport FormRow from \"./FormRow\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { postApi } from \"services/CommonService\";\r\nimport { APIS } from \"constants/api.constant\";\r\n\r\nconst initialValues = {\r\n  password: \"\",\r\n  newPassword: \"\",\r\n  confirmNewPassword: \"\",\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  password: Yup.string().required(\"Password Required\"),\r\n  newPassword: Yup.string()\r\n    .required(\"Enter your new password\")\r\n    .min(6, \"Too Short!\")\r\n    .matches(/^[A-Za-z0-9_-]*$/, \"Only Letters & Numbers Allowed\"),\r\n  confirmNewPassword: Yup.string().oneOf(\r\n    [Yup.ref(\"newPassword\"), null],\r\n    \"Password not match\"\r\n  ),\r\n});\r\n\r\nconst Password = ({ data }) => {\r\n  const navigate = useNavigate();\r\n  const onFormSubmit = (values, setSubmitting, resetForm) => {\r\n    const payload = {\r\n      oldPassword: values?.password,\r\n      newPassword: values?.confirmNewPassword,\r\n    };\r\n    postApi(APIS.CHANGE_PASSWORD, payload)\r\n      .then(() => {\r\n        toast.push(\r\n          <Notification type=\"success\">Password Updated!</Notification>\r\n        );\r\n      })\r\n      .finally(() => {\r\n        setSubmitting(false);\r\n        resetForm();\r\n        navigate(`/app/account/settings/password`);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          setTimeout(() => {\r\n            onFormSubmit(values, setSubmitting);\r\n          }, 1000);\r\n        }}\r\n      >\r\n        {({ values, touched, errors, isSubmitting, resetForm }) => {\r\n          const validatorProps = { touched, errors };\r\n          return (\r\n            <Form>\r\n              <FormContainer>\r\n                <FormDesription\r\n                  title=\"Password\"\r\n                  desc=\"Enter your current & new password to reset your password\"\r\n                />\r\n                <FormRow\r\n                  name=\"password\"\r\n                  label=\"Current Password\"\r\n                  {...validatorProps}\r\n                >\r\n                  <Field\r\n                    type=\"password\"\r\n                    autoComplete=\"off\"\r\n                    name=\"password\"\r\n                    placeholder=\"Current Password\"\r\n                    component={Input}\r\n                  />\r\n                </FormRow>\r\n                <FormRow\r\n                  name=\"newPassword\"\r\n                  label=\"New Password\"\r\n                  {...validatorProps}\r\n                >\r\n                  <Field\r\n                    type=\"password\"\r\n                    autoComplete=\"off\"\r\n                    name=\"newPassword\"\r\n                    placeholder=\"New Password\"\r\n                    component={Input}\r\n                  />\r\n                </FormRow>\r\n                <FormRow\r\n                  name=\"confirmNewPassword\"\r\n                  label=\"Confirm Password\"\r\n                  {...validatorProps}\r\n                >\r\n                  <Field\r\n                    type=\"password\"\r\n                    autoComplete=\"off\"\r\n                    name=\"confirmNewPassword\"\r\n                    placeholder=\"Confirm Password\"\r\n                    component={Input}\r\n                  />\r\n                </FormRow>\r\n                <div className=\"mt-4 ltr:text-right\">\r\n                  <Button\r\n                    className=\"ltr:mr-2 rtl:ml-2\"\r\n                    type=\"button\"\r\n                    onClick={resetForm}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                  <Button variant=\"solid\" loading={isSubmitting} type=\"submit\">\r\n                    {isSubmitting ? \"Updating\" : \"Update Password\"}\r\n                  </Button>\r\n                </div>\r\n              </FormContainer>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Password;\r\n\r\n{\r\n  /* <div className=\"mt-6\">\r\n\t\t\t\t<FormDesription \r\n\t\t\t\t\ttitle=\"Where you're signed in\"\r\n\t\t\t\t\tdesc=\"You're signed in to your account on these devices.\"\r\n\t\t\t\t/>\r\n\t\t\t\t{data && (\r\n\t\t\t\t\t<div className=\"rounded-lg border border-gray-200 dark:border-gray-600 mt-6\">\r\n\t\t\t\t\t\t{data.map((log, index) => (\r\n\t\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\t\tkey={log.deviceName} \r\n\t\t\t\t\t\t\t\tclassName={classNames(\r\n\t\t\t\t\t\t\t\t\t'flex items-center px-4 py-6',\r\n\t\t\t\t\t\t\t\t\t!isLastChild(data, index) && 'border-b border-gray-200 dark:border-gray-600'\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-3xl\">\r\n\t\t\t\t\t\t\t\t\t\t<LoginHistoryIcon type={log.type}/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"ml-3 rtl:mr-3\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-gray-900 dark:text-gray-100 font-semibold\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{log.deviceName}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t{index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tag className=\"bg-emerald-100 text-emerald-600 dark:bg-emerald-500/20 dark:text-emerald-100 rounded-md border-0 mx-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"capitalize\"> Current </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tag>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<span>{log.location} â€¢ {dayjs.unix(log.time).format('DD-MMM-YYYY, hh:mm A')}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div> */\r\n}\r\n// const LoginHistoryIcon = ({ type }) => {\r\n// \tswitch (type) {\r\n// \t  case \"Desktop\":\r\n// \t\treturn <HiOutlineDesktopComputer />;\r\n// \t  case \"Mobile\":\r\n// \t\treturn <HiOutlineDeviceMobile />;\r\n// \t  case \"Tablet\":\r\n// \t\treturn <HiOutlineDeviceTablet />;\r\n// \t  default:\r\n// \t\treturn <HiOutlineDesktopComputer />;\r\n// \t}\r\n//   };\r\n\r\n// import isLastChild from \"utils/isLastChild\";\r\n// import {\r\n//   HiOutlineDesktopComputer,\r\n//   HiOutlineDeviceMobile,\r\n//   HiOutlineDeviceTablet,\r\n// } from \"react-icons/hi\";\r\n// import dayjs from \"dayjs\";\r\n\r\n// import classNames from \"classnames\";\r\n"],"names":["title","desc","rest","props","label","children","errors","touched","name","border","alignCenter","className","classNames","invalid","errorMessage","initialValues","password","newPassword","confirmNewPassword","validationSchema","Yup","shape","required","min","matches","oneOf","data","navigate","useNavigate","onSubmit","values","setSubmitting","setTimeout","resetForm","payload","oldPassword","postApi","APIS","then","toast","type","finally","onFormSubmit","isSubmitting","validatorProps","autoComplete","placeholder","component","Input","onClick","variant","loading"],"sourceRoot":""}
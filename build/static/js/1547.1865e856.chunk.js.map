{"version":3,"file":"static/js/1547.1865e856.chunk.js","mappings":"weAkIA,EAhH2B,SAAAA,GAE1B,IACCC,EAOGD,EAPHC,QACAC,EAMGF,EANHE,SACAC,EAKGH,EALHG,SACAC,EAIGJ,EAJHI,WACAC,EAGGL,EAHHK,eACAC,EAEGN,EAFHM,cACGC,GAAI,OACJP,EAAK,GAEDQ,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,KAAK,IAA3CH,KAEAI,GAAsBC,EAAAA,EAAAA,GAAcC,EAAAA,EAAkBX,GAAtDS,kBAuCR,OAfAG,EAAAA,EAAAA,YAAU,WACLH,EAAkBI,OAASC,EAAAA,IAAuBC,IAAQN,IAC7DV,EACC,CACCiB,IAAKP,EAAkBO,IACvBC,MAAOR,EAAkBQ,MACzBC,KAAMT,EAAkBU,QACxBC,aAAcX,EAAkBW,cAKpC,GAAG,CAACX,EAAkBO,OAIrB,mCAASZ,GAAI,eACZ,SAACiB,EAAA,EAAI,CACJhB,KAvCCP,IAAYwB,EAAAA,GACPC,EAAAA,GAGLzB,IAAY0B,EAAAA,GACPnB,EAGDP,EAgCLe,KAAK,aACLY,OAAQC,EAAAA,MAET,SAAC,KAAI,CACJC,UAAU,YACVC,QAAS9B,EACT+B,kBAAmB5B,GAAc,CAACQ,EAAkBO,KAAK,SAExDL,EAAAA,EAAAA,KAAqB,SAAAmB,GAAG,OACxB,SAAC,KAAc,CAEdC,UAAWD,EAAIC,UACf5B,cAAeA,EAAc,SAG5B2B,EAAIX,SAAWW,EAAIX,QAAQa,OAAS,GACpC,SAAC,cAAa,CACbC,SAAUH,EAAId,IACdW,UAAU,OACVO,SAAU,kBAhDY,SAAH,GAA0C,IAArClB,EAAG,EAAHA,IAAKC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAME,EAAY,EAAZA,aAChDrB,EAAS,CAACkB,MAAAA,EAAOC,KAAAA,EAAME,aAAAA,IACvBlB,EAAe,CAACc,GACjB,CA6CuBmB,CAAqB,CACpCnB,IAAIc,EAAId,IACRC,MAAMa,EAAIb,MACVC,KAAMY,EAAIX,QACVC,aAAcU,EAAIV,cACjB,EAAC,UAEH,gBAAKO,UAAU,WAAU,SACvBS,EAAAA,EAAeN,EAAIO,WAItB,SAAC,KAAI,CACJC,GAAIR,EAAIS,KACRZ,UAAU,kCACVa,QAAS,kBA1DiB,SAAH,GAAe,IAAVxB,EAAG,EAAHA,IAClCjB,EAAS,CAAC,GACVG,EAAe,CAACc,GACjB,CAuDsByB,CAAyB,CACvCzB,IAAIc,EAAId,KACP,EAAC,UAEH,SAAC,cAAa,CACbiB,SAAUH,EAAId,IACdW,UAAU,OAAM,UAEhB,gBAAKA,UAAU,WAAU,SACvBS,EAAAA,EAAeN,EAAIO,aAjCnBP,EAAId,IAsCO,SAKtB,E,uGCvEA,EA5CgC,SAAAnB,GAE/B,IACCoB,EAQGpB,EARHoB,MACAC,EAOGrB,EAPHqB,KACAlB,EAMGH,EANHG,SACA0C,EAKG7C,EALH6C,WACAC,EAIG9C,EAJH8C,UACAxC,EAGGN,EAHHM,cACAL,EAEGD,EAFHC,QACGM,GAAI,OACJP,EAAK,GAMT,OACC,mCAASO,GAAI,eACZ,iBAAKuB,UAAS,UAAKiB,EAAAA,GAAmB,sDAAqD,WAC1F,eAAIjB,UAAU,YAAW,SAAEV,KAC3B,SAAC,KAAM,CACN4B,MAAM,SACNjB,QAAQ,QACRkB,KAAK,KACLT,MACC,gCACEM,IAAcI,EAAAA,KAAW,SAAC,MAAoB,IAC9CJ,IAAcK,EAAAA,KAAW,SAAC,MAAqB,OAGlDR,QAlBmB,WACtBE,GACD,QAmBE,SAACO,EAAA,QAAmB,CACnBjD,SAAUA,EACVkD,eAAgBhC,EAChBf,cAAeA,EACfL,QAASA,OAIb,E,sBCvCMqD,EAA6B,CAClCC,MAAOC,EAAAA,IAiGR,EA9FuB,WAEtB,IAAQC,GAAMC,EAAAA,EAAAA,KAAND,EAER,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA7CC,EAAY,KAAEC,EAAe,KACpC,GAAoCF,EAAAA,EAAAA,YAAU,eAAvCvD,EAAU,KAAE0D,EAAa,KAE1BC,GAAatD,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMoD,UAAU,IACxDC,GAAoBvD,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMqD,iBAAiB,IACtE/D,GAAUQ,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMV,OAAO,IAClDO,GAAOC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMH,IAAI,IAC5CsC,GAAYrC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMmC,SAAS,IACtDmB,GAAkBxD,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMwD,KAAKC,OAAOF,eAAe,IACxE3D,GAAgBG,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM0D,KAAKC,KAAKnC,SAAS,IAE9DoC,GAAWC,EAAAA,EAAAA,KAAXD,OAEFE,EAAW,SAACC,EAASjE,GAA4B,IAAtBkE,IAAS,yDACzC,OAAGzE,IAAYwB,EAAAA,IAAmBiD,EAC3B,MAAN,OAAaX,EAAU,YAAIC,EAAiB,YAAIS,EAAO,YAAIjE,GAEtD,GAAN,OAAUiE,EAAO,YAAIjE,EACtB,EA6BA,OACC,8BAEE8D,EAAOK,KACN,iBAAK7C,UAAS,mBAAqB,WAClC,SAAC,EAAkB,CAClBA,UAAS,gCAA2B0C,EAAS,wBAAyBvE,IACtE2E,MAAOtB,EACPnD,SAAU8D,EACV7D,WAAYA,EACZH,QAASA,EACTC,SAtCe,SAAC2E,GACrBhB,EAAgBgB,EACjB,EAqCMxE,eA9BqB,SAACc,GAC3B2C,EAAc3C,EACf,EA6BMb,cAAeA,KAEhB,gBACCwB,UAAS,qCAAgC0C,EAAS,6BAA8BhE,GAAM,IACtFoE,OAAK,QAEHrB,MAAOuB,EAAAA,IACH5D,IAAQ0C,GAlCoB,WACvC,IAAIgB,EAAQ,CAAC,EACPG,EAAW,WAAOD,EAAAA,GAAiC,MASzD,OARIhC,IAAcI,EAAAA,KACjB0B,EAAS,CAAEI,WAAYD,IAGpBjC,IAAcK,EAAAA,KACjByB,EAAQ,CAAEK,YAAaF,IAGjBH,CACR,CAsBoCM,GAAoC,CAAC,GAElE,UAEChE,IAAQ0C,KACT,SAAC,EAAuB,CACvBxC,MAAOqC,EAAEG,EAAarC,aAAcqC,EAAaxC,OACjDC,KAAMuC,EAAavC,KACnBlB,SAAU8D,EACVhE,QAAS0B,EAAAA,GACTkB,WArDe,WACtBgB,EAAgB,CAAC,GACjBC,EAAc,GACf,EAmDQhB,UAAWA,EACXxC,cAAeA,UASxB,E,WCrGM6E,EAAqB,WACzB,OACE,iCACE,SAACC,EAAA,EAAS,KACV,SAACC,EAAA,EAAM,MAGb,EAEMC,EAAmB,WACvB,OACE,iCACE,SAACC,EAAA,EAAgB,KACjB,SAACC,EAAA,EAAY,KACb,SAACC,EAAA,EAAS,KACV,SAACC,EAAA,EAAY,CAACC,WAAW,MAG/B,EAsBA,EApB0B,WACxB,OACE,gBAAK7D,UAAU,kDAAiD,UAC9D,iBAAKA,UAAU,yBAAwB,WACrC,SAAC,EAAc,KACf,iBAAKA,UAAU,+DAA8D,WAC3E,SAAC8D,EAAA,EAAM,CACL9D,UAAU,yBACV+D,aAAa,SAACV,EAAkB,IAChCW,WAAW,SAACR,EAAgB,OAE9B,gBAAKxD,UAAU,iCAAgC,UAC7C,SAAC,IAAI,aAMjB,C","sources":["components/template/StackedSideNav/StackedSideNavMini.js","components/template/StackedSideNav/StackedSideNavSecondary.js","components/template/StackedSideNav/index.js","components/layout/StackedSideLayout.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport Logo from 'components/template/Logo'\r\nimport { Menu } from 'components/ui'\r\nimport { \r\n\tNAV_MODE_DARK, \r\n\tNAV_MODE_THEMED, \r\n\tNAV_MODE_TRANSPARENT,\r\n\tSIDE_NAV_CONTENT_GUTTER,\r\n} from 'constants/theme.constant'\r\nimport { NAV_ITEM_TYPE_ITEM } from 'constants/navigation.constant'\r\nimport { AuthorityCheck } from 'components/shared'\r\nimport navigationConfig from 'configs/navigation.config'\r\nimport navigationIcon from 'configs/navigation-icon.config'\r\nimport useMenuActive from 'utils/hooks/useMenuActive'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst StackedSideNavMini = props => {\r\n\r\n\tconst { \r\n\t\tnavMode, \r\n\t\tonChange, \r\n\t\trouteKey, \r\n\t\tactiveKeys, \r\n\t\tonSetActiveKey, \r\n\t\tuserAuthority,\r\n\t\t...rest \r\n\t} = props\r\n\r\n\tconst { mode } = useSelector((state) => state.theme)\r\n\r\n\tconst { includedRouteTree } = useMenuActive(navigationConfig, routeKey)\r\n\r\n\tconst logoMode = () => {\r\n\t\tif(navMode === NAV_MODE_THEMED) {\r\n\t\t\treturn NAV_MODE_DARK\r\n\t\t}\r\n\r\n\t\tif(navMode === NAV_MODE_TRANSPARENT) {\r\n\t\t\treturn mode\r\n\t\t}\r\n\r\n\t\treturn navMode\r\n\t}\r\n\r\n\tconst handleMenuItemSelect = ({key, title, menu, translateKey}) => {\r\n\t\tonChange({title, menu, translateKey})\r\n\t\tonSetActiveKey([key])\r\n\t}\r\n\r\n\tconst handleLinkMenuItemSelect = ({key}) => {\r\n\t\tonChange({})\r\n\t\tonSetActiveKey([key])\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (includedRouteTree.type !== NAV_ITEM_TYPE_ITEM && !isEmpty(includedRouteTree)) {\r\n\t\t\tonChange(\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: includedRouteTree.key,\r\n\t\t\t\t\ttitle: includedRouteTree.title, \r\n\t\t\t\t\tmenu: includedRouteTree.subMenu,\r\n\t\t\t\t\ttranslateKey: includedRouteTree.translateKey\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [includedRouteTree.key])\r\n\t\r\n\r\n\treturn (\r\n\t\t<div {...rest}>\r\n\t\t\t<Logo \r\n\t\t\t\tmode={logoMode()} \r\n\t\t\t\ttype=\"streamline\"\r\n\t\t\t\tgutter={SIDE_NAV_CONTENT_GUTTER} \r\n\t\t\t/>\r\n\t\t\t<Menu\r\n\t\t\t\tclassName=\"px-4 pb-4\"\r\n\t\t\t\tvariant={navMode}\r\n\t\t\t\tdefaultActiveKeys={activeKeys || [includedRouteTree.key]}\r\n\t\t\t>\r\n\t\t\t\t{navigationConfig.map(nav =>  (\r\n\t\t\t\t\t<AuthorityCheck\r\n\t\t\t\t\t\tkey={nav.key} \r\n\t\t\t\t\t\tauthority={nav.authority}\r\n\t\t\t\t\t\tuserAuthority={userAuthority}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnav.subMenu && nav.subMenu.length > 0 ? \r\n\t\t\t\t\t\t\t<Menu.MenuItem \r\n\t\t\t\t\t\t\t\teventKey={nav.key} \r\n\t\t\t\t\t\t\t\tclassName=\"mb-2\"\r\n\t\t\t\t\t\t\t\tonSelect={() => handleMenuItemSelect({\r\n\t\t\t\t\t\t\t\t\tkey:nav.key, \r\n\t\t\t\t\t\t\t\t\ttitle:nav.title, \r\n\t\t\t\t\t\t\t\t\tmenu: nav.subMenu,\r\n\t\t\t\t\t\t\t\t\ttranslateKey: nav.translateKey\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div className=\"text-2xl\">\r\n\t\t\t\t\t\t\t\t\t{navigationIcon[nav.icon]}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Menu.MenuItem>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<Link \r\n\t\t\t\t\t\t\t\tto={nav.path}\r\n\t\t\t\t\t\t\t\tclassName=\"flex items-center h-full w-full\"\r\n\t\t\t\t\t\t\t\tonClick={() => handleLinkMenuItemSelect({\r\n\t\t\t\t\t\t\t\t\tkey:nav.key\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t> \r\n\t\t\t\t\t\t\t\t<Menu.MenuItem \r\n\t\t\t\t\t\t\t\t\teventKey={nav.key} \r\n\t\t\t\t\t\t\t\t\tclassName=\"mb-2\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-2xl\">\r\n\t\t\t\t\t\t\t\t\t\t{navigationIcon[nav.icon]}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Menu.MenuItem>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</AuthorityCheck>\r\n\t\t\t\t))}\r\n\t\t\t</Menu>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default StackedSideNavMini","import React from 'react'\r\nimport { Button } from 'components/ui'\r\nimport {\r\n\tHEADER_HEIGHT_CLASS,\r\n\tDIR_LTR,\r\n\tDIR_RTL\r\n} from 'constants/theme.constant'\r\nimport VerticalMenuContent from 'components/template/VerticalMenuContent'\r\nimport { \r\n\tHiOutlineArrowSmLeft,\r\n\tHiOutlineArrowSmRight\r\n} from 'react-icons/hi'\r\n\r\nconst StackedSideNavSecondary = props => {\r\n\r\n\tconst { \r\n\t\ttitle,\r\n\t\tmenu, \r\n\t\trouteKey, \r\n\t\tonCollapse, \r\n\t\tdirection, \r\n\t\tuserAuthority,\r\n\t\tnavMode,\r\n\t\t...rest \r\n\t} = props\r\n\r\n\tconst handleCollpase = () => {\r\n\t\tonCollapse()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div {...rest}>\r\n\t\t\t<div className={`${HEADER_HEIGHT_CLASS} flex items-center justify-between gap-4 pl-6 pr-4`}>\r\n\t\t\t\t<h5 className=\"font-bold\">{title}</h5>\r\n\t\t\t\t<Button \r\n\t\t\t\t\tshape=\"circle\" \r\n\t\t\t\t\tvariant=\"plain\" \r\n\t\t\t\t\tsize=\"sm\" \r\n\t\t\t\t\ticon={\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{direction === DIR_LTR && <HiOutlineArrowSmLeft />}\r\n\t\t\t\t\t\t\t{direction === DIR_RTL && <HiOutlineArrowSmRight />}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonClick={handleCollpase}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<VerticalMenuContent\r\n\t\t\t\trouteKey={routeKey}\r\n\t\t\t\tnavigationTree={menu}\r\n\t\t\t\tuserAuthority={userAuthority}\r\n\t\t\t\tnavMode={navMode}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default StackedSideNavSecondary","import React, { useState } from 'react'\r\nimport {\r\n\tNAV_MODE_THEMED,\r\n\tSPLITTED_SIDE_NAV_MINI_WIDTH,\r\n\tSPLITTED_SIDE_NAV_SECONDARY_WIDTH,\r\n\tDIR_LTR,\r\n\tDIR_RTL,\r\n\tNAV_MODE_TRANSPARENT\r\n} from 'constants/theme.constant'\r\nimport StackedSideNavMini from './StackedSideNavMini'\r\nimport StackedSideNavSecondary from './StackedSideNavSecondary'\r\nimport useResponsive from 'utils/hooks/useResponsive'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport { useSelector } from 'react-redux'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst stackedSideNavDefaultStyle = {\r\n\twidth: SPLITTED_SIDE_NAV_MINI_WIDTH\r\n}\r\n\r\nconst StackedSideNav = () => {\r\n\r\n\tconst { t } = useTranslation()\r\n\r\n\tconst [selectedMenu, setSelectedMenu] = useState({})\r\n\tconst [activeKeys, setActiveKeys] = useState()\r\n\t\r\n\tconst themeColor = useSelector(state => state.theme.themeColor)\r\n\tconst primaryColorLevel = useSelector(state => state.theme.primaryColorLevel)\r\n\tconst navMode = useSelector(state => state.theme.navMode)\r\n\tconst mode = useSelector(state => state.theme.mode)\r\n\tconst direction = useSelector(state => state.theme.direction)\r\n\tconst currentRouteKey = useSelector(state => state.base.common.currentRouteKey)\r\n\tconst userAuthority = useSelector((state) => state.auth.user.authority)\r\n\r\n\tconst { larger } = useResponsive()\r\n\r\n\tconst navColor = (navType, mode, ableTheme = true) => {\r\n\t\tif(navMode === NAV_MODE_THEMED && ableTheme ) {\r\n\t\t\treturn `bg-${themeColor}-${primaryColorLevel} ${navType}-${mode}`\r\n\t\t}\r\n\t\treturn `${navType}-${mode}`\r\n\t}\r\n\r\n\tconst handleChange = (selected) => {\r\n\t\tsetSelectedMenu(selected)\r\n\t}\r\n\r\n\tconst handleCollpase = () => {\r\n\t\tsetSelectedMenu({})\r\n\t\tsetActiveKeys([])\r\n\t}\r\n\r\n\tconst handleSetActiveKey = (key) => {\r\n\t\tsetActiveKeys(key)\r\n\t}\r\n\r\n\tconst stackedSideNavSecondaryDirStyle = () => {\r\n\t\tlet style = {}\r\n\t\tconst marginValue = `${-SPLITTED_SIDE_NAV_SECONDARY_WIDTH}px`\r\n\t\tif (direction === DIR_LTR) {\r\n\t\t\tstyle =  { marginLeft: marginValue}\r\n\t\t}\r\n\r\n\t\tif (direction === DIR_RTL) {\r\n\t\t\tstyle = { marginRight: marginValue}\r\n\t\t}\r\n\t\t\r\n\t\treturn style\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\tlarger.md && (\r\n\t\t\t\t\t<div className={`stacked-side-nav`}>\r\n\t\t\t\t\t\t<StackedSideNavMini\r\n\t\t\t\t\t\t\tclassName={`stacked-side-nav-mini ${navColor('stacked-side-nav-mini', navMode )}`}\r\n\t\t\t\t\t\t\tstyle={stackedSideNavDefaultStyle} \r\n\t\t\t\t\t\t\trouteKey={currentRouteKey}\r\n\t\t\t\t\t\t\tactiveKeys={activeKeys}\r\n\t\t\t\t\t\t\tnavMode={navMode}\r\n\t\t\t\t\t\t\tonChange={handleChange} \r\n\t\t\t\t\t\t\tonSetActiveKey={handleSetActiveKey}\r\n\t\t\t\t\t\t\tuserAuthority={userAuthority}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\tclassName={`stacked-side-nav-secondary ${navColor('stacked-side-nav-secondary', mode, false)}`}\r\n\t\t\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\twidth: SPLITTED_SIDE_NAV_SECONDARY_WIDTH,\r\n\t\t\t\t\t\t\t\t\t...(isEmpty(selectedMenu) ? stackedSideNavSecondaryDirStyle() : {})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{!isEmpty(selectedMenu) && (\r\n\t\t\t\t\t\t\t\t<StackedSideNavSecondary \r\n\t\t\t\t\t\t\t\t\ttitle={t(selectedMenu.translateKey, selectedMenu.title) }\r\n\t\t\t\t\t\t\t\t\tmenu={selectedMenu.menu}\r\n\t\t\t\t\t\t\t\t\trouteKey={currentRouteKey}\r\n\t\t\t\t\t\t\t\t\tnavMode={NAV_MODE_TRANSPARENT}\r\n\t\t\t\t\t\t\t\t\tonCollapse={handleCollpase}\r\n\t\t\t\t\t\t\t\t\tdirection={direction}\r\n\t\t\t\t\t\t\t\t\tuserAuthority={userAuthority}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default StackedSideNav","import React from \"react\";\r\nimport Header from \"components/template/Header\";\r\nimport SidePanel from \"components/template/SidePanel\";\r\nimport UserDropdown from \"components/template/UserDropdown\";\r\nimport LanguageSelector from \"components/template/LanguageSelector\";\r\nimport Notification from \"components/template/Notification\";\r\nimport MobileNav from \"components/template/MobileNav\";\r\nimport Search from \"components/template/Search\";\r\nimport StackedSideNav from \"components/template/StackedSideNav\";\r\nimport View from \"views\";\r\n\r\nconst HeaderActionsStart = () => {\r\n  return (\r\n    <>\r\n      <MobileNav />\r\n      <Search />\r\n    </>\r\n  );\r\n};\r\n\r\nconst HeaderActionsEnd = () => {\r\n  return (\r\n    <>\r\n      <LanguageSelector />\r\n      <Notification />\r\n      <SidePanel />\r\n      <UserDropdown hoverable={false} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst StackedSideLayout = () => {\r\n  return (\r\n    <div className=\"app-layout-stacked-side flex flex-auto flex-col\">\r\n      <div className=\"flex flex-auto min-w-0\">\r\n        <StackedSideNav />\r\n        <div className=\"flex flex-col flex-auto min-h-screen min-w-0 relative w-full\">\r\n          <Header\r\n            className=\"shadow dark:shadow-2xl\"\r\n            headerStart={<HeaderActionsStart />}\r\n            headerEnd={<HeaderActionsEnd />}\r\n          />\r\n          <div className=\"h-full flex flex-auto flex-col\">\r\n            <View />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StackedSideLayout;\r\n"],"names":["props","navMode","onChange","routeKey","activeKeys","onSetActiveKey","userAuthority","rest","mode","useSelector","state","theme","includedRouteTree","useMenuActive","navigationConfig","useEffect","type","NAV_ITEM_TYPE_ITEM","isEmpty","key","title","menu","subMenu","translateKey","Logo","NAV_MODE_THEMED","NAV_MODE_DARK","NAV_MODE_TRANSPARENT","gutter","SIDE_NAV_CONTENT_GUTTER","className","variant","defaultActiveKeys","nav","authority","length","eventKey","onSelect","handleMenuItemSelect","navigationIcon","icon","to","path","onClick","handleLinkMenuItemSelect","onCollapse","direction","HEADER_HEIGHT_CLASS","shape","size","DIR_LTR","DIR_RTL","VerticalMenuContent","navigationTree","stackedSideNavDefaultStyle","width","SPLITTED_SIDE_NAV_MINI_WIDTH","t","useTranslation","useState","selectedMenu","setSelectedMenu","setActiveKeys","themeColor","primaryColorLevel","currentRouteKey","base","common","auth","user","larger","useResponsive","navColor","navType","ableTheme","md","style","selected","SPLITTED_SIDE_NAV_SECONDARY_WIDTH","marginValue","marginLeft","marginRight","stackedSideNavSecondaryDirStyle","HeaderActionsStart","MobileNav","Search","HeaderActionsEnd","LanguageSelector","Notification","SidePanel","UserDropdown","hoverable","Header","headerStart","headerEnd"],"sourceRoot":""}
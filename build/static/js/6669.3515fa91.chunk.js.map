{"version":3,"file":"static/js/6669.3515fa91.chunk.js","mappings":"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","sources":["views/masters/insurances/Header.js","views/masters/insurances/addEdit.js","views/masters/insurances/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TableSearchBar from 'components/ui/TableSearchBar';\r\nimport { HiOutlinePlusCircle } from 'react-icons/hi';\r\nimport { GrPowerReset } from \"react-icons/gr\";\r\nimport { Button, Select } from 'components/ui';\r\nimport hasPermisson, { ACCESS, MODULE } from 'utils/hasPermission';\r\nimport { APIS, LIST_DATA_API_TYPE } from \"constants/api.constant\";\r\nimport { getApi } from 'services/CommonService';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst FilterSection = ({\r\n  setSearch,\r\n  filtervalue,\r\n  setFilterValue,\r\n  setFilterCompanyId,\r\n  filterCompanyId\r\n}) => {\r\n\r\n    const navigate = useNavigate();\r\n  \r\n  const user = useSelector((state) => state.auth.user);\r\n  \r\n  const [companyOptions, setCompanyOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCompanies = async () => {\r\n      try {\r\n        let response;\r\n\r\n        if (user?.companyId) {\r\n          response = await getApi(APIS.LIST_DATA, {\r\n            companyIds: JSON.stringify(user.companyId),\r\n            type: LIST_DATA_API_TYPE.COMPANY,\r\n          });\r\n        } else {\r\n          response = await getApi(APIS.LIST_DATA, { type: LIST_DATA_API_TYPE.COMPANY });\r\n        }\r\n\r\n        console.log(response?.data);\r\n        setCompanyOptions(response?.data?.data || []);\r\n        console.log(companyOptions)\r\n      } catch (error) {\r\n        console.error(\"Error loading company list:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCompanies();\r\n  }, [user]);\r\n\r\n  return (\r\n    <>\r\n      {/* <TableSearchBar onChange={(query) => setSearch(query)} /> */}\r\n      <div className=\"md:flex gap-4 w-full\">\r\n\r\n        <Select\r\n          autoComplete=\"off\"\r\n          placeholder=\"Filter by Company\"\r\n          defaultOptions\r\n          cacheOptions\r\n          size=\"sm\"\r\n          className=\"mb-4\"\r\n          value={filterCompanyId}\r\n          options={companyOptions}\r\n          getOptionLabel={(v) => `${v?.name || \"\"}`}\r\n          getOptionValue={(v) => v?._id}\r\n          onChange={(selectedCompany) => {\r\n            setFilterCompanyId(selectedCompany);\r\n            setFilterValue(\"\");\r\n          }}\r\n        />\r\n        <Button\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                setSearch(\"\");\r\n                setFilterCompanyId(null);\r\n                console.log(\"filterCompanyId\", filterCompanyId)\r\n                navigate(\"/app/masters/insurances\");\r\n              }}\r\n              icon={<GrPowerReset />}\r\n            >\r\n              Reset\r\n            </Button>\r\n\r\n      </div>\r\n\r\n      \r\n    </>\r\n\r\n  );\r\n};\r\n\r\nconst Header = ({\r\n  setSearch,\r\n  filtervalue,\r\n  setFilterValue,\r\n  setFilterCompanyId,\r\n  filterCompanyId,\r\n  addButtonClick }) => {\r\n  return (\r\n    <>\r\n      {hasPermisson(MODULE.INSURANCES, ACCESS.WRITE) && (\r\n        <div className=\"md:flex items-center justify-end\">\r\n          <Button size=\"sm\" variant=\"solid\" onClick={addButtonClick} icon={<HiOutlinePlusCircle />}>\r\n            Add Insurance\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <div className=\"flex flex-col\">\r\n        <FilterSection\r\n          setSearch = {setSearch}\r\n          filtervalue={filtervalue}\r\n          setFilterValue={setFilterValue}\r\n          setFilterCompanyId={setFilterCompanyId}\r\n          filterCompanyId={filterCompanyId}\r\n        />\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { AdaptableCard } from \"components/shared\";\r\nimport {\r\n  Button,\r\n  FormContainer,\r\n  toast,\r\n  Notification,\r\n  Card,\r\n  FormItem,\r\n  Input,\r\n  Select,\r\n} from \"components/ui\";\r\nimport { AiOutlineSave, AiOutlineCloseCircle } from \"react-icons/ai\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { getApi, postApi } from \"services/CommonService\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { APIS, LIST_DATA_API_TYPE } from \"constants/api.constant\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/bootstrap.css\";\r\nimport { useNavigate} from 'react-router-dom';\r\n\r\n\r\n\r\nconst FORM_FIELDS = [\r\n  {\r\n    label: \"Name\",\r\n    type: \"text\",\r\n    name: \"name\",\r\n    placeholder: \"Enter insurance name\",\r\n    component: Input,\r\n    isBasic: true,\r\n  },\r\n  {\r\n    name: \"phoneNumber\",\r\n    countryCode: \"countryCode\",\r\n    label: \"Mobile No.\",\r\n    component: \"phoneNumber\",\r\n    placeholder: \"Enter mobile no.\",\r\n  },\r\n  {\r\n    label: \"Email\",\r\n    name: \"email\",\r\n    placeholder: \"Enter Email\",\r\n    component: Input,\r\n    isBasic: true,\r\n  },\r\n  {\r\n    label: \"Address\",\r\n    name: \"address\",\r\n    placeholder: \"Enter Address\",\r\n    component: Input,\r\n    isBasic: true,\r\n  },\r\n\r\n];\r\n\r\n////// YUP VALIDATION //////\r\n\r\nconst Schema = Yup.object().shape({\r\n  name: Yup.string().required(\"Required\"),\r\n  email: Yup.string().email().required(\"Required\"),\r\n  phoneNumber: Yup.string().required(\"Required\"),\r\n  address: Yup.string().required(\"Required\"),\r\n});\r\n\r\n\r\n///// INITIAL VALUES //////\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  phoneNumber: \"\",\r\n  countryCode: \"+1\",\r\n  address: \"\",\r\n  companyId: \"\",\r\n};\r\n\r\nconst AddEditInsurance = ({ closeAddEdit, selectedRow }) => {\r\n  const savedHospitalId = localStorage.getItem(\"selectedHospitalId\");\r\n  // const [companyOptions, setCompanyOptionos] = useState([]);\r\n  const user = useSelector((state) => state.auth.user);\r\n  const navigate = useNavigate();\r\n  \r\n\r\n\r\n  // useEffect(() => {\r\n  //   if (user?.companyId) {\r\n  //     getApi(APIS.LIST_DATA, {\r\n  //       companyIds: JSON.stringify(user.companyId),\r\n  //       type: LIST_DATA_API_TYPE.COMPANY,\r\n  //     })\r\n  //       .then((res) => {\r\n  //         const response = res?.data?.data;\r\n\r\n  //         if (Array.isArray(response)) {\r\n  //           const companyOptions = response.map((company) => ({\r\n  //             label: company.name,\r\n  //             value: company._id,\r\n  //           }));\r\n  //           setCompanyOptionos(companyOptions);\r\n  //         }\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         // Handle any errors from the additional API call\r\n  //         console.error(\"Error calling additional API:\", error);\r\n  //       });\r\n  //   } else {\r\n  //     getApi(APIS.LIST_DATA, { type: LIST_DATA_API_TYPE.COMPANY })\r\n  //       .then((res) => {\r\n  //         if (res && res.data && Array.isArray(res.data.data)) {\r\n  //           const locations = res.data.data.map((location) => ({\r\n  //             label: location.name,\r\n  //             value: location._id,\r\n  //           }));\r\n  //           setCompanyOptionos(locations);\r\n  //         } else {\r\n  //           toast.push(<Notification type=\"error\">No Companies found!</Notification>);\r\n  //         }\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.error(\"Error fetching Companies:\", error);\r\n  //         toast.push(<Notification type=\"error\">Failed to load Companies</Notification>);\r\n  //       });\r\n  //   }\r\n\r\n  // }, []);\r\n  //// HANDLER FOR SUBMIT FORM /////\r\n  const onSubmit = (payload, { setSubmitting }) => {\r\n\r\n    const dataToSend = {}\r\n    // Remove Country code from phone number\r\n    dataToSend.phoneNumber = payload?.phoneNumber?.replace(\r\n      payload?.countryCode,\r\n      \"\"\r\n    );\r\n\r\n    // dataToSend.companyId = payload.companyId;\r\n    dataToSend.companyId = savedHospitalId;\r\n\r\n    if (!payload?.countryCode?.includes(\"+\")) {\r\n      dataToSend.countryCode = `+${payload.countryCode}`;\r\n    }\r\n\r\n    //Check for Empty Phone number\r\n    if (payload.phoneNumber === \"\") {\r\n      delete dataToSend.phoneNumber;\r\n    }\r\n\r\n    if (selectedRow) {\r\n      dataToSend.id = selectedRow._id\r\n    }\r\n\r\n    dataToSend.name = payload?.name\r\n    dataToSend.email = payload?.email\r\n    dataToSend.address = payload?.address\r\n    // dataToSend.companyId = savedHospitalId\r\n\r\n    postApi(APIS.ADD_EDIT_INSURANCE, dataToSend)\r\n      .then((res) => {\r\n        navigate(-1);\r\n        toast.push(\r\n          <Notification type=\"success\">Saved successfully</Notification>\r\n        );\r\n      }).catch(()=>{\r\n        setSubmitting(false)\r\n      })\r\n      .finally(() => {\r\n        // closeAddEdit();\r\n        setSubmitting(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <AdaptableCard>\r\n      <Formik\r\n        initialValues={selectedRow ? selectedRow : initialValues}\r\n        validationSchema={Schema}\r\n        onSubmit={onSubmit}\r\n        enableReinitialize\r\n      >\r\n        {({ errors, touched, values, isSubmitting, setFieldValue }) => (\r\n          <Form className=\"p-5\">\r\n            <div className=\"flex mb-3 justify-between w-3/4\">\r\n              <h3>{selectedRow ? \"Edit Insurance\" : \"Add Insurance\"}</h3>\r\n              <div className=\"flex\">\r\n                <Button\r\n                  size=\"sm\"\r\n                  className=\"ltr:mr-3 rtl:ml-3\"\r\n                  onClick={closeAddEdit}\r\n                  icon={<AiOutlineCloseCircle />}\r\n                  type=\"button\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  size=\"sm\"\r\n                  variant=\"solid\"\r\n                  loading={isSubmitting}\r\n                  icon={<AiOutlineSave />}\r\n                  type=\"submit\"\r\n                >\r\n                  {selectedRow ? \"Update\" : \"Save\"}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <Card className=\"mt-2.5 w-3/4 \">\r\n                <FormContainer className=\" md:w-full lg:w-1/2\">\r\n                  {/* <FormItem\r\n                    label=\"Company\"\r\n                    invalid={errors.companyId && touched.companyId}\r\n                    errorMessage={errors.companyId}\r\n                  >\r\n                    <Field name=\"companyId\">\r\n                      {({ field, form }) => (\r\n                        <Select\r\n                          {...field}\r\n                          options={companyOptions}\r\n                          placeholder=\"Select Company\"\r\n                          value={companyOptions.find(\r\n                            (option) => option.value === field.value\r\n                          )}\r\n                          onChange={(selectedOption) =>\r\n                            form.setFieldValue(\"companyId\", selectedOption.value)\r\n                          }\r\n                          onBlur={field.onBlur}\r\n                        />\r\n                      )}\r\n                    </Field>\r\n                  </FormItem> */}\r\n\r\n                  {FORM_FIELDS.map((field, index) => {\r\n                    return (\r\n                      <FormItem\r\n                        key={index}\r\n                        label={field?.label}\r\n                        invalid={errors?.[field.name] && touched?.[field.name]}\r\n                        errorMessage={errors?.[field.name]}\r\n                      >\r\n                        {field?.isBasic ? (\r\n                          <Field\r\n                            type={field.type}\r\n                            autoComplete=\"off\"\r\n                            onWheel={(e) =>\r\n                              field?.isWheel ? e.target.blur() : \"\"\r\n                            }\r\n                            value={values?.[field.name]}\r\n                            name={field.name}\r\n                            placeholder={field.placeholder}\r\n                            component={field?.component}\r\n                          />\r\n                        ) : (\r\n                          <>\r\n                            {field?.component === \"phoneNumber\" && (\r\n                              <PhoneInput\r\n                                inputStyle={{ width: \"369px\", padding: \"11px 14px 11px 60px\" }}\r\n                                enableSearch={true}\r\n                                country={\"us\"}\r\n                                countryCodeEditable\r\n                                value={`${values?.[field.name]}`}\r\n                                onChange={(phone, country) => {\r\n                                  setFieldValue(field.name, phone);\r\n                                  setFieldValue(field.countryCode, country?.dialCode);\r\n                                }}\r\n                              />\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </FormItem>\r\n\r\n                    );\r\n                  })}\r\n                </FormContainer>\r\n              </Card>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </AdaptableCard>\r\n  );\r\n};\r\n\r\nexport default AddEditInsurance;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getApi, postApi } from 'services/CommonService';\r\nimport { APIS, LIST_DATA_API_TYPE } from 'constants/api.constant';\r\nimport { AdaptableCard, DataTable } from 'components/shared';\r\nimport Header from './Header';\r\nimport { AiFillDelete } from 'react-icons/ai';\r\nimport { toast, Notification } from 'components/ui';\r\nimport ConfirmationContent from 'components/custom/ConfirmationContent';\r\nimport {\r\n  ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM,\r\n  DELETE_TOAST,\r\n  UPDATE_TOAST,\r\n} from 'constants/app.constant';\r\nimport { TABLE_ACTION_KEYS, CONFIRMATION_OBJ } from 'constants/app.constant';\r\nimport AddEditInsurance from './addEdit';\r\nimport ActiveInActiveCheckbox from 'components/custom/activeCheckbox';\r\nimport hasPermisson, { ACCESS, MODULE, newColumn } from 'utils/hasPermission';\r\nimport ActionColumn from 'components/custom/actionColumn';\r\n\r\nconst ACTION_CONSTANT = [\r\n  {\r\n    label: 'Edit',\r\n    key: TABLE_ACTION_KEYS.EDIT,\r\n    show: () => hasPermisson(MODULE.INSURANCES, ACCESS.WRITE),\r\n  },\r\n  {\r\n    label: <AiFillDelete style={{ fontSize: '1.2rem' }} />,\r\n    key: TABLE_ACTION_KEYS.DELETE,\r\n    toolTip: 'Delete',\r\n    show: () => hasPermisson(MODULE.INSURANCES, ACCESS.DELETE),\r\n  },\r\n];\r\n\r\nconst Insurances = () => {\r\n  const savedHospitalId = localStorage.getItem(\"selectedHospitalId\");\r\n  const [filterCompanyId, setFilterCompanyId] = useState([]);\r\n  const [tabledata, setTableData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [search, setSearch] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [isAddEdit, setIsAddEdit] = useState(false);\r\n  const [selectedRow, setSelectedRow] = useState('');\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [selectedData, setSelectedData] = useState('');\r\n  const [activeConfirm, setActiveConfirm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getApi(APIS.LIST_DATA, {\r\n      type : LIST_DATA_API_TYPE.INSURANCES,\r\n      limit,\r\n      search,\r\n      companyId: filterCompanyId?._id ?? savedHospitalId,\r\n      skip: limit * (page - 1),\r\n    })\r\n      .then((res) => {\r\n        setTableData(res?.data?.data);\r\n        setTotalCount(res?.data?.count);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [search, page, limit, refresh, filterCompanyId]);\r\n\r\n  const onActionHandle = (event, key, row) => {\r\n    setSelectedRow(row);\r\n    if (key === TABLE_ACTION_KEYS.EDIT) {\r\n      row.phoneNumber = row?.countryCode + row?.phoneNumber\r\n      setIsAddEdit(true);\r\n    }\r\n    if (key === TABLE_ACTION_KEYS.DELETE) {\r\n      setOpenModal(true);\r\n    }\r\n  };\r\n\r\n  const onDialogClose = () => {\r\n    setOpenModal(false);\r\n    setSelectedRow('');\r\n    setActiveConfirm(false);\r\n  };\r\n\r\n  const CONFIRMATION_CONSTANT = {\r\n    header: CONFIRMATION_OBJ.HEADER,\r\n    des: CONFIRMATION_OBJ.DELETE,\r\n    buttonLabel: 'Delete',\r\n  };\r\n\r\n  const onDialogOk = () => {\r\n    let toastMessage;\r\n    console.log('selectedRow', selectedRow)\r\n    const payload = {\r\n      type: LIST_DATA_API_TYPE.INSURANCES,\r\n      id: selectedRow?._id,\r\n    }\r\n    if (activeConfirm) {\r\n      toastMessage = UPDATE_TOAST;\r\n      payload.status = +selectedRow?.action;\r\n    \r\n    } else {\r\n      toastMessage = DELETE_TOAST;\r\n      payload.status = 0\r\n    }\r\n\r\n    postApi(APIS.BLOCK_DELETE_DATA, payload).then((res) => {\r\n      toast.push(<Notification type=\"success\">{toastMessage}</Notification>);\r\n      setRefresh((s) => !s);\r\n      onDialogClose();\r\n    });\r\n  };\r\n\r\n  const closeAddEdit = () => {\r\n    setIsAddEdit(false);\r\n    setRefresh(!refresh);\r\n    setSelectedRow('');\r\n  };\r\n\r\n  const columns = [\r\n  \r\n    {\r\n      Header: 'Company Name',\r\n      Cell: (props) => {\r\n        const row = props?.row?.original;\r\n        return <div className=\"flex items-center w-40\">{row?.name}</div>;\r\n      },\r\n    },\r\n    {\r\n      Header: 'Address',\r\n      accessor: 'address',\r\n      Cell: (props) => {\r\n        const row = props?.row?.original;\r\n        return (\r\n          <div className=\"flex items-center w-40\">\r\n            {row?.address}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      Header: 'Mobile',\r\n      accessor: 'mobile',\r\n      Cell: (props) => {\r\n        const row = props?.row?.original;\r\n        return (\r\n          <div className=\"flex items-center w-40\">\r\n            {row?.countryCode} - {row?.phoneNumber}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: 'Email',\r\n      accessor: 'email',\r\n      Cell: (props) => {\r\n        const row = props?.row?.original;\r\n        return (\r\n          <div className=\"flex items-center w-40\">\r\n            {row?.email}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n   \r\n   \r\n    {\r\n      Header: 'Active',\r\n      Cell: (props) => {\r\n        return (\r\n          <ActiveInActiveCheckbox\r\n            dataObj={props}\r\n            setSelectedData={setSelectedData}\r\n            setActiveConfirm={setActiveConfirm}\r\n            setOpenModal={setOpenModal}\r\n          />\r\n        );\r\n      },\r\n    },\r\n    {\r\n      Header: 'Actions',\r\n      id: 'action',\r\n      accessor: (row) => row,\r\n      Cell: (props) => (\r\n        <ActionColumn\r\n          row={props.row.original}\r\n          onActionHandle={onActionHandle}\r\n          actionsMenu={ACTION_CONSTANT}\r\n        />\r\n      ),\r\n    },\r\n    \r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {isAddEdit ? (\r\n        <AddEditInsurance closeAddEdit={closeAddEdit} selectedRow={selectedRow} />\r\n      ) : (\r\n        <>\r\n          <Header \r\n          setSearch={setSearch}\r\n          setFilterCompanyId={setFilterCompanyId}\r\n          filterCompanyId={filterCompanyId}\r\n          addButtonClick={() => setIsAddEdit(true)} />\r\n          <AdaptableCard className=\"h-full\" bodyClass=\"h-full\">\r\n            <DataTable\r\n              columns={newColumn(columns, MODULE.INSURANCES, 1)}\r\n              data={tabledata}\r\n              loading={loading}\r\n              skeletonAvatarColumns={[0]}\r\n              skeletonAvatarProps={{ width: 28, height: 28 }}\r\n              pagingData={{\r\n                pageIndex: page,\r\n                pageSize: limit,\r\n                total: totalCount,\r\n              }}\r\n              onPaginationChange={(limitpage) => setPage(limitpage)}\r\n              onSelectChange={(limitPage) => setLimit(limitPage)}\r\n            />\r\n          </AdaptableCard>\r\n\r\n          <ConfirmationContent\r\n            isOpen={openModal}\r\n            onConfirmClick={onDialogOk}\r\n            header={CONFIRMATION_CONSTANT.header}\r\n            des={\r\n              activeConfirm ? ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM?.des : CONFIRMATION_OBJ.DELETE\r\n            }\r\n            isWarning={!activeConfirm && CONFIRMATION_OBJ.WARNING}\r\n            onDialogClose={onDialogClose}\r\n            buttonLabel={\r\n              activeConfirm\r\n                ? ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM?.buttonLabel\r\n                : CONFIRMATION_CONSTANT.buttonLabel\r\n            }\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Insurances;\r\n"],"names":["FilterSection","setSearch","setFilterValue","filtervalue","setFilterCompanyId","filterCompanyId","navigate","useNavigate","user","useSelector","state","auth","useState","companyOptions","setCompanyOptions","useEffect","fetchCompanies","companyId","getApi","APIS","companyIds","JSON","stringify","type","LIST_DATA_API_TYPE","response","console","log","data","error","className","autoComplete","placeholder","defaultOptions","cacheOptions","size","value","options","getOptionLabel","v","name","getOptionValue","_id","onChange","selectedCompany","onClick","icon","addButtonClick","hasPermisson","MODULE","ACCESS","variant","FORM_FIELDS","label","component","Input","isBasic","countryCode","Schema","Yup","shape","required","email","phoneNumber","address","initialValues","closeAddEdit","selectedRow","savedHospitalId","localStorage","getItem","validationSchema","onSubmit","payload","setSubmitting","dataToSend","replace","includes","id","postApi","then","res","toast","catch","finally","enableReinitialize","errors","touched","values","isSubmitting","setFieldValue","loading","map","field","index","invalid","errorMessage","onWheel","e","isWheel","target","blur","inputStyle","width","padding","enableSearch","country","countryCodeEditable","phone","dialCode","ACTION_CONSTANT","key","TABLE_ACTION_KEYS","show","style","fontSize","toolTip","tabledata","setTableData","setLoading","search","page","setPage","totalCount","setTotalCount","limit","setLimit","isAddEdit","setIsAddEdit","setSelectedRow","openModal","setOpenModal","refresh","setRefresh","setSelectedData","activeConfirm","setActiveConfirm","skip","count","onActionHandle","event","row","onDialogClose","CONFIRMATION_CONSTANT","header","CONFIRMATION_OBJ","des","buttonLabel","columns","Header","Cell","props","original","accessor","dataObj","actionsMenu","bodyClass","newColumn","skeletonAvatarColumns","skeletonAvatarProps","height","pagingData","pageIndex","pageSize","total","onPaginationChange","limitpage","onSelectChange","limitPage","ConfirmationContent","isOpen","onConfirmClick","toastMessage","UPDATE_TOAST","status","action","DELETE_TOAST","s","ACTIVE_INACTIVE_STATUS_UPDATE_CONFIRM","isWarning"],"sourceRoot":""}
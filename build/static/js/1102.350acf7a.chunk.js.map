{"version":3,"file":"static/js/1102.350acf7a.chunk.js","mappings":"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","sources":["components/template/Logo.js","services/CommonService.js","utils/hooks/useTimeOutMessage.js","views/auth/ResetPassword/ResetPasswordForm.js","components/layout/AuthLayout/Simple.js","views/auth/ResetSimplePassword/ResetPasswordSimple.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { APP_NAME } from \"constants/app.constant\";\n\nexport const LOGO_SRC_PATH = \"/img/logo/\";\n\nconst Logo = (props) => {\n  const {\n    type,\n    mode,\n    gutter,\n    className,\n    imgClass,\n    style,\n    logoWidth,\n    imgHeight = 100,\n    imgWidth = 100,\n  } = props;\n\n  return (\n    <div\n      className={classNames(\"logo\", className, gutter)}\n      style={{\n        ...style,\n        ...{ width: logoWidth },\n      }}\n    >\n      <img\n        className={imgClass}\n        src={`${LOGO_SRC_PATH}app-logo2.png`}\n        alt={`${APP_NAME} logo`}\n        style={{ width: imgWidth, height: imgHeight}}\n      />\n    </div>\n  );\n};\n\nLogo.defaultProps = {\n  mode: \"light\",\n  type: \"full\",\n  logoWidth: \"auto\",\n};\n\nLogo.propTypes = {\n  mode: PropTypes.oneOf([\"light\", \"dark\"]),\n  type: PropTypes.oneOf([\"full\", \"streamline\"]),\n  gutter: PropTypes.string,\n  imgClass: PropTypes.string,\n  logoWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default Logo;\n","import ApiService from \"./ApiService\"\nimport BaseService from \"./BaseService\";\n\nexport function getApi(endpoint, params) {\n  return BaseService.get(endpoint, { params }).then((res) => res?.data);\n}\n\nexport function postApi(endpoint, payload) {\n  return BaseService.post(endpoint, payload).then((res) => res?.data);\n}\n\nexport async function apiGetNotificationCount () {\n    return ApiService.fetchData({\n        url: '/notification/count',\n        method: 'get'\n    })\n}\n\nexport async function apiGetNotificationList () {\n    return ApiService.fetchData({\n        url: '/notification/list',\n        method: 'get'\n    })\n}\n\nexport async function apiGetSearchResult (data) {\n    return ApiService.fetchData({\n        url: '/search/query',\n        method: 'post',\n        data\n    })\n}","import { useEffect, useState } from 'react'\n\nfunction useTimeOutMessage(interval = 3000) {\n\n    const [message, setMessage] = useState('')\n\n    useEffect(() => {\n        if (message) {\n            let timeout = setTimeout(() => setMessage(''), interval)\n            return () => {\n                clearTimeout(timeout)\n            }\n\t\t}\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [message])\n                                              \n    return [message, setMessage]\n}\n\nexport default useTimeOutMessage","import React, { useState } from \"react\";\nimport {\n  Button,\n  FormItem,\n  FormContainer,\n  Alert,\n  toast,\n  Notification,\n} from \"components/ui\";\nimport { PasswordInput } from \"components/shared\";\nimport useTimeOutMessage from \"utils/hooks/useTimeOutMessage\";\nimport { Field, Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport { postApi } from \"services/CommonService\";\nimport { APIS } from \"constants/api.constant\";\n\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .required(\"Please enter a password\")\n    .min(8, \"Password must have at least 8 characters\"),\n  confirmPassword: Yup.string().oneOf(\n    [Yup.ref(\"password\"), null],\n    \"Your passwords do not match\"\n  ),\n});\n\nconst initialValues = {\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nconst ResetPasswordForm = (props) => {\n  const { id } = useParams();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const userType = searchParams.get(\"userType\");\n  const { disableSubmit = false, className, signInUrl = \"/sign-in\" } = props;\n  const [resetComplete, setResetComplete] = useState(false);\n  const [message, setMessage] = useTimeOutMessage();\n\n  const onSubmit = (values, { setSubmitting, resetForm }) => {\n    setSubmitting(true);\n    const { password } = values;\n    const payload = {\n      id: id,\n      userType: +userType,\n      password: password,\n    };\n\n    postApi(APIS.UPDATE_PASSOWRD, { ...payload })\n      .then((res) => {\n        toast.push(\n          <Notification type=\"success\">Changed Successfully</Notification>\n        );\n        setResetComplete(true);\n        resetForm();\n      })\n      .finally(() => {\n        setSubmitting(false);\n      });\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"mb-6\">\n        {resetComplete ? (\n          <>\n            <h3 className=\"mb-1\">Reset done</h3>\n            <p>Your password has been successfully reset</p>\n          </>\n        ) : (\n          <>\n            <h3 className=\"mb-1\">Set new password</h3>\n            <p>Your new password must different to previous password</p>\n          </>\n        )}\n      </div>\n      {message && (\n        <Alert className=\"mb-4\" type=\"danger\" showIcon>\n          {message}\n        </Alert>\n      )}\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ touched, errors, isSubmitting }) => (\n          <Form>\n            <FormContainer>\n              <>\n                <FormItem\n                  label=\"Password\"\n                  invalid={errors.password && touched.password}\n                  errorMessage={errors.password}\n                >\n                  <Field\n                    autoComplete=\"off\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    component={PasswordInput}\n                  />\n                </FormItem>\n                <FormItem\n                  label=\"Confirm Password\"\n                  invalid={errors.confirmPassword && touched.confirmPassword}\n                  errorMessage={errors.confirmPassword}\n                >\n                  <Field\n                    autoComplete=\"off\"\n                    name=\"confirmPassword\"\n                    placeholder=\"Confirm Password\"\n                    component={PasswordInput}\n                  />\n                </FormItem>\n                <Button\n                  block\n                  loading={isSubmitting}\n                  variant=\"solid\"\n                  type=\"submit\"\n                >\n                  {isSubmitting ? \"Submiting...\" : \"Submit\"}\n                </Button>\n              </>\n            </FormContainer>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default ResetPasswordForm;\n","import React, { cloneElement } from 'react'\nimport { Container } from 'components/shared'\nimport { Card } from 'components/ui'\nimport Logo from 'components/template/Logo'\n\nconst Simple = ({children, content, ...rest }) => {\n\treturn (\n\t\t<div className=\"h-full\">\n\t\t\t<Container className=\"flex flex-col flex-auto items-center justify-center min-w-0 h-full\">\n\t\t\t\t<Card className=\"min-w-[320px] md:min-w-[450px]\" bodyClass=\"md:p-10\">\n\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t<Logo type=\"streamline\" imgClass=\"mx-auto\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t{content}\n\t\t\t\t\t\t{children ? cloneElement(children, {contentClassName: 'text-center', ...rest }) : null}\n\t\t\t\t\t</div>\n\t\t\t\t</Card>\n\t\t\t</Container>\n\t\t</div>\n\t)\n}\n\nexport default Simple","import React from 'react'\nimport ResetPasswordForm from 'views/auth/ResetPassword/ResetPasswordForm'\nimport Simple from 'components/layout/AuthLayout/Simple'\n\nconst ResetPasswordSimple = props => {\n\treturn (\n\t\t<Simple>\n\t\t\t<ResetPasswordForm disableSubmit={true} signInUrl=\"/auth/sign-in-simple\" {...props}/>\n\t\t</Simple>\n\t)\n}\n\nexport default ResetPasswordSimple"],"names":["LOGO_SRC_PATH","Logo","props","type","mode","gutter","className","imgClass","style","logoWidth","imgHeight","imgWidth","classNames","width","src","alt","APP_NAME","height","defaultProps","getApi","endpoint","params","BaseService","then","res","data","postApi","payload","apiGetSearchResult","ApiService","url","method","interval","useState","message","setMessage","useEffect","timeout","setTimeout","clearTimeout","validationSchema","Yup","shape","password","required","min","confirmPassword","oneOf","initialValues","id","useParams","useSearchParams","searchParams","userType","get","disableSubmit","signInUrl","resetComplete","setResetComplete","useTimeOutMessage","showIcon","onSubmit","values","setSubmitting","resetForm","APIS","toast","finally","touched","errors","isSubmitting","label","invalid","errorMessage","autoComplete","name","placeholder","component","PasswordInput","block","loading","variant","children","content","rest","bodyClass","cloneElement","contentClassName"],"sourceRoot":""}